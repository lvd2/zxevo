06.01.2012, lvd:


think of overscreen AVR display


AVR access to SDcard



03.01.2012, lvd:

x640 ham mode:

00rrggbb load two pixels colors (x320 truъ color)

0101RRrr modify (XOR or ADD) color components of adjacent x640 pixels
0110RRgg
0111RRbb
1001GGrr
1010GGgg
1011GGbb
1101BBrr
1110BBgg
1111BBbb

0100xxxx ?
1000xxxx ?
1100xxxx ?

screen format ?
320x200 or 256x192
if 320x200, which organization?
320x200 variants: 320 bytes per line, 512 bytes per line, ???

in parallel, we can have paletted x640 16c mode with byte format
like current x320 or x256 16c



one-page textmode in outter memory (off 128k)

just displacements +0, +1000, +2000, +3000, same format as ATM text mode

was (not accounting for attr shift):
evensyms: 5 (7) +0000
oddsyms:  5 (7) +2000
evenattr: 1 (3) +0000
oddattr:  1 (3) +2000

will be:
evensyms: 8 (10) +0000
oddsyms:  8 (10) +1000
evenattr: 8 (10) +2001
oddattr:  8 (10) +3000

rendering sequence:
es oa os+ea  or es os+
OR
es os oa+ea

counter: es ea os oa
         00 01 10 11



ЫDE fix



11.06.2011, lvd:

14mhz turbo mode

Чтение из RAM - 4+ такта fpga, запись - 1+ такт fpga

темп чтения и записи - раз в 4 такта fpga

темп процессора (пиковый) - раз в 3 такта CPU = раз в 6 тактов fpga


При переключении 14->ниже могут уже закончиться все свободные слоты обращений к памяти,
и потому надо при переключении это учитывать (как?)




(в порядке бреда)
про кэш:

1. 2 кусочка по 256 байт из 1 штуки памяти
2. на каждый кусочек - тэг 8бит и общий бит валидности
3. на каждый ворд из всех 256 - свой бит валидности. при необходимости можно играться - 
   делать больше кусочков, но в сумме меньше вордов, чтобы сэкономить биты валидности на
   каждый ворд.
4. условия заполнения кеша: 
  1) чтение по M1 - если теги не совпадают, выбирается одна из 2 половинок (по какой-либо
     методике), переписывается тэг, инвалидируются все ворды, новый ворд пишется, половинка
     маркируется в целом валидной.
  2) чтение не по М1 - если попадает в кеш, то слово валидируется, если не попадает - игнор.
  3) запись, попадая в кеш, инвалидирует слово
5. условия инвалидации кеша
  1) любая запись в порты (или в некоторые порты) инвалидирует весь кеш
  2) исполнение из пзу инвалидирует кеш

