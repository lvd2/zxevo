
AVRASM ver. 1.77.3 TRYFLASH.asm Sun Jan 10 19:53:04 2010


000059   +          OUTPORT UBRR1H,NULL
00005c   +          OUTPORT UBRR1L,TEMP
00005e   +          OUTPORT UCSR1A,NULL
000061   +          OUTPORT UCSR1C,TEMP
000064   +          OUTPORT UCSR1B,TEMP
000072   +          OUTPORT PORTG,TEMP
000075   +          OUTPORT DDRG,TEMP
000078   +          OUTPORT PORTF,TEMP
00007a   +          OUTPORT DDRF,TEMP
00007d   +          OUTPORT PORTE,TEMP
000080   +          OUTPORT DDRE,TEMP
000083   +          OUTPORT PORTD,TEMP
000086   +          OUTPORT DDRD,TEMP
000089   +          OUTPORT PORTC,TEMP
00008c   +          OUTPORT DDRC,TEMP
00008f   +          OUTPORT PORTB,TEMP
000092   +          OUTPORT DDRB,TEMP
000095   +          OUTPORT PORTA,TEMP
000098   +          OUTPORT DDRA,TEMP
0000a0   +          INPORT  TEMP,DDRF
0000a3   +          OUTPORT DDRF,TEMP
0000a8   +          INPORT  TEMP,DDRF
0000ab   +          OUTPORT DDRF,TEMP
0000ad   +  LDFPGA2:INPORT  DATA,PINF
0000b1   +          LDIZ    PACKED_FPGA*2
0000b3   +          LDIY    BUFFER
0000be   +          ADDI    YH,HIGH(BUFFER) ;
000100   +          ADDI    XH,HIGH(BUFFER) ;
000109   +          ADDI    YH,HIGH(BUFFER) ;
00010d   +  qwertyu:inport  DATA,PINF
000115   +          LDIZ    MSG_ID_FLASH*2
00011f   +          LDIZ    MSG_F_ERASE*2
000123   +          LDIZ    MSG_F_WRITE*2
000126   +          LDIZ    ROM*2
000129   +          LDIY    $0000
00012c   +          LDIY    $0001
00012f   +          LDIY    $0002
000132   +          LDIY    $0003
000135   +          LDIY    $0004
000138   +          LDIY    $0005
00013b   +          LDIY    $0006
00013e   +          LDIY    $0007
000141   +          LDIY    $0008
000144   +          LDIY    $0009
000147   +          LDIY    $000A
00014a   +          LDIY    $000B
00014d   +          LDIY    $000C
000150   +          LDIY    $000D
000153   +          LDIY    $000E
000156   +          LDIY    $000F
00015a   +          LDIZ    MSG_F_COMPLETE*2
0001f2   +          SS_SET
0001f6   +          SS_CLR
0001fc   +          SS_SET
000205   +          ADDI    DATA,$07
000206   +  HEXBYT1:ADDI    DATA,$30
000208   +  WRU_1:  INPORT  TEMP,UCSR1A
00020c   +          OUTPORT UDR1,DATA
          .LISTMAC
         
          .DEF    FF_FL   =R08
          .DEF    FF      =R13    ;всегда = $FF
          .DEF    ONE     =R14    ;всегда = $01
          .DEF    NULL    =R15    ;всегда = $00
          .DEF    DATA    =R16
          .DEF    TEMP    =R17
          .DEF    COUNT   =R18
          .DEF    BITS    =R19
         ;локально используются: R0,R1,R20,R21,R24,R25
         
          .EQU    DBSIZE_HI       =HIGH(4096)
          .EQU    DBMASK_HI       =HIGH(4095)
          .EQU    nCONFIG         =PORTF0
          .EQU    nSTATUS         =PORTF1
          .EQU    CONF_DONE       =PORTF2
         
          .EQU    SD_DATA         =$57
          .EQU    FLASH_LOADDR    =$F0
          .EQU    FLASH_MIDADDR   =$F1
          .EQU    FLASH_HIADDR    =$F2
          .EQU    FLASH_DATA      =$F3
          .EQU    FLASH_CTRL      =$F4
          .EQU    SCR_LOADDR      =$40
          .EQU    SCR_HIADDR      =$41
          .EQU    SCR_CHAR        =$44
         
          .MACRO  SS_SET
                  SBI     PORTB,0
          .ENDMACRO
         
          .MACRO  SS_CLR
                  CBI     PORTB,0
          .ENDMACRO
         
         
          .DSEG
                  .ORG    $0100
          BUFFER:                 ;главный буфер
         ;F_ADDR0:.BYTE   1
         ;F_ADDR1:.BYTE   1
         ;F_ADDR2:.BYTE   1
         
          .CSEG
                  .ORG    0
000000 940c 0048         JMP     START
000002 940c 0048         JMP     START   ;EXT_INT0 ; IRQ0 Handler
000004 940c 0048         JMP     START   ;EXT_INT1 ; IRQ1 Handler
000006 940c 0048         JMP     START   ;EXT_INT2 ; IRQ2 Handler
000008 940c 0048         JMP     START   ;EXT_INT3 ; IRQ3 Handler
00000a 940c 0048         JMP     START   ;EXT_INT4 ; IRQ4 Handler
00000c 940c 0048         JMP     START   ;EXT_INT5 ; IRQ5 Handler
00000e 940c 0048         JMP     START   ;EXT_INT6 ; IRQ6 Handler
000010 940c 0048         JMP     START   ;EXT_INT7 ; IRQ7 Handler
000012 940c 0048         JMP     START   ;TIM2_COMP ; Timer2 Compare Handler
000014 940c 0048         JMP     START   ;TIM2_OVF ; Timer2 Overflow Handler
000016 940c 0048         JMP     START   ;TIM1_CAPT ; Timer1 Capture Handler
000018 940c 0048         JMP     START   ;TIM1_COMPA ; Timer1 CompareA Handler
00001a 940c 0048         JMP     START   ;TIM1_COMPB ; Timer1 CompareB Handler
00001c 940c 0048         JMP     START   ;TIM1_OVF ; Timer1 Overflow Handler
00001e 940c 0048         JMP     START   ;TIM0_COMP ; Timer0 Compare Handler
000020 940c 0048         JMP     START   ;TIM0_OVF ; Timer0 Overflow Handler
000022 940c 0048         JMP     START   ;SPI_STC ; SPI Transfer Complete Handler
000024 940c 0048         JMP     START   ;USART0_RXC ; USART0 RX Complete Handler
000026 940c 0048         JMP     START   ;USART0_DRE ; USART0,UDR Empty Handler
000028 940c 0048         JMP     START   ;USART0_TXC ; USART0 TX Complete Handler
00002a 940c 0048         JMP     START   ;ADC ; ADC Conversion Complete Handler
00002c 940c 0048         JMP     START   ;EE_RDY ; EEPROM Ready Handler
00002e 940c 0048         JMP     START   ;ANA_COMP ; Analog Comparator Handler
000030 940c 0048         JMP     START   ;TIM1_COMPC ; Timer1 CompareC Handler
000032 940c 0048         JMP     START   ;TIM3_CAPT ; Timer3 Capture Handler
000034 940c 0048         JMP     START   ;TIM3_COMPA ; Timer3 CompareA Handler
000036 940c 0048         JMP     START   ;TIM3_COMPB ; Timer3 CompareB Handler
000038 940c 0048         JMP     START   ;TIM3_COMPC ; Timer3 CompareC Handler
00003a 940c 0048         JMP     START   ;TIM3_OVF ; Timer3 Overflow Handler
00003c 940c 0048         JMP     START   ;USART1_RXC ; USART1 RX Complete Handler
00003e 940c 0048         JMP     START   ;USART1_DRE; USART1,UDR Empty Handler
000040 940c 0048         JMP     START   ;USART1_TXC ; USART1 TX Complete Handler
000042 940c 0048         JMP     START   ;TWI_INT ; Two-wire Serial Interface Interrupt Handler
000044 940c 0048         JMP     START   ;SPM_RDY ; SPM Ready Handler
         
                  .DW     0,0
000046 0000
000047 0000
         ;
000048 94f8      START:  CLI
000049 24ff              CLR     NULL
00004a e011              LDI     TEMP,$01
00004b 2ee1              MOV     ONE,TEMP
00004c ef1f              LDI     TEMP,$FF
00004d 2ed1              MOV     FF,TEMP
         ;WatchDog OFF, если вдруг включен
00004e e11f              LDI     TEMP,0B00011111
00004f bd11              OUT     WDTCR,TEMP
000050 bcf1              OUT     WDTCR,NULL
         ;будем юзать стек
000051 ef1f              LDI     TEMP,LOW(RAMEND)
000052 bf1d              OUT     SPL,TEMP
000053 e110              LDI     TEMP,HIGH(RAMEND)
000054 bf1e              OUT     SPH,TEMP
         ;SPI init
000055 e011              LDI     TEMP,(1<<SPI2X)
000056 b91e              OUT     SPSR,TEMP
000057 e710              LDI     TEMP,(1<<SPE)|(1<<DORD)|(1<<MSTR)|(0<<CPOL)|(0<<CPHA)
000058 b91d              OUT     SPCR,TEMP
         ;UART1 Set baud rate
000059   +          OUTPORT UBRR1H,NULL
000059 92f0 0098         STS     ubrr1h+$20*(ubrr1h<$40),null
          .ENDMACRO
00005b e015              LDI     TEMP,5     ;115200 baud, 11059.2 kHz, Normal speed
00005c   +          OUTPORT UBRR1L,TEMP
00005c 9310 0099         STS     ubrr1l+$20*(ubrr1l<$40),temp
          .ENDMACRO
         ;UART1 Normal Speed
00005e   +          OUTPORT UCSR1A,NULL
00005e 92f0 009b         STS     ucsr1a+$20*(ucsr1a<$40),null
          .ENDMACRO
         ;UART1 data8bit, 2stopbits
000060 e01e              LDI     TEMP,(1<<UCSZ1)|(1<<UCSZ0)|(1<<USBS)
000061   +          OUTPORT UCSR1C,TEMP
000061 9310 009d         STS     ucsr1c+$20*(ucsr1c<$40),temp
          .ENDMACRO
         ;UART1 Разрешаем передачу
000063 e018              LDI     TEMP,(1<<TXEN)
000064   +          OUTPORT UCSR1B,TEMP
000064 9310 009a         STS     ucsr1b+$20*(ucsr1b<$40),temp
          .ENDMACRO
         
         
         ;юўш∙рхь эрїєщ тё■ ярь Є№ ш тёх ЁхушёЄЁ√
         
000066 e1ed              ldi     r30,29
000067 e0f0              ldi     r31,0
          clr1:
000068 83f0              st      Z,r31
000069 95ea              dec     r30
00006a f7ea              brpl    clr1
         
00006b e0e0              ldi     r30,0
00006c e0f1              ldi     r31,1 ; $0100
          clr2:
00006d 8200              st      Z,r0
00006e 9631              adiw    r30,1
00006f 31f1              cpi     r31,$11 ; <$1100
000070 f7e1              brne    clr2
         
         
         
         ;
000071 ef1f              LDI     TEMP,      0B11111111
000072   +          OUTPORT PORTG,TEMP
000072 9310 0065         STS     portg+$20*(portg<$40),temp
          .ENDMACRO
000074 e010              LDI     TEMP,      0B00000000
000075   +          OUTPORT DDRG,TEMP
000075 9310 0064         STS     ddrg+$20*(ddrg<$40),temp
          .ENDMACRO
         
000077 e018              LDI     TEMP,      0B00001000
000078   +          OUTPORT PORTF,TEMP
000078 9310 0062         STS     portf+$20*(portf<$40),temp
          .ENDMACRO
00007a   +          OUTPORT DDRF,TEMP
00007a 9310 0061         STS     ddrf+$20*(ddrf<$40),temp
          .ENDMACRO
         
00007c ef1f              LDI     TEMP,      0B11111111
00007d   +          OUTPORT PORTE,TEMP
00007d 9310 0023         STS     porte+$20*(porte<$40),temp
          .ENDMACRO
00007f e010              LDI     TEMP,      0B00000000
000080   +          OUTPORT DDRE,TEMP
000080 9310 0022         STS     ddre+$20*(ddre<$40),temp
          .ENDMACRO
         
000082 ef1f              LDI     TEMP,      0B11111111
000083   +          OUTPORT PORTD,TEMP
000083 9310 0032         STS     portd+$20*(portd<$40),temp
          .ENDMACRO
000085 e010              LDI     TEMP,      0B00000000
000086   +          OUTPORT DDRD,TEMP
000086 9310 0031         STS     ddrd+$20*(ddrd<$40),temp
          .ENDMACRO
         
000088 ed1f              LDI     TEMP,      0B11011111
000089   +          OUTPORT PORTC,TEMP
000089 9310 0035         STS     portc+$20*(portc<$40),temp
          .ENDMACRO
00008b e010              LDI     TEMP,      0B00000000
00008c   +          OUTPORT DDRC,TEMP
00008c 9310 0034         STS     ddrc+$20*(ddrc<$40),temp
          .ENDMACRO
         
00008e e719              LDI     TEMP,      0B01111001
00008f   +          OUTPORT PORTB,TEMP
00008f 9310 0038         STS     portb+$20*(portb<$40),temp
          .ENDMACRO
000091 e817              LDI     TEMP,      0B10000111
000092   +          OUTPORT DDRB,TEMP
000092 9310 0037         STS     ddrb+$20*(ddrb<$40),temp
          .ENDMACRO
         
000094 ef1f              LDI     TEMP,      0B11111111
000095   +          OUTPORT PORTA,TEMP
000095 9310 003b         STS     porta+$20*(porta<$40),temp
          .ENDMACRO
000097 e010              LDI     TEMP,      0B00000000
000098   +          OUTPORT DDRA,TEMP
000098 9310 003a         STS     ddra+$20*(ddra<$40),temp
          .ENDMACRO
         ;SPI init
00009a e011              LDI     TEMP,(1<<SPI2X)
00009b b91e              OUT     SPSR,TEMP
00009c e710              LDI     TEMP,(1<<SPE)|(1<<DORD)|(1<<MSTR)|(0<<CPOL)|(0<<CPHA)
00009d b91d              OUT     SPCR,TEMP
         
         ;        SBIC    PINC,5
          ;       RJMP    UP12
           ;      SBI     PORTB,7
         ;UP11:   SBIS    PINC,5
          ;       RJMP    UP11
           ;      CBI     PORTB,7
         ;UP12:
         
         
         
00009e e00a              ldi DATA,10
00009f d176              rcall DELAY
         
         
         
         
         
         
0000a0   +          INPORT  TEMP,DDRF
0000a0 9110 0061         LDS     temp,ddrf+$20*(ddrf<$40)
          .ENDMACRO
0000a2 6011              SBR     TEMP,(1<<nCONFIG)
0000a3   +          OUTPORT DDRF,TEMP
0000a3 9310 0061         STS     ddrf+$20*(ddrf<$40),temp
          .ENDMACRO
         
0000a5 e913              LDI     TEMP,147 ;40 us @ 11.0592 MHz
0000a6 951a      LDFPGA1:DEC     TEMP    ;1
0000a7 f7f1              BRNE    LDFPGA1 ;2
         
0000a8   +          INPORT  TEMP,DDRF
0000a8 9110 0061         LDS     temp,ddrf+$20*(ddrf<$40)
          .ENDMACRO
0000aa 7f1e              CBR     TEMP,(1<<nCONFIG)
0000ab   +          OUTPORT DDRF,TEMP
0000ab 9310 0061         STS     ddrf+$20*(ddrf<$40),temp
          .ENDMACRO
         
0000ad   +  LDFPGA2:INPORT  DATA,PINF
0000ad 9100 0020         LDS     data,pinf+$20*(pinf<$40)
          .ENDMACRO
0000af 7002              ANDI    DATA,(1<<nSTATUS)
0000b0 f3e1              BREQ    LDFPGA2
         
0000b1   +          LDIZ    PACKED_FPGA*2
0000b1 e8e2              LDI     ZL,LOW(packed_fpga*0x2)
0000b2 e0f4              LDI     ZH,HIGH(packed_fpga*0x2)
          .ENDMACRO
0000b3   +          LDIY    BUFFER
0000b3 e0c0              LDI     YL,LOW(buffer)
0000b4 e0d1              LDI     YH,HIGH(buffer)
          .ENDMACRO
                                                 ;A=DATA; A'=TEMP; B=R21; C=R20;
         ;deMLZ                                  ;DEC40
         ;(не трогаем стек! всё ОЗУ под буфер)
0000b5 e810              LDI     TEMP,$80                ;        LD      A,#80
                                                 ;        EX      AF,AF'--------
0000b6 9005      MS:     LPM     R0,Z+                   ;MS      LDI
0000b7 9209              ST      Y+,R0
         ;-begin-PUT_BYTE_1---
0000b8 b80f              OUT     SPDR,R0
0000b9 b01e      PUTB1:  IN      R1,SPSR
0000ba fe17              SBRS    R1,SPIF
0000bb cffd              RJMP    PUTB1
         ;-end---PUT_BYTE_1---
0000bc 50d1              SUBI    YH,HIGH(BUFFER) ;
0000bd 70df              ANDI    YH,DBMASK_HI    ;Y warp
0000be   +          ADDI    YH,HIGH(BUFFER) ;
0000be 5fdf              SUBI    yh,(-high(buffer)&$FF)
          .ENDMACRO
0000bf e052      M0:     LDI     R21,$02                 ;M0      LD      BC,#2FF
0000c0 ef4f              LDI     R20,$FF
          M1:                                     ;M1      EX      AF,AF'--------
0000c1 0f11      M1X:    ADD     TEMP,TEMP               ;M1X     ADD     A,A
0000c2 f411              BRNE    M2                      ;        JR      NZ,M2
0000c3 9115              LPM     TEMP,Z+                 ;        LD      A,(HL)
                                                 ;        INC     HL
0000c4 1f11              ROL     TEMP                    ;        RLA
0000c5 1f44      M2:     ROL     R20                     ;M2      RL      C
0000c6 f7d0              BRCC    M1X                     ;        JR      NC,M1X
                                                 ;        EX      AF,AF'--------
0000c7 955a              DEC     R21                     ;        DJNZ    X2
0000c8 f449              BRNE    X2
0000c9 e002              LDI     DATA,2                  ;        LD      A,2
0000ca 9545              ASR     R20                     ;        SRA     C
0000cb f080              BRCS    N1                      ;        JR      C,N1
0000cc 9503              INC     DATA                    ;        INC     A
0000cd 9543              INC     R20                     ;        INC     C
0000ce f051              BREQ    N2                      ;        JR      Z,N2
0000cf e053              LDI     R21,$03                 ;        LD      BC,#33F
0000d0 e34f              LDI     R20,$3F
0000d1 cfef              RJMP    M1                      ;        JR      M1
                                                 ;
0000d2 955a      X2:     DEC     R21                     ;X2      DJNZ    X3
0000d3 f4b1              BRNE    X3
0000d4 9546              LSR     R20                     ;        SRL     C
0000d5 f300              BRCS    MS                      ;        JR      C,MS
0000d6 9553              INC     R21                     ;        INC     B
0000d7 cfe9              RJMP    M1                      ;        JR      M1
          X6:                                     ;X6
0000d8 0f04              ADD     DATA,R20                ;        ADD     A,C
0000d9 e054      N2:     LDI     R21,$04                 ;N2
0000da ef4f              LDI     R20,$FF                 ;        LD      BC,#4FF
0000db cfe5              RJMP    M1                      ;        JR      M1
          N1:                                     ;N1
0000dc 9543              INC     R20                     ;        INC     C
0000dd f4d1              BRNE    M4                      ;        JR      NZ,M4
                                                 ;        EX      AF,AF'--------
0000de 9553              INC     R21                     ;        INC     B
0000df 9547      N5:     ROR     R20                     ;N5      RR      C
0000e0 f160              BRCS    DEMLZEND                ;        RET     C
0000e1 1f55              ROL     R21                     ;        RL      B
0000e2 0f11              ADD     TEMP,TEMP               ;        ADD     A,A
0000e3 f411              BRNE    N6                      ;        JR      NZ,N6
0000e4 9115              LPM     TEMP,Z+                 ;        LD      A,(HL)
                                                 ;        INC     HL
0000e5 1f11              ROL     TEMP                    ;        RLA
0000e6 f7c0      N6:     BRCC    N5                      ;N6      JR      NC,N5
                                                 ;        EX      AF,AF'--------
0000e7 0f05              ADD     DATA,R21                ;        ADD     A,B
0000e8 e056              LDI     R21,6                   ;        LD      B,6
0000e9 cfd7              RJMP    M1                      ;        JR      M1
0000ea 955a      X3:     DEC     R21                     ;X3
0000eb f411              BRNE    X4                      ;        DJNZ    X4
0000ec e001              LDI     DATA,1                  ;        LD      A,1
0000ed c00b              RJMP    M3                      ;        JR      M3
0000ee 955a      X4:     DEC     R21                     ;X4      DJNZ    X5
0000ef f429              BRNE    X5
0000f0 9543              INC     R20                     ;        INC     C
0000f1 f431              BRNE    M4                      ;        JR      NZ,M4
0000f2 e055              LDI     R21,$05                 ;        LD      BC,#51F
0000f3 e14f              LDI     R20,$1F
0000f4 cfcc              RJMP    M1                      ;        JR      M1
0000f5 955a      X5:     DEC     R21                     ;X5
0000f6 f709              BRNE    X6                      ;        DJNZ    X6
0000f7 2f54              MOV     R21,R20                 ;        LD      B,C
0000f8 9145      M4:     LPM     R20,Z+                  ;M4      LD      C,(HL)
                                                 ;        INC     HL
0000f9 955a      M3:     DEC     R21                     ;M3      DEC     B
                                                 ;        PUSH    HL
0000fa 2fa4              MOV     XL,R20                  ;        LD      L,C
0000fb 2fb5              MOV     XH,R21                  ;        LD      H,B
0000fc 0fac              ADD     XL,YL                   ;        ADD     HL,DE
0000fd 1fbd              ADC     XH,YH
                                                 ;        LD      C,A
                                                 ;        LD      B,0
          LDIRLOOP:
0000fe 50b1              SUBI    XH,HIGH(BUFFER) ;
0000ff 70bf              ANDI    XH,DBMASK_HI    ;X warp
000100   +          ADDI    XH,HIGH(BUFFER) ;
000100 5fbf              SUBI    xh,(-high(buffer)&$FF)
          .ENDMACRO
000101 900d              LD      R0,X+                   ;        LDIR
000102 9209              ST      Y+,R0
         ;-begin-PUT_BYTE_2---
000103 b80f              OUT     SPDR,R0
000104 b01e      PUTB2:  IN      R1,SPSR
000105 fe17              SBRS    R1,SPIF
000106 cffd              RJMP    PUTB2
         ;-end---PUT_BYTE_2---
000107 50d1              SUBI    YH,HIGH(BUFFER) ;
000108 70df              ANDI    YH,DBMASK_HI    ;Y warp
000109   +          ADDI    YH,HIGH(BUFFER) ;
000109 5fdf              SUBI    yh,(-high(buffer)&$FF)
          .ENDMACRO
00010a 950a              DEC     DATA
00010b f791              BRNE    LDIRLOOP
                                                 ;        POP     HL
00010c cfb2              RJMP    M0                      ;        JR      M0
                                                 ;END_DEC40
          DEMLZEND:;теперь можно юзать стек
         ;SPI reinit
         
         ;цф╕ь, яюър яюфэшьхЄё  CONF_DONE - чэрўшЄ, ўЄю яЁю°штър тёюёрырё№ ш чрЁрсюЄрыр, тё╕ чрхсшё№
00010d   +  qwertyu:inport  DATA,PINF
00010d 9100 0020         LDS     data,pinf+$20*(pinf<$40)
          .ENDMACRO
00010f 7004              andi    DATA,(1<<CONF_DONE)
000110 f3e1              breq    qwertyu
         
         
         
         
000111 e510              LDI     TEMP,(1<<SPE)|(0<<DORD)|(1<<MSTR)|(0<<CPOL)|(0<<CPHA)
000112 b91d              OUT     SPCR,TEMP
         ;для beeper-а
000113 9a16              SBI     DDRE,6
         ;св.диод погасить
000114 9ac7              SBI     PORTB,7
         ; - - - - - - - - - - - - - - - - - - -
000115   +          LDIZ    MSG_ID_FLASH*2
000115 e4e2              LDI     ZL,LOW(msg_id_flash*0x2)
000116 e0f4              LDI     ZH,HIGH(msg_id_flash*0x2)
          .ENDMACRO
000117 d0f8              RCALL   PRINTSTRZ
         
000118 d045              RCALL   F_ID
000119 2f0a              MOV     DATA,XL
00011a d0e3              RCALL   HEXBYTE
00011b e200              LDI     DATA,$20
00011c d0ea              RCALL   PUTCHAR
00011d 2f0b              MOV     DATA,XH
00011e d0df              RCALL   HEXBYTE
         ; - - - - - - - - - - - - - - - - - - -
00011f   +          LDIZ    MSG_F_ERASE*2
00011f e5ec              LDI     ZL,LOW(msg_f_erase*0x2)
000120 e0f4              LDI     ZH,HIGH(msg_f_erase*0x2)
          .ENDMACRO
000121 d0ee              RCALL   PRINTSTRZ
000122 d067              RCALL   F_ERASE
         ; - - - - - - - - - - - - - - - - - - -
000123   +          LDIZ    MSG_F_WRITE*2
000123 e6e6              LDI     ZL,LOW(msg_f_write*0x2)
000124 e0f4              LDI     ZH,HIGH(msg_f_write*0x2)
          .ENDMACRO
000125 d0ea              RCALL   PRINTSTRZ
         
000126   +          LDIZ    ROM*2
000126 e5e4              LDI     ZL,LOW(rom*0x2)
000127 e3f6              LDI     ZH,HIGH(rom*0x2)
          .ENDMACRO
000128 befb              OUT     RAMPZ,NULL
         ; - - - - - - - - - - - - - - - - - - -
000129   +          LDIY    $0000
000129 e0c0              LDI     YL,LOW(0x0)
00012a e0d0              LDI     YH,HIGH(0x0)
          .ENDMACRO
00012b d040              RCALL   F_WRITE
         
00012c   +          LDIY    $0001
00012c e0c1              LDI     YL,LOW(0x1)
00012d e0d0              LDI     YH,HIGH(0x1)
          .ENDMACRO
00012e d03d              RCALL   F_WRITE
         
00012f   +          LDIY    $0002
00012f e0c2              LDI     YL,LOW(0x2)
000130 e0d0              LDI     YH,HIGH(0x2)
          .ENDMACRO
000131 d03a              RCALL   F_WRITE
         
000132   +          LDIY    $0003
000132 e0c3              LDI     YL,LOW(0x3)
000133 e0d0              LDI     YH,HIGH(0x3)
          .ENDMACRO
000134 d037              RCALL   F_WRITE
         
000135   +          LDIY    $0004
000135 e0c4              LDI     YL,LOW(0x4)
000136 e0d0              LDI     YH,HIGH(0x4)
          .ENDMACRO
000137 d034              RCALL   F_WRITE
         
000138   +          LDIY    $0005
000138 e0c5              LDI     YL,LOW(0x5)
000139 e0d0              LDI     YH,HIGH(0x5)
          .ENDMACRO
00013a d031              RCALL   F_WRITE
         
00013b   +          LDIY    $0006
00013b e0c6              LDI     YL,LOW(0x6)
00013c e0d0              LDI     YH,HIGH(0x6)
          .ENDMACRO
00013d d02e              RCALL   F_WRITE
         
00013e   +          LDIY    $0007
00013e e0c7              LDI     YL,LOW(0x7)
00013f e0d0              LDI     YH,HIGH(0x7)
          .ENDMACRO
000140 d02b              RCALL   F_WRITE
         
000141   +          LDIY    $0008
000141 e0c8              LDI     YL,LOW(0x8)
000142 e0d0              LDI     YH,HIGH(0x8)
          .ENDMACRO
000143 d028              RCALL   F_WRITE
         
000144   +          LDIY    $0009
000144 e0c9              LDI     YL,LOW(0x9)
000145 e0d0              LDI     YH,HIGH(0x9)
          .ENDMACRO
000146 d025              RCALL   F_WRITE
         
000147   +          LDIY    $000A
000147 e0ca              LDI     YL,LOW(0xa)
000148 e0d0              LDI     YH,HIGH(0xa)
          .ENDMACRO
000149 d022              RCALL   F_WRITE
         
00014a   +          LDIY    $000B
00014a e0cb              LDI     YL,LOW(0xb)
00014b e0d0              LDI     YH,HIGH(0xb)
          .ENDMACRO
00014c d01f              RCALL   F_WRITE
         
00014d   +          LDIY    $000C
00014d e0cc              LDI     YL,LOW(0xc)
00014e e0d0              LDI     YH,HIGH(0xc)
          .ENDMACRO
00014f d01c              RCALL   F_WRITE
         
000150   +          LDIY    $000D
000150 e0cd              LDI     YL,LOW(0xd)
000151 e0d0              LDI     YH,HIGH(0xd)
          .ENDMACRO
000152 d019              RCALL   F_WRITE
         
000153   +          LDIY    $000E
000153 e0ce              LDI     YL,LOW(0xe)
000154 e0d0              LDI     YH,HIGH(0xe)
          .ENDMACRO
000155 d016              RCALL   F_WRITE
         
000156   +          LDIY    $000F
000156 e0cf              LDI     YL,LOW(0xf)
000157 e0d0              LDI     YH,HIGH(0xf)
          .ENDMACRO
000158 d013              RCALL   F_WRITE
         ; - - - - - - - - - - - - - - - - - - -
000159 d042              RCALL   F_RST
00015a   +          LDIZ    MSG_F_COMPLETE*2
00015a e6ee              LDI     ZL,LOW(msg_f_complete*0x2)
00015b e0f4              LDI     ZH,HIGH(msg_f_complete*0x2)
          .ENDMACRO
00015c d0b3              RCALL   PRINTSTRZ
00015d cfff      STOP1:  RJMP    STOP1
         ;
         ;--------------------------------------
         ;--------------------------------------
         ;
00015e d03d      F_ID:   RCALL   F_RST
00015f e900              LDI     DATA,$90
000160 d041              RCALL   F_CMD
000161 ef14              LDI     TEMP,FLASH_CTRL
000162 e003              LDI     DATA,0B00000011
000163 d08d              RCALL   FPGA_REG
000164 e0c0              LDI     YL,$00
000165 e0d0              LDI     YH,$00
000166 d069              RCALL   F_IN
000167 2fa0              MOV     XL,DATA
000168 e0c1              LDI     YL,$01
000169 d066              RCALL   F_IN
00016a 2fb0              MOV     XH,DATA
00016b c030              RJMP    F_RST
         ;
         ;--------------------------------------
         ;in:    FLASH[Z] - data
         ;       YL,YH - address
          F_WRITE:
00016c e00d              LDI     DATA,$0D
00016d d099              RCALL   PUTCHAR
00016e e00a              LDI     DATA,$0A
00016f d097              RCALL   PUTCHAR
000170 2f0d              MOV     DATA,YH
000171 d08c              RCALL   HEXBYTE
000172 2f0c              MOV     DATA,YL
000173 d08a              RCALL   HEXBYTE
000174 e200              LDI     DATA,$20
000175 d091              RCALL   PUTCHAR
         
000176 ea00              LDI     DATA,$A0
000177 d02a              RCALL   F_CMD
000178 9106              ELPM    DATA,Z
000179 d062              RCALL   F_OUT
00017a ef14              LDI     TEMP,FLASH_CTRL
00017b e003              LDI     DATA,0B00000011
00017c d074              RCALL   FPGA_REG
          F_WRIT1:
00017d ef13              LDI     TEMP,FLASH_DATA
00017e d072              RCALL   FPGA_REG
         
00017f 930f              PUSH    DATA
000180 d07d              RCALL   HEXBYTE
000181 e200              LDI     DATA,$20
000182 d084              RCALL   PUTCHAR
000183 910f              POP     DATA
         
000184 9116              ELPM    TEMP,Z
000185 2701              EOR     DATA,TEMP
000186 fd07              SBRC    DATA,7
000187 cff5              RJMP    F_WRIT1
         
000188 9117      F_WRIT9:ELPM    TEMP,Z+
000189 9508              RET
         ;
         ;--------------------------------------
         ;
00018a e800      F_ERASE:LDI     DATA,$80
00018b d016              RCALL   F_CMD
00018c e100              LDI     DATA,$10
00018d d014              RCALL   F_CMD
00018e ef14              LDI     TEMP,FLASH_CTRL
00018f e003              LDI     DATA,0B00000011
000190 d060              RCALL   FPGA_REG
         
000191 9ac7      F_ERAS1:SBI     PORTB,7 ;св.диод погасить
         
000192 ef13              LDI     TEMP,FLASH_DATA
000193 d05d              RCALL   FPGA_REG
         
000194 930f              PUSH    DATA
000195 d068              RCALL   HEXBYTE
000196 e00d              LDI     DATA,$0D
000197 d06f              RCALL   PUTCHAR
000198 910f              POP     DATA
         
000199 98c7              CBI     PORTB,7 ;св.диод зажечь
00019a ff07              SBRS    DATA,7
00019b cff5              RJMP    F_ERAS1
         ;
         ; - - - - - - - - - - - - - - - - - - -
         ;
00019c ef00      F_RST:  LDI     DATA,$F0
00019d d004              RCALL   F_CMD
00019e e113              LDI     TEMP,19 ;~5 us @ 11.0592 MHz
00019f 951a      F_RST1: DEC     TEMP    ;1
0001a0 f7f1              BRNE    F_RST1  ;2
0001a1 9508              RET
         ;
         ;--------------------------------------
         ;in:    DATA - instructions
0001a2 930f      F_CMD:  PUSH    DATA
0001a3 ef14              LDI     TEMP,FLASH_CTRL
0001a4 e001              LDI     DATA,0B00000001
0001a5 d04b              RCALL   FPGA_REG
0001a6 ef10              LDI     TEMP,FLASH_LOADDR
0001a7 e505              LDI     DATA,$55
0001a8 d048              RCALL   FPGA_REG
0001a9 ef11              LDI     TEMP,FLASH_MIDADDR
0001aa e505              LDI     DATA,$55
0001ab d045              RCALL   FPGA_REG
0001ac ef13              LDI     TEMP,FLASH_DATA
0001ad ea0a              LDI     DATA,$AA
0001ae d042              RCALL   FPGA_REG
0001af ef14              LDI     TEMP,FLASH_CTRL
0001b0 e005              LDI     DATA,0B00000101
0001b1 d03f              RCALL   FPGA_REG
0001b2 e001              LDI     DATA,0B00000001
0001b3 d042              RCALL   FPGA_SAME_REG
0001b4 ef10              LDI     TEMP,FLASH_LOADDR
0001b5 ea0a              LDI     DATA,$AA
0001b6 d03a              RCALL   FPGA_REG
0001b7 ef11              LDI     TEMP,FLASH_MIDADDR
0001b8 e20a              LDI     DATA,$2A
0001b9 d037              RCALL   FPGA_REG
0001ba ef13              LDI     TEMP,FLASH_DATA
0001bb e505              LDI     DATA,$55
0001bc d034              RCALL   FPGA_REG
0001bd ef14              LDI     TEMP,FLASH_CTRL
0001be e005              LDI     DATA,0B00000101
0001bf d031              RCALL   FPGA_REG
0001c0 e001              LDI     DATA,0B00000001
0001c1 d034              RCALL   FPGA_SAME_REG
0001c2 ef10              LDI     TEMP,FLASH_LOADDR
0001c3 e505              LDI     DATA,$55
0001c4 d02c              RCALL   FPGA_REG
0001c5 ef11              LDI     TEMP,FLASH_MIDADDR
0001c6 e505              LDI     DATA,$55
0001c7 d029              RCALL   FPGA_REG
0001c8 ef13              LDI     TEMP,FLASH_DATA
0001c9 910f              POP     DATA
0001ca d026              RCALL   FPGA_REG
0001cb ef14              LDI     TEMP,FLASH_CTRL
0001cc e005              LDI     DATA,0B00000101
0001cd d023              RCALL   FPGA_REG
0001ce e001              LDI     DATA,0B00000001
0001cf c026              RJMP    FPGA_SAME_REG
         ;
         ;--------------------------------------
         ;in:    YL,YH - address
         ;out:   DATA - data
          F_IN:
0001d0 ef10              LDI     TEMP,FLASH_LOADDR
0001d1 2f0c              MOV     DATA,YL
0001d2 d01e              RCALL   FPGA_REG
0001d3 ef11              LDI     TEMP,FLASH_MIDADDR
0001d4 2f0d              MOV     DATA,YH
0001d5 d01b              RCALL   FPGA_REG
0001d6 ef12              LDI     TEMP,FLASH_HIADDR
0001d7 e000              LDI     DATA,$00
0001d8 d018              RCALL   FPGA_REG
0001d9 ef13              LDI     TEMP,FLASH_DATA
0001da ef0f              LDI     DATA,$FF
0001db c015              RJMP    FPGA_REG
         ;
         ;--------------------------------------
         ;in:    YL,YH - address
         ;       DATA - data
0001dc 930f      F_OUT:  PUSH    DATA
0001dd ef14              LDI     TEMP,FLASH_CTRL
0001de e001              LDI     DATA,0B00000001
0001df d011              RCALL   FPGA_REG
0001e0 ef10              LDI     TEMP,FLASH_LOADDR
0001e1 2f0c              MOV     DATA,YL
0001e2 d00e              RCALL   FPGA_REG
0001e3 ef11              LDI     TEMP,FLASH_MIDADDR
0001e4 2f0d              MOV     DATA,YH
0001e5 d00b              RCALL   FPGA_REG
0001e6 ef12              LDI     TEMP,FLASH_HIADDR
0001e7 e000              LDI     DATA,$00
0001e8 d008              RCALL   FPGA_REG
0001e9 ef13              LDI     TEMP,FLASH_DATA
0001ea 910f              POP     DATA
0001eb d005              RCALL   FPGA_REG
0001ec ef14              LDI     TEMP,FLASH_CTRL
0001ed e005              LDI     DATA,0B00000101
0001ee d002              RCALL   FPGA_REG
0001ef e001              LDI     DATA,0B00000001
0001f0 c005              RJMP    FPGA_SAME_REG
         ;
         ;--------------------------------------
         ;
          FPGA_REG:
0001f1 930f              PUSH    DATA
0001f2   +          SS_SET
0001f2 9ac0              SBI     PORTB,0
          .ENDMACRO
0001f3 b91f              OUT     SPDR,TEMP
0001f4 d003              RCALL   RD_WHEN_RDY
0001f5 910f              POP     DATA
          FPGA_SAME_REG:
0001f6   +          SS_CLR
0001f6 98c0              CBI     PORTB,0
          .ENDMACRO
0001f7 b90f              OUT     SPDR,DATA
         ;
          RD_WHEN_RDY:
0001f8 b00e              IN      R0,SPSR
0001f9 fe07              SBRS    R0,SPIF
0001fa cffd              RJMP    RD_WHEN_RDY
0001fb b10f              IN      DATA,SPDR
0001fc   +          SS_SET
0001fc 9ac0              SBI     PORTB,0
          .ENDMACRO
0001fd 9508              RET
         ;
         ;--------------------------------------
         ;in:    DATA == byte
0001fe 930f      HEXBYTE:PUSH    DATA
0001ff 9502              SWAP    DATA
000200 d001              RCALL   HEXHALF
000201 910f              POP     DATA
000202 700f      HEXHALF:ANDI    DATA,$0F
000203 300a              CPI     DATA,$0A
000204 f008              BRCS    HEXBYT1
000205   +          ADDI    DATA,$07
000205 5f09              SUBI    data,(-0x7&$FF)
          .ENDMACRO
000206   +  HEXBYT1:ADDI    DATA,$30
000206 5d00              SUBI    data,(-0x30&$FF)
          .ENDMACRO
         ;
         ; - - - - - - - - - - - - - - - - - - -
         ;in:    DATA
000207 931f      PUTCHAR:PUSH    TEMP
000208   +  WRU_1:  INPORT  TEMP,UCSR1A
000208 9110 009b         LDS     temp,ucsr1a+$20*(ucsr1a<$40)
          .ENDMACRO
00020a ff15              SBRS    TEMP,UDRE
00020b cffc              RJMP    WRU_1
00020c   +          OUTPORT UDR1,DATA
00020c 9300 009c         STS     udr1+$20*(udr1<$40),data
          .ENDMACRO
00020e 911f              POP     TEMP
00020f 9508              RET
         ;
         ;--------------------------------------
         ;PRINTSTRZ
         ;in:    Z == указательна строку
          PRINTSTRZ:
000210 9107      PRSTRZ1:ELPM    DATA,Z+
000211 2300              TST     DATA
000212 f011              BREQ    PRSTRZ2
000213 dff3              RCALL   PUTCHAR
000214 cffb              RJMP    PRSTRZ1
000215 9508      PRSTRZ2:RET
         ;
         ;--------------------------------------
         ;DELAY
         ;in:    DATA/10 == количество секунд
          DELAY:
000216 e14e              LDI     R20,$1E ;\
000217 ef5e              LDI     R21,$FE ;/ 0,1 сек @ 11.0592MHz
000218 95c8      DELAY1: LPM             ;3
000219 95c8              LPM             ;3
00021a 95c8              LPM             ;3
00021b 95c8              LPM             ;3
00021c 5041              SUBI    R20,1   ;1
00021d 4050              SBCI    R21,0   ;1
00021e 4000              SBCI    DATA,0  ;1
00021f f7c1              BRNE    DELAY1  ;2(1)
000220 9508              RET
         ;
         ;--------------------------------------
         ;
         ;
          MSG_ID_FLASH:
                  .DB     $0D,$0A,$0D,$0A,"===============",$0D,$0A,"ID: ",0
000221 0a0d
000222 0a0d
000223 3d3d
000224 3d3d
000225 3d3d
000226 3d3d
000227 3d3d
000228 3d3d
000229 3d3d
00022a 0d3d
00022b 490a
00022c 3a44
00022d 0020
          MSG_F_ERASE:
                  .DB     $0D,$0A,"Erase",$0D,$0A,0
00022e 0a0d
00022f 7245
000230 7361
000231 0d65
000232 000a
          MSG_F_WRITE:
                  .DB     $0D,$0A,"Write",0
000233 0a0d
000234 7257
000235 7469
000236 0065
          MSG_F_COMPLETE:
                  .DB     $0D,$0A,"=== Complete ===",0,0
000237 0a0d
000238 3d3d
000239 203d
00023a 6f43
00023b 706d
00023c 656c
00023d 6574
00023e 3d20
00023f 3d3d
000240 0000
         ;
          PACKED_FPGA:
          .NOLIST

Assembly complete with no errors.
