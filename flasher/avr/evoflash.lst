
AVRASM ver. 1.77.3 evoflash.asm Wed Jan 13 21:13:04 2010


001551   +          OUTPORT PORTG,TEMP
001554   +          OUTPORT DDRG,TEMP
001557   +          OUTPORT PORTF,TEMP
001559   +          OUTPORT DDRF,TEMP
00156f   +          OUTPORT UBRR1H,NULL
001572   +          OUTPORT UBRR1L,TEMP
001574   +          OUTPORT UCSR1A,NULL
001577   +          OUTPORT UCSR1C,TEMP
00157a   +          OUTPORT UCSR1B,TEMP
001580   +          LDIZ    MSG_U_TITLE*2
001587   +          LDIZ    MSG_CFGFPGA*2
00158a   +          INPORT  TEMP,DDRF
00158d   +          OUTPORT DDRF,TEMP
001592   +          INPORT  TEMP,DDRF
001595   +          OUTPORT DDRF,TEMP
001599   +          LDIZ    PACKED_FPGA*2
00159b   +          LDIY    BUFFER
0015a6   +          ADDI    YH,HIGH(BUFFER) ;
0015e8   +          ADDI    XH,HIGH(BUFFER) ;
0015f1   +          ADDI    YH,HIGH(BUFFER) ;
0015fa   +          LED_OFF
0015fb   +          LDIZ    MSG_OK*2
001601   +          LDIZ    MSG_TITLE*2
001607   +          LDIZ    MSG_ID_FLASH*2
001614   +          LDIZ    MSG_OPENFILE*2
001617   +          SPICS_SET
00161e   +          SPICS_CLR
001622   +  SDINIT1:LDIZ    CMD00*2
00162b   +          LDIZ    CMD08*2
001633   +  SDINIT3:LDIZ    CMD55*2
00163a   +          LDIZ    CMD55*2+2
001640   +  SDINIT4:LDIZ    CMD59*2
001645   +  SDINIT5:LDIZ    CMD16*2
00164a   +  WC_FAT: LDIX    0
00164c   +          LDIY    0
00164f   +          LDIZ    BUF4FAT+$01BE
00166b   +  RDFAT05:LDIZ    BUF4FAT
001696   +          LDIY    0
001698   +          LDIX    0
00169a   +  RDFAT00:STSX    STARTRZ+0
00169e   +          STSY    STARTRZ+2
0016a3   +          LDIY    0
0016ae   +  RDFAT01:STSX    SEC_FAT+0
0016b2   +          STSY    SEC_FAT+2       ;число секторов на fat-таблицу
0016b6   +          LDIY    0
0016c1   +  RDFAT02:STSX    SEC_DSC+0
0016c5   +          STSY    SEC_DSC+2       ;к-во секторов на диске/разделе
0016cb   +          LDIY    0
0016d8   +          LDSX    SEC_FAT+0
0016dc   +          LDSY    SEC_FAT+2
0016f1   +          STSX    FRSTDAT+0
0016f5   +          STSY    FRSTDAT+2       ;положили номер первого сектора данных
0016f9   +          LDIZ    SEC_DSC
0016fc   +          LDIZ    BUF4FAT
001702   +          STSX    CLS_DSC+0
001706   +          STSY    CLS_DSC+2       ;положили кол-во кластеров на разделе
00170e   +          LDSX    CLS_DSC+0
001712   +          LDSY    CLS_DSC+2
001716   +          PUSHY
001718   +          PUSHX
001720   +          POPX
001722   +          POPY
001733   +          LDIX    0
001735   +          LDIY    0
00173f   +  FSRROO2:STSX    ROOTCLS+0
001743   +          STSY    ROOTCLS+2       ;сектор root директории
001747   +          STSX    TEK_DIR+0
00174b   +          STSY    TEK_DIR+2
00174f   +  FSRR121:PUSHX
001751   +          PUSHY
001753   +          LDSX    RSVDSEC
001757   +          LDIY    0
001759   +          LDIZ    STARTRZ
00175c   +          STSX    FATSTR0+0
001760   +          STSY    FATSTR0+2
001764   +          LDIZ    SEC_FAT
001767   +          STSX    FATSTR1+0
00176b   +          STSY    FATSTR1+2
00176f   +          POPY
001771   +          POPX
001782   +          LDIY    0
001785   +          LDIY    0               ;номер описателя файла
00179a   +          LDIZ    FILENAME*2
0017ad   +          STSX    TFILCLS+0
0017b1   +          STSY    TFILCLS+2
0017b5   +          STSX    ZTFILCLS+0
0017b9   +          STSY    ZTFILCLS+2
0017e3   +          STSX    KOL_CLS+0
0017e7   +          STSY    KOL_CLS+2
0017eb   +          STSX    ZKOL_CLS+0
0017ef   +          STSY    ZKOL_CLS+2
0017f8   +          LDIZ    MSG_F_ERASE*2
0017ff   +          LDIZ    MSG_F_WRITE*2
001809   +  FCHXY1: SPICS_CLR
00180a   +          SPICS_SET
001819   +          LDIZ    BUFFER
001827   +          LED_OFF
001829   +          LED_ON
001842   +          LDIZ    MSG_F_CHECK*2
001848   +          LDSX    ZTFILCLS+0
00184c   +          LDSY    ZTFILCLS+2
001850   +          STSX    TFILCLS+0
001854   +          STSY    TFILCLS+2
00185c   +          LDSX    ZKOL_CLS+0
001860   +          LDSY    ZKOL_CLS+2
001864   +          STSX    KOL_CLS+0
001868   +          STSY    KOL_CLS+2
00187b   +          LDIZ    BUFFER
00188d   +          LED_OFF
00188f   +          LED_ON
0018ab   +          LED_OFF
0018af   +          LDIZ    MSG_F_ERROR*2
0018b5   +          LDIZ    MSG_F_COMPLETE*2
0018bb   +          LDIZ    MSG_HALT*2
0018d9   +          PUSHZ
0018db   +          LDIZ    CMD58*2
0018fc   +          POPZ
00190c   +          LDIZ    BUFFER
001910   +  LOADLST:LDIZ    BUF4FAT
001913   +          LDIZ    BUF4FAT
001916   +  RDDIRSC:PUSHY
001919   +          LDIY    0
001929   +          POPY
00192e   +  RDDIRS3:LDSY    TEK_DIR+2
001934   +          LDSX    TEK_DIR+0
001948   +          POPY
001976   +  RDFATS1:LDIY    0
00197c   +          PUSHY
00197e   +          LDIZ    FATSTR0
001982   +          POPY
00199a   +          PUSHZ
00199c   +          LDIZ    FATSTR0
0019a0   +          POPY
0019a9   +          LDIY    0
0019b1   +          LDIY    0
0019c4   +          LDIZ    FATSTR1
0019c6   +          LDSX    SEC_FAT+0
0019ca   +          LDSY    SEC_FAT+2
0019db   +          LDIZ    STARTRZ
0019de   +          LDIZ    FRSTDAT
001a09   +          LDIZ    SEC_FAT
001a12   +          SPICS_SET
001a19   +          SPICS_CLR
001a1a   +          LDIZ    KOL_CLS
001a24   +          LDSX    TFILCLS+0
001a28   +          LDSY    TFILCLS+2
001a34   +          LDSX    TFILCLS+0
001a38   +          LDSY    TFILCLS+2
001a48   +          STSX    TFILCLS+0
001a4c   +          STSY    TFILCLS+2
001a50   +          LDIZ    KOL_CLS
001a60   +  LSTCLSF:LDSX    TFILCLS+0
001a64   +          LDSY    TFILCLS+2
001a82   +          LDIZ    MSG_SDERROR*2
001a89   +          LDIZ    MSG_CARD*2
001a8f   +          LDIZ    MSG_READERROR*2
001a95   +          LDIZ    MSG_FAT*2
001a9b   +          LDIZ    MSG_FILE*2
001a9e   +          LDIZ    MSG_NOTFOUND*2
001aa4   +          LDIZ    MSG_FILE*2
001aa7   +          LDIZ    MSG_EMPTY*2
001aab   +          LDIZ    MSG_FILE*2
001aae   +          LDIZ    MSG_TOOBIG*2
001ab3   +  SD_ERR1:LED_ON
001ab6   +          LED_OFF
001abe   +          LDIZ    MSG_HALT*2
001afb   +  F_ERAS1:LED_OFF
001afd   +          LED_ON
001b41   +          SPICS_SET
001b45   +          SPICS_CLR
001b4b   +          SPICS_SET
001b51   +  UPCHR1: INPORT  TEMP,UCSR1A
001b55   +          OUTPORT UDR1,DATA
001b66   +          SPICS_SET
001b77   +          ADDI    DATA,$07
001b78   +  HEXBYT1:ADDI    DATA,$30
          .NOLIST
          .LISTMAC
         
          .DEF    FF_FL   =R08
          .DEF    FF      =R13    ;всегда = $FF
          .DEF    ONE     =R14    ;всегда = $01
          .DEF    NULL    =R15    ;всегда = $00
          .DEF    DATA    =R16
          .DEF    TEMP    =R17
          .DEF    COUNT   =R18
          .DEF    BITS    =R19
         ;локально используются: R0,R1,R20,R21,R24,R25
         
          .EQU    DBSIZE_HI       =HIGH(4096)
          .EQU    DBMASK_HI       =HIGH(4095)
          .EQU    nCONFIG         =PORTF0
          .EQU    nSTATUS         =PORTF1
          .EQU    CONF_DONE       =PORTF2
         
          .EQU    CMD_17          =$51    ;read_single_block
          .EQU    ACMD_41         =$69    ;sd_send_op_cond
         
          .EQU    SD_DATA         =$57
          .EQU    FLASH_LOADDR    =$F0
          .EQU    FLASH_MIDADDR   =$F1
          .EQU    FLASH_HIADDR    =$F2
          .EQU    FLASH_DATA      =$F3
          .EQU    FLASH_CTRL      =$F4
          .EQU    SCR_LOADDR      =$40
          .EQU    SCR_HIADDR      =$41
          .EQU    SCR_CHAR        =$44
         
          .MACRO  SPICS_SET
                  SBI     PORTB,0
          .ENDMACRO
         
          .MACRO  SPICS_CLR
                  CBI     PORTB,0
          .ENDMACRO
         
          .MACRO  LED_ON
                  CBI     PORTB,7
          .ENDMACRO
         
          .MACRO  LED_OFF
                  SBI     PORTB,7
          .ENDMACRO
         
          .DSEG
                  .ORG    $0100
          BUFFER:
                  .ORG    $0300
          BUF4FAT:
                  .ORG    $0500
000500      CAL_FAT:.BYTE   1       ;тип обнаруженной FAT
000501      MANYFAT:.BYTE   1       ;количество FAT-таблиц
000502      BYTSSEC:.BYTE   1       ;количество секторов в кластере
000503      ROOTCLS:.BYTE   4       ;сектор начала root директории
000507      SEC_FAT:.BYTE   4       ;количество секторов одной FAT
00050b      RSVDSEC:.BYTE   2       ;размер резервной области
00050d      STARTRZ:.BYTE   4       ;начало диска/раздела
000511      FRSTDAT:.BYTE   4       ;адрес первого сектора данных от BPB
000515      SEC_DSC:.BYTE   4       ;количество секторов на диске/разделе
000519      CLS_DSC:.BYTE   4       ;количество кластеров на диске/разделе
00051d      FATSTR0:.BYTE   4       ;начало первой FAT таблицы
000521      FATSTR1:.BYTE   4       ;начало второй FAT таблицы
000525      TEK_DIR:.BYTE   4       ;кластер текущей директории
000529      KCLSDIR:.BYTE   1       ;кол-во кластеров директории
00052a      NUMSECK:.BYTE   1       ;счетчик секторов в кластере
00052b      TFILCLS:.BYTE   4       ;текущий кластер
00052f      MPHWOST:.BYTE   1       ;кол-во секторов в последнем кластере
000530      KOL_CLS:.BYTE   4       ;кол-во кластеров файла минус 1
000534      ZTFILCLS:.BYTE  4
000538      ZMPHWOST:.BYTE  1
000539      ZKOL_CLS:.BYTE  4
00053d      SDERROR:.BYTE   1
          LASTSECFLAG:
00053e              .BYTE   1
00053f      F_ADDR0:.BYTE   1
000540      F_ADDR1:.BYTE   1
000541      F_ADDR2:.BYTE   1
000542      ERRFLG1:.BYTE   1
000543      ERRFLG2:.BYTE   1
         
          .CSEG
                  .ORG    0
000000 940c 1542         JMP     START
000002 940c 1542         JMP     START   ;EXT_INT0 ; IRQ0 Handler
000004 940c 1542         JMP     START   ;EXT_INT1 ; IRQ1 Handler
000006 940c 1542         JMP     START   ;EXT_INT2 ; IRQ2 Handler
000008 940c 1542         JMP     START   ;EXT_INT3 ; IRQ3 Handler
00000a 940c 1542         JMP     START   ;EXT_INT4 ; IRQ4 Handler
00000c 940c 1542         JMP     START   ;EXT_INT5 ; IRQ5 Handler
00000e 940c 1542         JMP     START   ;EXT_INT6 ; IRQ6 Handler
000010 940c 1542         JMP     START   ;EXT_INT7 ; IRQ7 Handler
000012 940c 1542         JMP     START   ;TIM2_COMP ; Timer2 Compare Handler
000014 940c 1542         JMP     START   ;TIM2_OVF ; Timer2 Overflow Handler
000016 940c 1542         JMP     START   ;TIM1_CAPT ; Timer1 Capture Handler
000018 940c 1542         JMP     START   ;TIM1_COMPA ; Timer1 CompareA Handler
00001a 940c 1542         JMP     START   ;TIM1_COMPB ; Timer1 CompareB Handler
00001c 940c 1542         JMP     START   ;TIM1_OVF ; Timer1 Overflow Handler
00001e 940c 1542         JMP     START   ;TIM0_COMP ; Timer0 Compare Handler
000020 940c 1542         JMP     START   ;TIM0_OVF ; Timer0 Overflow Handler
000022 940c 1542         JMP     START   ;SPI_STC ; SPI Transfer Complete Handler
000024 940c 1542         JMP     START   ;USART0_RXC ; USART0 RX Complete Handler
000026 940c 1542         JMP     START   ;USART0_DRE ; USART0,UDR Empty Handler
000028 940c 1542         JMP     START   ;USART0_TXC ; USART0 TX Complete Handler
00002a 940c 1542         JMP     START   ;ADC ; ADC Conversion Complete Handler
00002c 940c 1542         JMP     START   ;EE_RDY ; EEPROM Ready Handler
00002e 940c 1542         JMP     START   ;ANA_COMP ; Analog Comparator Handler
000030 940c 1542         JMP     START   ;TIM1_COMPC ; Timer1 CompareC Handler
000032 940c 1542         JMP     START   ;TIM3_CAPT ; Timer3 Capture Handler
000034 940c 1542         JMP     START   ;TIM3_COMPA ; Timer3 CompareA Handler
000036 940c 1542         JMP     START   ;TIM3_COMPB ; Timer3 CompareB Handler
000038 940c 1542         JMP     START   ;TIM3_COMPC ; Timer3 CompareC Handler
00003a 940c 1542         JMP     START   ;TIM3_OVF ; Timer3 Overflow Handler
00003c 940c 1542         JMP     START   ;USART1_RXC ; USART1 RX Complete Handler
00003e 940c 1542         JMP     START   ;USART1_DRE; USART1,UDR Empty Handler
000040 940c 1542         JMP     START   ;USART1_TXC ; USART1 TX Complete Handler
000042 940c 1542         JMP     START   ;TWI_INT ; Two-wire Serial Interface Interrupt Handler
000044 940c 1542         JMP     START   ;SPM_RDY ; SPM Ready Handler
         ;
         ;--------------------------------------
         ;
          MSG_U_TITLE:
                  .DB     $0A,$0A,$0A,$0A,$0A,$0D
000046 0a0a
000047 0a0a
000048 0d0a
          MSG_TITLE:
                  .DB     "  ZX Evolution Flasher (100113)",0
000049 2020
00004a 585a
00004b 4520
00004c 6f76
00004d 756c
00004e 6974
00004f 6e6f
000050 4620
000051 616c
000052 6873
000053 7265
000054 2820
000055 3031
000056 3130
000057 3331
000058 0029
          MSG_CFGFPGA:
                  .DB     $0D,$0A,"Set temporary configuration... ",0
000059 0a0d
00005a 6553
00005b 2074
00005c 6574
00005d 706d
00005e 726f
00005f 7261
000060 2079
000061 6f63
000062 666e
000063 6769
000064 7275
000065 7461
000066 6f69
000067 2e6e
000068 2e2e
000069 0020
          MSG_OK:
                  .DB     "Ok!",$0D,$0A,0
00006a 6b4f
00006b 0d21
00006c 000a
         ;
          MSG_ID_FLASH:
                  .DB     "ID flash memory chip: ",0,0
00006d 4449
00006e 6620
00006f 616c
000070 6873
000071 6d20
000072 6d65
000073 726f
000074 2079
000075 6863
000076 7069
000077 203a
000078 0000
          MSG_OPENFILE:
                  .DB     "Open file from SD-card...",0
000079 704f
00007a 6e65
00007b 6620
00007c 6c69
00007d 2065
00007e 7266
00007f 6d6f
000080 5320
000081 2d44
000082 6163
000083 6472
000084 2e2e
000085 002e
          MSG_SDERROR:
                  .DB     "SD error: ",0,0
000086 4453
000087 6520
000088 7272
000089 726f
00008a 203a
00008b 0000
          MSG_CARD:
                  .DB     "Card",0,0
00008c 6143
00008d 6472
00008e 0000
          MSG_READERROR:
                  .DB     "Read error",0,0
00008f 6552
000090 6461
000091 6520
000092 7272
000093 726f
000094 0000
          MSG_FAT:
                  .DB     "FAT",0
000095 4146
000096 0054
          MSG_FILE:
                  .DB     "File",0,0
000097 6946
000098 656c
000099 0000
          MSG_NOTFOUND:
                  .DB     " not found",0,0
00009a 6e20
00009b 746f
00009c 6620
00009d 756f
00009e 646e
00009f 0000
          MSG_EMPTY:
                  .DB     " empty",0,0
0000a0 6520
0000a1 706d
0000a2 7974
0000a3 0000
          MSG_TOOBIG:
                  .DB     " too big",0,0
0000a4 7420
0000a5 6f6f
0000a6 6220
0000a7 6769
0000a8 0000
          MSG_F_ERASE:
                  .DB     "Erase...",0,0
0000a9 7245
0000aa 7361
0000ab 2e65
0000ac 2e2e
0000ad 0000
          MSG_F_WRITE:
                  .DB     "Write...",0,0
0000ae 7257
0000af 7469
0000b0 2e65
0000b1 2e2e
0000b2 0000
          MSG_F_CHECK:
                  .DB     "Check...",0,0
0000b3 6843
0000b4 6365
0000b5 2e6b
0000b6 2e2e
0000b7 0000
          MSG_F_COMPLETE:
                  .DB     "Successfully complete.",0,0
0000b8 7553
0000b9 6363
0000ba 7365
0000bb 6673
0000bc 6c75
0000bd 796c
0000be 6320
0000bf 6d6f
0000c0 6c70
0000c1 7465
0000c2 2e65
0000c3 0000
          MSG_F_ERROR:
                  .DB     "ERROR!",0,0
0000c4 5245
0000c5 4f52
0000c6 2152
0000c7 0000
          MSG_HALT:
                  .DB     "HALT!",0
0000c8 4148
0000c9 544c
0000ca 0021
         ;
0000cb      CMD00:  .DB     $40,$00,$00,$00,$00,$95
0000cb 0040
0000cc 0000
0000cd 9500
0000ce      CMD08:  .DB     $48,$00,$00,$01,$AA,$87
0000ce 0048
0000cf 0100
0000d0 87aa
0000d1      CMD16:  .DB     $50,$00,$00,$02,$00,$FF
0000d1 0050
0000d2 0200
0000d3 ff00
0000d4      CMD55:  .DB     $77,$00,$00,$00,$00,$FF ;app_cmd
0000d4 0077
0000d5 0000
0000d6 ff00
0000d7      CMD58:  .DB     $7A,$00,$00,$00,$00,$FF ;read_ocr
0000d7 007a
0000d8 0000
0000d9 ff00
0000da      CMD59:  .DB     $7B,$00,$00,$00,$00,$FF ;crc_on_off
0000da 007b
0000db 0000
0000dc ff00
          FILENAME:
                  .DB     "ZXEVO   ROM",0
0000dd 585a
0000de 5645
0000df 204f
0000e0 2020
0000e1 4f52
0000e2 004d
         ;
          PACKED_FPGA:
          .NOLIST
         ;
         ;--------------------------------------
         ;
001542 94f8      START:  CLI
001543 24ff              CLR     NULL
001544 e011              LDI     TEMP,$01
001545 2ee1              MOV     ONE,TEMP
001546 ef1f              LDI     TEMP,$FF
001547 2ed1              MOV     FF,TEMP
         ;WatchDog OFF
001548 e11f              LDI     TEMP,0B00011111
001549 bd11              OUT     WDTCR,TEMP
00154a bcf1              OUT     WDTCR,NULL
         ;
00154b ef1f              LDI     TEMP,LOW(RAMEND)
00154c bf1d              OUT     SPL,TEMP
00154d e110              LDI     TEMP,HIGH(RAMEND)
00154e bf1e              OUT     SPH,TEMP
         ;
00154f beeb              OUT     RAMPZ,ONE
         ;
001550 ef1f              LDI     TEMP,      0B11111111
001551   +          OUTPORT PORTG,TEMP
001551 9310 0065         STS     portg+$20*(portg<$40),temp
          .ENDMACRO
001553 e010              LDI     TEMP,      0B00000000
001554   +          OUTPORT DDRG,TEMP
001554 9310 0064         STS     ddrg+$20*(ddrg<$40),temp
          .ENDMACRO
         
001556 e018              LDI     TEMP,      0B00001000
001557   +          OUTPORT PORTF,TEMP
001557 9310 0062         STS     portf+$20*(portf<$40),temp
          .ENDMACRO
001559   +          OUTPORT DDRF,TEMP
001559 9310 0061         STS     ddrf+$20*(ddrf<$40),temp
          .ENDMACRO
         
00155b ef1f              LDI     TEMP,      0B11111111
00155c b913              OUT     PORTE,TEMP
00155d e010              LDI     TEMP,      0B00000000
00155e b912              OUT     DDRE,TEMP
         
00155f ef1f              LDI     TEMP,      0B11111111
001560 bb12              OUT     PORTD,TEMP
001561 e010              LDI     TEMP,      0B00000000
001562 bb11              OUT     DDRD,TEMP
         
001563 ed1f              LDI     TEMP,      0B11011111
001564 bb15              OUT     PORTC,TEMP
001565 e010              LDI     TEMP,      0B00000000
001566 bb14              OUT     DDRC,TEMP
         
001567 ef19              LDI     TEMP,      0B11111001
001568 bb18              OUT     PORTB,TEMP
001569 e817              LDI     TEMP,      0B10000111
00156a bb17              OUT     DDRB,TEMP
         
00156b ef1f              LDI     TEMP,      0B11111111
00156c bb1b              OUT     PORTA,TEMP
00156d e010              LDI     TEMP,      0B00000000
00156e bb1a              OUT     DDRA,TEMP
         ;UART1 Set baud rate
00156f   +          OUTPORT UBRR1H,NULL
00156f 92f0 0098         STS     ubrr1h+$20*(ubrr1h<$40),null
          .ENDMACRO
001571 e015              LDI     TEMP,5     ;115200 baud, 11059.2 kHz, Normal speed
001572   +          OUTPORT UBRR1L,TEMP
001572 9310 0099         STS     ubrr1l+$20*(ubrr1l<$40),temp
          .ENDMACRO
         ;UART1 Normal Speed
001574   +          OUTPORT UCSR1A,NULL
001574 92f0 009b         STS     ucsr1a+$20*(ucsr1a<$40),null
          .ENDMACRO
         ;UART1 data8bit, 2stopbits
001576 e01e              LDI     TEMP,(1<<UCSZ1)|(1<<UCSZ0)|(1<<USBS)
001577   +          OUTPORT UCSR1C,TEMP
001577 9310 009d         STS     ucsr1c+$20*(ucsr1c<$40),temp
          .ENDMACRO
         ;UART1 Разрешаем передачу
001579 e018              LDI     TEMP,(1<<TXEN)
00157a   +          OUTPORT UCSR1B,TEMP
00157a 9310 009a         STS     ucsr1b+$20*(ucsr1b<$40),temp
          .ENDMACRO
         ;SPI init
00157c e011              LDI     TEMP,(1<<SPI2X)
00157d b91e              OUT     SPSR,TEMP
00157e e710              LDI     TEMP,(1<<SPE)|(1<<DORD)|(1<<MSTR)|(0<<CPOL)|(0<<CPHA)
00157f b91d              OUT     SPCR,TEMP
         
001580   +          LDIZ    MSG_U_TITLE*2
001580 e8ec              LDI     ZL,LOW(msg_u_title*0x2)
001581 e0f0              LDI     ZH,HIGH(msg_u_title*0x2)
          .ENDMACRO
001582 d5ca              RCALL   UART_PRINTSTRZ
         
001583 9b00      UP11:   SBIS    PINF,0 ;PINC,5 ; а если питание через PWR3 ?
001584 cffe              RJMP    UP11
001585 e005              LDI     DATA,5
001586 d606              RCALL   DELAY
         
001587   +          LDIZ    MSG_CFGFPGA*2
001587 ebe2              LDI     ZL,LOW(msg_cfgfpga*0x2)
001588 e0f0              LDI     ZH,HIGH(msg_cfgfpga*0x2)
          .ENDMACRO
001589 d5c3              RCALL   UART_PRINTSTRZ
         
00158a   +          INPORT  TEMP,DDRF
00158a 9110 0061         LDS     temp,ddrf+$20*(ddrf<$40)
          .ENDMACRO
00158c 6011              SBR     TEMP,(1<<nCONFIG)
00158d   +          OUTPORT DDRF,TEMP
00158d 9310 0061         STS     ddrf+$20*(ddrf<$40),temp
          .ENDMACRO
         
00158f e913              LDI     TEMP,147 ;40 us @ 11.0592 MHz
001590 951a      LDFPGA1:DEC     TEMP    ;1
001591 f7f1              BRNE    LDFPGA1 ;2
         
001592   +          INPORT  TEMP,DDRF
001592 9110 0061         LDS     temp,ddrf+$20*(ddrf<$40)
          .ENDMACRO
001594 7f1e              CBR     TEMP,(1<<nCONFIG)
001595   +          OUTPORT DDRF,TEMP
001595 9310 0061         STS     ddrf+$20*(ddrf<$40),temp
          .ENDMACRO
         
001597 9b01      LDFPGA2:SBIS    PINF,nSTATUS
001598 cffe              RJMP    LDFPGA2
         
001599   +          LDIZ    PACKED_FPGA*2
001599 ece6              LDI     ZL,LOW(packed_fpga*0x2)
00159a e0f1              LDI     ZH,HIGH(packed_fpga*0x2)
          .ENDMACRO
00159b   +          LDIY    BUFFER
00159b e0c0              LDI     YL,LOW(buffer)
00159c e0d1              LDI     YH,HIGH(buffer)
          .ENDMACRO
         ;(не трогаем стек! всё ОЗУ под буфер)
00159d e810              LDI     TEMP,$80
00159e 9005      MS:     LPM     R0,Z+
00159f 9209              ST      Y+,R0
         ;-begin-PUT_BYTE_1---
0015a0 b80f              OUT     SPDR,R0
0015a1 b01e      PUTB1:  IN      R1,SPSR
0015a2 fe17              SBRS    R1,SPIF
0015a3 cffd              RJMP    PUTB1
         ;-end---PUT_BYTE_1---
0015a4 50d1              SUBI    YH,HIGH(BUFFER) ;
0015a5 70df              ANDI    YH,DBMASK_HI    ;Y warp
0015a6   +          ADDI    YH,HIGH(BUFFER) ;
0015a6 5fdf              SUBI    yh,(-high(buffer)&$FF)
          .ENDMACRO
0015a7 e052      M0:     LDI     R21,$02
0015a8 ef4f              LDI     R20,$FF
          M1:
0015a9 0f11      M1X:    ADD     TEMP,TEMP
0015aa f411              BRNE    M2
0015ab 9115              LPM     TEMP,Z+
0015ac 1f11              ROL     TEMP
0015ad 1f44      M2:     ROL     R20
0015ae f7d0              BRCC    M1X
0015af 955a              DEC     R21
0015b0 f449              BRNE    X2
0015b1 e002              LDI     DATA,2
0015b2 9545              ASR     R20
0015b3 f080              BRCS    N1
0015b4 9503              INC     DATA
0015b5 9543              INC     R20
0015b6 f051              BREQ    N2
0015b7 e053              LDI     R21,$03
0015b8 e34f              LDI     R20,$3F
0015b9 cfef              RJMP    M1
         
0015ba 955a      X2:     DEC     R21
0015bb f4b1              BRNE    X3
0015bc 9546              LSR     R20
0015bd f300              BRCS    MS
0015be 9553              INC     R21
0015bf cfe9              RJMP    M1
         
0015c0 0f04      X6:     ADD     DATA,R20
0015c1 e054      N2:     LDI     R21,$04
0015c2 ef4f              LDI     R20,$FF
0015c3 cfe5              RJMP    M1
         
0015c4 9543      N1:     INC     R20
0015c5 f4d1              BRNE    M4
0015c6 9553              INC     R21
0015c7 9547      N5:     ROR     R20
0015c8 f160              BRCS    DEMLZEND
0015c9 1f55              ROL     R21
0015ca 0f11              ADD     TEMP,TEMP
0015cb f411              BRNE    N6
0015cc 9115              LPM     TEMP,Z+
0015cd 1f11              ROL     TEMP
0015ce f7c0      N6:     BRCC    N5
0015cf 0f05              ADD     DATA,R21
0015d0 e056              LDI     R21,6
0015d1 cfd7              RJMP    M1
0015d2 955a      X3:     DEC     R21
0015d3 f411              BRNE    X4
0015d4 e001              LDI     DATA,1
0015d5 c00b              RJMP    M3
0015d6 955a      X4:     DEC     R21
0015d7 f429              BRNE    X5
0015d8 9543              INC     R20
0015d9 f431              BRNE    M4
0015da e055              LDI     R21,$05
0015db e14f              LDI     R20,$1F
0015dc cfcc              RJMP    M1
0015dd 955a      X5:     DEC     R21
0015de f709              BRNE    X6
0015df 2f54              MOV     R21,R20
0015e0 9145      M4:     LPM     R20,Z+
0015e1 955a      M3:     DEC     R21
0015e2 2fa4              MOV     XL,R20
0015e3 2fb5              MOV     XH,R21
0015e4 0fac              ADD     XL,YL
0015e5 1fbd              ADC     XH,YH
          LDIRLOOP:
0015e6 50b1              SUBI    XH,HIGH(BUFFER) ;
0015e7 70bf              ANDI    XH,DBMASK_HI    ;X warp
0015e8   +          ADDI    XH,HIGH(BUFFER) ;
0015e8 5fbf              SUBI    xh,(-high(buffer)&$FF)
          .ENDMACRO
0015e9 900d              LD      R0,X+
0015ea 9209              ST      Y+,R0
         ;-begin-PUT_BYTE_2---
0015eb b80f              OUT     SPDR,R0
0015ec b01e      PUTB2:  IN      R1,SPSR
0015ed fe17              SBRS    R1,SPIF
0015ee cffd              RJMP    PUTB2
         ;-end---PUT_BYTE_2---
0015ef 50d1              SUBI    YH,HIGH(BUFFER) ;
0015f0 70df              ANDI    YH,DBMASK_HI    ;Y warp
0015f1   +          ADDI    YH,HIGH(BUFFER) ;
0015f1 5fdf              SUBI    yh,(-high(buffer)&$FF)
          .ENDMACRO
0015f2 950a              DEC     DATA
0015f3 f791              BRNE    LDIRLOOP
         
0015f4 cfb2              RJMP    M0
         ;теперь можно юзать стек
          DEMLZEND:
0015f5 9b02              SBIS    PINF,CONF_DONE
0015f6 cffe              RJMP    DEMLZEND
         ;SPI reinit
0015f7 e510              LDI     TEMP,(1<<SPE)|(0<<DORD)|(1<<MSTR)|(0<<CPOL)|(0<<CPHA)
0015f8 b91d              OUT     SPCR,TEMP
         
0015f9 9a16              SBI     DDRE,6
0015fa   +          LED_OFF
0015fa 9ac7              SBI     PORTB,7
          .ENDMACRO
0015fb   +          LDIZ    MSG_OK*2
0015fb ede4              LDI     ZL,LOW(msg_ok*0x2)
0015fc e0f0              LDI     ZH,HIGH(msg_ok*0x2)
          .ENDMACRO
0015fd d54f              RCALL   UART_PRINTSTRZ
         ; - - - - - - - - - - - - - - - - - - -
0015fe e0a0              LDI     XL,0
0015ff e0b0              LDI     XH,0
001600 d559              RCALL   SET_CURSOR
001601   +          LDIZ    MSG_TITLE*2
001601 e9e2              LDI     ZL,LOW(msg_title*0x2)
001602 e0f0              LDI     ZH,HIGH(msg_title*0x2)
          .ENDMACRO
001603 d562              RCALL   PRINTSTRZ
         
001604 e0a0              LDI     XL,0
001605 e0b2              LDI     XH,2
001606 d553              RCALL   SET_CURSOR
001607   +          LDIZ    MSG_ID_FLASH*2
001607 edea              LDI     ZL,LOW(msg_id_flash*0x2)
001608 e0f0              LDI     ZH,HIGH(msg_id_flash*0x2)
          .ENDMACRO
001609 d55c              RCALL   PRINTSTRZ
         
00160a d4b8              RCALL   F_ID
00160b 2f0e              MOV     DATA,ZL
00160c d563              RCALL   HEXBYTE
00160d e200              LDI     DATA,$20
00160e d56a              RCALL   PUTCHAR
00160f 2f0f              MOV     DATA,ZH
001610 d55f              RCALL   HEXBYTE
         
001611 e0a0              LDI     XL,0
001612 e0b3              LDI     XH,3
001613 d546              RCALL   SET_CURSOR
001614   +          LDIZ    MSG_OPENFILE*2
001614 efe2              LDI     ZL,LOW(msg_openfile*0x2)
001615 e0f0              LDI     ZH,HIGH(msg_openfile*0x2)
          .ENDMACRO
001616 d54f              RCALL   PRINTSTRZ
         ;
         ; - - - - - - - - - - - - - - - - - - -
         ;инициализация SD карточки
001617   +          SPICS_SET
001617 9ac0              SBI     PORTB,0
          .ENDMACRO
001618 e507              LDI     DATA,SD_DATA
001619 b90f              OUT     SPDR,DATA
00161a b00e      SDINIT0:IN      R0,SPSR
00161b fe07              SBRS    R0,SPIF
00161c cffd              RJMP    SDINIT0
00161d b00f              IN      R0,SPDR
00161e   +          SPICS_CLR
00161e 98c0              CBI     PORTB,0
          .ENDMACRO
         
00161f e210              LDI     TEMP,32
001620 d2a6              RCALL   SD_RD_DUMMY
001621 ef8f              SER     R24
001622   +  SDINIT1:LDIZ    CMD00*2
001622 e9e6              LDI     ZL,LOW(cmd00*0x2)
001623 e0f1              LDI     ZH,HIGH(cmd00*0x2)
          .ENDMACRO
001624 d2a7              RCALL   SD_WR_PGM_6
001625 958a              DEC     R24
001626 f411              BRNE    SDINIT2
001627 e001             LDI     DATA,1  ;нет SD
001628 c450              RJMP    SD_ERROR
001629 3001      SDINIT2:CPI     DATA,$01
00162a f7b9              BRNE    SDINIT1
         
00162b   +          LDIZ    CMD08*2
00162b e9ec              LDI     ZL,LOW(cmd08*0x2)
00162c e0f1              LDI     ZH,HIGH(cmd08*0x2)
          .ENDMACRO
00162d d29e              RCALL   SD_WR_PGM_6
00162e e080              LDI     R24,$00
00162f ff02              SBRS    DATA,2
001630 e480              LDI     R24,$40
001631 e014              LDI     TEMP,4
001632 d294              RCALL   SD_RD_DUMMY
         
001633   +  SDINIT3:LDIZ    CMD55*2
001633 eae8              LDI     ZL,LOW(cmd55*0x2)
001634 e0f1              LDI     ZH,HIGH(cmd55*0x2)
          .ENDMACRO
001635 d296              RCALL   SD_WR_PGM_6
001636 e609              LDI     DATA,ACMD_41
001637 d289              RCALL   SD_EXCHANGE
001638 2f08              MOV     DATA,R24
001639 d287              RCALL   SD_EXCHANGE
         
00163a   +          LDIZ    CMD55*2+2
00163a eaea              LDI     ZL,LOW(cmd55*0x2+0x2)
00163b e0f1              LDI     ZH,HIGH(cmd55*0x2+0x2)
          .ENDMACRO
00163c e014              LDI     TEMP,4
00163d d28f              RCALL   SD_WR_PGX
00163e 2300              TST     DATA
00163f f799              BRNE    SDINIT3
         
001640   +  SDINIT4:LDIZ    CMD59*2
001640 ebe4              LDI     ZL,LOW(cmd59*0x2)
001641 e0f1              LDI     ZH,HIGH(cmd59*0x2)
          .ENDMACRO
001642 d289              RCALL   SD_WR_PGM_6
001643 2300              TST     DATA
001644 f7d9              BRNE    SDINIT4
         
001645   +  SDINIT5:LDIZ    CMD16*2
001645 eae2              LDI     ZL,LOW(cmd16*0x2)
001646 e0f1              LDI     ZH,HIGH(cmd16*0x2)
          .ENDMACRO
001647 d284              RCALL   SD_WR_PGM_6
001648 2300              TST     DATA
001649 f7d9              BRNE    SDINIT5
         ;
         ; - - - - - - - - - - - - - - - - - - -
         ;поиск FAT, инициализация переменных
00164a   +  WC_FAT: LDIX    0
00164a e0a0              LDI     XL,LOW(0x0)
00164b e0b0              LDI     XH,HIGH(0x0)
          .ENDMACRO
00164c   +          LDIY    0
00164c e0c0              LDI     YL,LOW(0x0)
00164d e0d0              LDI     YH,HIGH(0x0)
          .ENDMACRO
00164e d2c1              RCALL   LOADLST
00164f   +          LDIZ    BUF4FAT+$01BE
00164f ebee              LDI     ZL,LOW(buf4fat+0x1be)
001650 e0f4              LDI     ZH,HIGH(buf4fat+0x1be)
          .ENDMACRO
001651 8100              LD      DATA,Z
001652 2300              TST     DATA
001653 f4b9              BRNE    RDFAT05
001654 ece2              LDI     ZL,$C2
001655 8100              LD      DATA,Z
001656 e010              LDI     TEMP,0
001657 3001              CPI     DATA,$01
001658 f051              BREQ    RDFAT06
001659 e012              LDI     TEMP,2
00165a 300b              CPI     DATA,$0B
00165b f039              BREQ    RDFAT06
00165c 300c              CPI     DATA,$0C
00165d f029              BREQ    RDFAT06
00165e e011              LDI     TEMP,1
00165f 3006              CPI     DATA,$06
001660 f011              BREQ    RDFAT06
001661 300e              CPI     DATA,$0E
001662 f441              BRNE    RDFAT05
001663 9310 0500 RDFAT06:STS     CAL_FAT,TEMP
001665 ece6              LDI     ZL,$C6
001666 91a1              LD      XL,Z+
001667 91b1              LD      XH,Z+
001668 91c1              LD      YL,Z+
001669 81d0              LD      YH,Z
00166a c02f              RJMP    RDFAT00
00166b   +  RDFAT05:LDIZ    BUF4FAT
00166b e0e0              LDI     ZL,LOW(buf4fat)
00166c e0f3              LDI     ZH,HIGH(buf4fat)
          .ENDMACRO
00166d 8535              LDD     BITS,Z+$0D
00166e e000              LDI     DATA,0
00166f e010              LDI     TEMP,0
001670 e028              LDI     COUNT,8
001671 9537      RDF051: ROR     BITS
001672 1d0f              ADC     DATA,NULL
001673 952a              DEC     COUNT
001674 f7e1              BRNE    RDF051
001675 950a              DEC     DATA
001676 f409              BRNE    RDF052
001677 9513              INC     TEMP
001678 8506      RDF052: LDD     DATA,Z+$0E
001679 8407              LDD     R0,Z+$0F
00167a 2900              OR      DATA,R0
00167b f009              BREQ    RDF053
00167c 9513              INC     TEMP
00167d 8903      RDF053: LDD     DATA,Z+$13
00167e 8804              LDD     R0,Z+$14
00167f 2900              OR      DATA,R0
001680 f409              BRNE    RDF054
001681 9513              INC     TEMP
001682 a100      RDF054: LDD     DATA,Z+$20
001683 a001              LDD     R0,Z+$21
001684 2900              OR      DATA,R0
001685 a002              LDD     R0,Z+$22
001686 2900              OR      DATA,R0
001687 a003              LDD     R0,Z+$23
001688 2900              OR      DATA,R0
001689 f409              BRNE    RDF055
00168a 9513              INC     TEMP
00168b 8905      RDF055: LDD     DATA,Z+$15
00168c 7f00              ANDI    DATA,$F0
00168d 3f00              CPI     DATA,$F0
00168e f409              BRNE    RDF056
00168f 9513              INC     TEMP
001690 3014      RDF056: CPI     TEMP,4
001691 f011              BREQ    RDF057
001692 e003             LDI     DATA,3  ;не найдена FAT
001693 c3e5              RJMP    SD_ERROR
001694 92d0 0500 RDF057: STS     CAL_FAT,FF
001696   +          LDIY    0
001696 e0c0              LDI     YL,LOW(0x0)
001697 e0d0              LDI     YH,HIGH(0x0)
          .ENDMACRO
001698   +          LDIX    0
001698 e0a0              LDI     XL,LOW(0x0)
001699 e0b0              LDI     XH,HIGH(0x0)
          .ENDMACRO
00169a   +  RDFAT00:STSX    STARTRZ+0
00169a 93a0 050d         STS     startrz+0x0,XL
00169c 93b0 050e         STS     startrz+0x0+1,XH
          .ENDMACRO
00169e   +          STSY    STARTRZ+2
00169e 93c0 050f         STS     startrz+0x2,YL
0016a0 93d0 0510         STS     startrz+0x2+1,YH
          .ENDMACRO
0016a2 d26d              RCALL   LOADLST
0016a3   +          LDIY    0
0016a3 e0c0              LDI     YL,LOW(0x0)
0016a4 e0d0              LDI     YH,HIGH(0x0)
          .ENDMACRO
0016a5 89a6              LDD     XL,Z+22
0016a6 89b7              LDD     XH,Z+23         ;bpb_fatsz16
0016a7 2f0b              MOV     DATA,XH
0016a8 2b0a              OR      DATA,XL
0016a9 f421              BRNE    RDFAT01         ;если не fat12/16 (bpb_fatsz16=0)
0016aa a1a4              LDD     XL,Z+36         ;то берем bpb_fatsz32 из смещения +36
0016ab a1b5              LDD     XH,Z+37
0016ac a1c6              LDD     YL,Z+38
0016ad a1d7              LDD     YH,Z+39
0016ae   +  RDFAT01:STSX    SEC_FAT+0
0016ae 93a0 0507         STS     sec_fat+0x0,XL
0016b0 93b0 0508         STS     sec_fat+0x0+1,XH
          .ENDMACRO
0016b2   +          STSY    SEC_FAT+2       ;число секторов на fat-таблицу
0016b2 93c0 0509         STS     sec_fat+0x2,YL
0016b4 93d0 050a         STS     sec_fat+0x2+1,YH
          .ENDMACRO
0016b6   +          LDIY    0
0016b6 e0c0              LDI     YL,LOW(0x0)
0016b7 e0d0              LDI     YH,HIGH(0x0)
          .ENDMACRO
0016b8 89a3              LDD     XL,Z+19
0016b9 89b4              LDD     XH,Z+20         ;bpb_totsec16
0016ba 2f0b              MOV     DATA,XH
0016bb 2b0a              OR      DATA,XL
0016bc f421              BRNE    RDFAT02         ;если не fat12/16 (bpb_totsec16=0)
0016bd a1a0              LDD     XL,Z+32         ;то берем из bpb_totsec32 смещения +32
0016be a1b1              LDD     XH,Z+33
0016bf a1c2              LDD     YL,Z+34
0016c0 a1d3              LDD     YH,Z+35
0016c1   +  RDFAT02:STSX    SEC_DSC+0
0016c1 93a0 0515         STS     sec_dsc+0x0,XL
0016c3 93b0 0516         STS     sec_dsc+0x0+1,XH
          .ENDMACRO
0016c5   +          STSY    SEC_DSC+2       ;к-во секторов на диске/разделе
0016c5 93c0 0517         STS     sec_dsc+0x2,YL
0016c7 93d0 0518         STS     sec_dsc+0x2+1,YH
          .ENDMACRO
         ;вычисляем rootdirsectors
0016c9 89a1              LDD     XL,Z+17
0016ca 89b2              LDD     XH,Z+18         ;bpb_rootentcnt
0016cb   +          LDIY    0
0016cb e0c0              LDI     YL,LOW(0x0)
0016cc e0d0              LDI     YH,HIGH(0x0)
          .ENDMACRO
0016cd 2f0b              MOV     DATA,XH
0016ce 2b0a              OR      DATA,XL
0016cf f019              BREQ    RDFAT03
0016d0 e100              LDI     DATA,$10
0016d1 d318              RCALL   BCDE_A
0016d2 01ed              MOVW    YL,XL           ;это реализована формула
                                         ;rootdirsectors = ( (bpb_rootentcnt*32)+(bpb_bytspersec-1) )/bpb_bytspersec
                                         ;в Y rootdirsectors
                                         ;если fat32, то Y=0 всегда
0016d3 93df      RDFAT03:PUSH    YH
0016d4 93cf              PUSH    YL
0016d5 8900              LDD     DATA,Z+16       ;bpb_numfats
0016d6 9300 0501         STS     MANYFAT,DATA
0016d8   +          LDSX    SEC_FAT+0
0016d8 91a0 0507         LDS     XL,sec_fat+0x0
0016da 91b0 0508         LDS     XH,sec_fat+0x0+1
          .ENDMACRO
0016dc   +          LDSY    SEC_FAT+2
0016dc 91c0 0509         LDS     YL,sec_fat+0x2
0016de 91d0 050a         LDS     YH,sec_fat+0x2+1
          .ENDMACRO
0016e0 950a              DEC     DATA
0016e1 0faa      RDF031: LSL     XL
0016e2 1fbb              ROL     XH
0016e3 1fcc              ROL     YL
0016e4 1fdd              ROL     YH
0016e5 950a              DEC     DATA
0016e6 f7d1              BRNE    RDF031
0016e7 918f              POP     R24
0016e8 919f              POP     R25
                                         ;полный размер fat-области в секторах
0016e9 d319              RCALL   HLDEPBC         ;прибавили rootdirsectors
0016ea 8586              LDD     R24,Z+14
0016eb 8597              LDD     R25,Z+15        ;bpb_rsvdseccnt
0016ec 9380 050b         STS     RSVDSEC+0,R24
0016ee 9390 050c         STS     RSVDSEC+1,R25
0016f0 d312              RCALL   HLDEPBC         ;прибавили bpb_resvdseccnt
0016f1   +          STSX    FRSTDAT+0
0016f1 93a0 0511         STS     frstdat+0x0,XL
0016f3 93b0 0512         STS     frstdat+0x0+1,XH
          .ENDMACRO
0016f5   +          STSY    FRSTDAT+2       ;положили номер первого сектора данных
0016f5 93c0 0513         STS     frstdat+0x2,YL
0016f7 93d0 0514         STS     frstdat+0x2+1,YH
          .ENDMACRO
0016f9   +          LDIZ    SEC_DSC
0016f9 e1e5              LDI     ZL,LOW(sec_dsc)
0016fa e0f5              LDI     ZH,HIGH(sec_dsc)
          .ENDMACRO
0016fb d2f1              RCALL   BCDEHLM         ;вычли из полного к-ва секторов раздела
0016fc   +          LDIZ    BUF4FAT
0016fc e0e0              LDI     ZL,LOW(buf4fat)
0016fd e0f3              LDI     ZH,HIGH(buf4fat)
          .ENDMACRO
0016fe 8505              LDD     DATA,Z+13
0016ff 9300 0502         STS     BYTSSEC,DATA
001701 d2e8              RCALL   BCDE_A          ;разделили на к-во секторов в кластере
001702   +          STSX    CLS_DSC+0
001702 93a0 0519         STS     cls_dsc+0x0,XL
001704 93b0 051a         STS     cls_dsc+0x0+1,XH
          .ENDMACRO
001706   +          STSY    CLS_DSC+2       ;положили кол-во кластеров на разделе
001706 93c0 051b         STS     cls_dsc+0x2,YL
001708 93d0 051c         STS     cls_dsc+0x2+1,YH
          .ENDMACRO
         
00170a 9100 0500         LDS     DATA,CAL_FAT
00170c 3f0f              CPI     DATA,$FF
00170d f519              BRNE    RDFAT04
00170e   +          LDSX    CLS_DSC+0
00170e 91a0 0519         LDS     XL,cls_dsc+0x0
001710 91b0 051a         LDS     XH,cls_dsc+0x0+1
          .ENDMACRO
001712   +          LDSY    CLS_DSC+2
001712 91c0 051b         LDS     YL,cls_dsc+0x2
001714 91d0 051c         LDS     YH,cls_dsc+0x2+1
          .ENDMACRO
001716   +          PUSHY
001716 93cf              PUSH    YL
001717 93df              PUSH    YH
          .ENDMACRO
001718   +          PUSHX
001718 93af              PUSH    XL
001719 93bf              PUSH    XH
          .ENDMACRO
00171a 0faa              LSL     XL
00171b 1fbb              ROL     XH
00171c 1fcc              ROL     YL
00171d 1fdd              ROL     YH
00171e d2e9              RCALL   RASCHET
00171f e001              LDI     DATA,1
001720   +          POPX
001720 91bf              POP     XH
001721 91af              POP     XL
          .ENDMACRO
001722   +          POPY
001722 91df              POP     YH
001723 91cf              POP     YL
          .ENDMACRO
001724 f061              BREQ    RDFAT04
001725 0faa              LSL     XL
001726 1fbb              ROL     XH
001727 1fcc              ROL     YL
001728 1fdd              ROL     YH
001729 0faa              LSL     XL
00172a 1fbb              ROL     XH
00172b 1fcc              ROL     YL
00172c 1fdd              ROL     YH
00172d d2da              RCALL   RASCHET
00172e e002              LDI     DATA,2
00172f f009              BREQ    RDFAT04
001730 2700              CLR     DATA
001731 9300 0500 RDFAT04:STS     CAL_FAT,DATA
         ;для fat12/16 вычисляем адрес первого сектора директории
         ;для fat32 берем по смещемию +44
         ;на выходе YX == сектор rootdir
001733   +          LDIX    0
001733 e0a0              LDI     XL,LOW(0x0)
001734 e0b0              LDI     XH,HIGH(0x0)
          .ENDMACRO
001735   +          LDIY    0
001735 e0c0              LDI     YL,LOW(0x0)
001736 e0d0              LDI     YH,HIGH(0x0)
          .ENDMACRO
001737 2300              TST     DATA
001738 f031              BREQ    FSRROO2
001739 950a              DEC     DATA
00173a f021              BREQ    FSRROO2
00173b a5a4              LDD     XL,Z+44
00173c a5b5              LDD     XH,Z+45
00173d a5c6              LDD     YL,Z+46
00173e a5d7              LDD     YH,Z+47
00173f   +  FSRROO2:STSX    ROOTCLS+0
00173f 93a0 0503         STS     rootcls+0x0,XL
001741 93b0 0504         STS     rootcls+0x0+1,XH
          .ENDMACRO
001743   +          STSY    ROOTCLS+2       ;сектор root директории
001743 93c0 0505         STS     rootcls+0x2,YL
001745 93d0 0506         STS     rootcls+0x2+1,YH
          .ENDMACRO
001747   +          STSX    TEK_DIR+0
001747 93a0 0525         STS     tek_dir+0x0,XL
001749 93b0 0526         STS     tek_dir+0x0+1,XH
          .ENDMACRO
00174b   +          STSY    TEK_DIR+2
00174b 93c0 0527         STS     tek_dir+0x2,YL
00174d 93d0 0528         STS     tek_dir+0x2+1,YH
          .ENDMACRO
         
00174f   +  FSRR121:PUSHX
00174f 93af              PUSH    XL
001750 93bf              PUSH    XH
          .ENDMACRO
001751   +          PUSHY
001751 93cf              PUSH    YL
001752 93df              PUSH    YH
          .ENDMACRO
001753   +          LDSX    RSVDSEC
001753 91a0 050b         LDS     XL,rsvdsec
001755 91b0 050c         LDS     XH,rsvdsec+1
          .ENDMACRO
001757   +          LDIY    0
001757 e0c0              LDI     YL,LOW(0x0)
001758 e0d0              LDI     YH,HIGH(0x0)
          .ENDMACRO
001759   +          LDIZ    STARTRZ
001759 e0ed              LDI     ZL,LOW(startrz)
00175a e0f5              LDI     ZH,HIGH(startrz)
          .ENDMACRO
00175b d29e              RCALL   BCDEHLP
00175c   +          STSX    FATSTR0+0
00175c 93a0 051d         STS     fatstr0+0x0,XL
00175e 93b0 051e         STS     fatstr0+0x0+1,XH
          .ENDMACRO
001760   +          STSY    FATSTR0+2
001760 93c0 051f         STS     fatstr0+0x2,YL
001762 93d0 0520         STS     fatstr0+0x2+1,YH
          .ENDMACRO
001764   +          LDIZ    SEC_FAT
001764 e0e7              LDI     ZL,LOW(sec_fat)
001765 e0f5              LDI     ZH,HIGH(sec_fat)
          .ENDMACRO
001766 d293              RCALL   BCDEHLP
001767   +          STSX    FATSTR1+0
001767 93a0 0521         STS     fatstr1+0x0,XL
001769 93b0 0522         STS     fatstr1+0x0+1,XH
          .ENDMACRO
00176b   +          STSY    FATSTR1+2
00176b 93c0 0523         STS     fatstr1+0x2,YL
00176d 93d0 0524         STS     fatstr1+0x2+1,YH
          .ENDMACRO
00176f   +          POPY
00176f 91df              POP     YH
001770 91cf              POP     YL
          .ENDMACRO
001771   +          POPX
001771 91bf              POP     XH
001772 91af              POP     XL
          .ENDMACRO
         
001773 e011              LDI     TEMP,1
001774 2e0a              MOV     R0,XL
001775 2a0b              OR      R0,XH
001776 2a0c              OR      R0,YL
001777 2a0d              OR      R0,YH
001778 f039              BREQ    LASTCLS
001779 931f      NEXTCLS:PUSH    TEMP
00177a d1e7              RCALL   RDFATZP
00177b d1d0              RCALL   LST_CLS
00177c 911f              POP     TEMP
00177d f011              BREQ    LASTCLS
00177e 9513              INC     TEMP
00177f cff9              RJMP    NEXTCLS
001780 9310 0529 LASTCLS:STS     KCLSDIR,TEMP
001782   +          LDIY    0
001782 e0c0              LDI     YL,LOW(0x0)
001783 e0d0              LDI     YH,HIGH(0x0)
          .ENDMACRO
001784 d191              RCALL   RDDIRSC
         ;
         ; - - - - - - - - - - - - - - - - - - -
         ;поиск файла в директории
001785   +          LDIY    0               ;номер описателя файла
001785 e0c0              LDI     YL,LOW(0x0)
001786 e0d0              LDI     YH,HIGH(0x0)
          .ENDMACRO
001787 c006              RJMP    FNDMP32
         
001788 9621      FNDMP31:ADIW    YL,1            ;номер++               ─────────┐
001789 96b0              ADIW    ZL,$20          ;следующий описатель             │
00178a 30f5              CPI     ZH,HIGH(BUF4FAT+512);                            │
                                         ;вылезли за сектор?              │
00178b f411              BRNE    FNDMP32         ;нет ещё                         │
00178c d189              RCALL   RDDIRSC         ;считываем следующий             │
00178d f4b9              BRNE    FNDMP37         ;кончились сектора в директории ═│═╗
00178e 8503      FNDMP32:LDD     DATA,Z+$0B      ;атрибуты                        │ ║
00178f fd03              SBRC    DATA,3          ;длиное имя/имя диска?           │ ║
001790 cff7              RJMP    FNDMP31         ;да ────────────────────────────┤ ║
001791 fd04              SBRC    DATA,4          ;директория?                     │ ║
001792 cff5              RJMP    FNDMP31         ;да ────────────────────────────┤ ║
001793 8100              LD      DATA,Z          ;первый символ                   │ ║
001794 3e05              CPI     DATA,$E5        ;удалённый файл?                 │ ║
001795 f391              BREQ    FNDMP31         ;да ────────────────────────────┘ ║
001796 2300              TST     DATA            ;пустой описатель? (конец списка)  ╚═ в этой директории
001797 f069              BREQ    FNDMP37         ;да ═════════════════════════════════ нет нашёго файла
001798 93ef              PUSH    ZL
001799 01df              MOVW    XL,ZL
00179a   +          LDIZ    FILENAME*2
00179a ebea              LDI     ZL,LOW(filename*0x2)
00179b e0f1              LDI     ZH,HIGH(filename*0x2)
          .ENDMACRO
00179c 9105      DALSHE: LPM     DATA,Z+
00179d 2300              TST     DATA
00179e f041              BREQ    NASHEL
00179f 911d              LD      TEMP,X+
0017a0 1701              CP      DATA,TEMP
0017a1 f3d1              BREQ    DALSHE
         ;не совпало
0017a2 2ffb              MOV     ZH,XH
0017a3 91ef              POP     ZL
0017a4 cfe3              RJMP    FNDMP31
         ;нет такого файла
          FNDMP37:
0017a5 e004             LDI     DATA,4  ;нет файла
0017a6 c2d2              RJMP    SD_ERROR
         ;найден описатель
0017a7 2ffb      NASHEL: MOV     ZH,XH
0017a8 91ef              POP     ZL
         ;
         ; - - - - - - - - - - - - - - - - - - -
         ;инициализация переменных
         ;для последующего чтения файла
         ;Z указывает на описатель файла
0017a9 8da2              LDD     XL,Z+$1A
0017aa 8db3              LDD     XH,Z+$1B
0017ab 89c4              LDD     YL,Z+$14
0017ac 89d5              LDD     YH,Z+$15        ;считали номер первого кластера файла
0017ad   +          STSX    TFILCLS+0
0017ad 93a0 052b         STS     tfilcls+0x0,XL
0017af 93b0 052c         STS     tfilcls+0x0+1,XH
          .ENDMACRO
0017b1   +          STSY    TFILCLS+2
0017b1 93c0 052d         STS     tfilcls+0x2,YL
0017b3 93d0 052e         STS     tfilcls+0x2+1,YH
          .ENDMACRO
0017b5   +          STSX    ZTFILCLS+0
0017b5 93a0 0534         STS     ztfilcls+0x0,XL
0017b7 93b0 0535         STS     ztfilcls+0x0+1,XH
          .ENDMACRO
0017b9   +          STSY    ZTFILCLS+2
0017b9 93c0 0536         STS     ztfilcls+0x2,YL
0017bb 93d0 0537         STS     ztfilcls+0x2+1,YH
          .ENDMACRO
0017bd 8da4              LDD     XL,Z+$1C
0017be 8db5              LDD     XH,Z+$1D
0017bf 8dc6              LDD     YL,Z+$1E
0017c0 8dd7              LDD     YH,Z+$1F        ;считали длину файла
         
0017c1 2f0a              MOV     DATA,XL
0017c2 2b0b              OR      DATA,XH
0017c3 2b0c              OR      DATA,YL
0017c4 2b0d              OR      DATA,YH
0017c5 f411              BRNE    F01
0017c6 e005             LDI     DATA,5  ;пустой файл
0017c7 c2b1              RJMP    SD_ERROR
          F01:
0017c8 e008              LDI     DATA,$08
0017c9 15ae              CP      XL,ONE
0017ca 05bf              CPC     XH,NULL
0017cb 07c0              CPC     YL,DATA
0017cc 05df              CPC     YH,NULL
0017cd f010              BRCS    F02             ;большой файл
0017ce e006             LDI     DATA,6  ;большой файл
0017cf c2a9              RJMP    SD_ERROR
          F02:
0017d0 ef8f              LDI     R24,LOW(511)
0017d1 e091              LDI     R25,HIGH(511)
0017d2 d230              RCALL   HLDEPBC
0017d3 d20d              RCALL   BCDE200         ;получили кол-во секторов
0017d4 9711              SBIW    XL,1
0017d5 09cf              SBC     YL,NULL
0017d6 09df              SBC     YH,NULL
0017d7 9100 0502         LDS     DATA,BYTSSEC
0017d9 950a              DEC     DATA
0017da 230a              AND     DATA,XL
0017db 9503              INC     DATA
0017dc 9300 052f         STS     MPHWOST,DATA    ;кол-во секторов в последнем кластере
0017de 9300 0538         STS     ZMPHWOST,DATA
0017e0 9100 0502         LDS     DATA,BYTSSEC
0017e2 d207              RCALL   BCDE_A
0017e3   +          STSX    KOL_CLS+0
0017e3 93a0 0530         STS     kol_cls+0x0,XL
0017e5 93b0 0531         STS     kol_cls+0x0+1,XH
          .ENDMACRO
0017e7   +          STSY    KOL_CLS+2
0017e7 93c0 0532         STS     kol_cls+0x2,YL
0017e9 93d0 0533         STS     kol_cls+0x2+1,YH
          .ENDMACRO
0017eb   +          STSX    ZKOL_CLS+0
0017eb 93a0 0539         STS     zkol_cls+0x0,XL
0017ed 93b0 053a         STS     zkol_cls+0x0+1,XH
          .ENDMACRO
0017ef   +          STSY    ZKOL_CLS+2
0017ef 93c0 053b         STS     zkol_cls+0x2,YL
0017f1 93d0 053c         STS     zkol_cls+0x2+1,YH
          .ENDMACRO
0017f3 92f0 052a         STS     NUMSECK,NULL
         ; - - - - - - - - - - - - - - - - - - -
0017f5 e0a0              LDI     XL,0
0017f6 e0b4              LDI     XH,4
0017f7 d362              RCALL   SET_CURSOR
0017f8   +          LDIZ    MSG_F_ERASE*2
0017f8 e5e2              LDI     ZL,LOW(msg_f_erase*0x2)
0017f9 e0f1              LDI     ZH,HIGH(msg_f_erase*0x2)
          .ENDMACRO
0017fa d36b              RCALL   PRINTSTRZ
0017fb d2f6              RCALL   F_ERASE
         ; - - -
0017fc e0a0              LDI     XL,0
0017fd e0b5              LDI     XH,5
0017fe d35b              RCALL   SET_CURSOR
0017ff   +          LDIZ    MSG_F_WRITE*2
0017ff e5ec              LDI     ZL,LOW(msg_f_write*0x2)
001800 e0f1              LDI     ZH,HIGH(msg_f_write*0x2)
          .ENDMACRO
001801 d364              RCALL   PRINTSTRZ
001802 e0a0              LDI     XL,0
001803 e1b0              LDI     XH,16
001804 d355              RCALL   SET_CURSOR
001805 e001              LDI     DATA,$01 ;"░"
001806 e414              LDI     TEMP,SCR_CHAR
001807 d338              RCALL   FPGA_REG
001808 ef1f              LDI     TEMP,$FF
001809   +  FCHXY1: SPICS_CLR
001809 98c0              CBI     PORTB,0
          .ENDMACRO
00180a   +          SPICS_SET
00180a 9ac0              SBI     PORTB,0
          .ENDMACRO
00180b 951a              DEC     TEMP
00180c f7e1              BRNE    FCHXY1
00180d e0a0              LDI     XL,0
00180e e1b0              LDI     XH,16
00180f d34a              RCALL   SET_CURSOR
         
001810 92f0 053f         STS     F_ADDR0,NULL
001812 92f0 0540         STS     F_ADDR1,NULL
001814 92f0 0541         STS     F_ADDR2,NULL
         
001816 d1fb      F13:    RCALL   NEXTSEC
001817 9300 053e         STS     LASTSECFLAG,DATA
         
001819   +          LDIZ    BUFFER
001819 e0e0              LDI     ZL,LOW(buffer)
00181a e0f1              LDI     ZH,HIGH(buffer)
          .ENDMACRO
00181b 91a0 053f         LDS     XL,F_ADDR0
00181d 91b0 0540         LDS     XH,F_ADDR1
00181f 91c0 0541         LDS     YL,F_ADDR2
         
001821 d2b0      F11:    RCALL   F_WRITE
001822 9611              ADIW    XL,1
001823 1dcf              ADC     YL,NULL
001824 9631              ADIW    ZL,1
001825 30f3              CPI     ZH,HIGH(BUFFER+512)
001826 f7d1              BRNE    F11
         ;св.диод - мигать при программировании
001827   +          LED_OFF
001827 9ac7              SBI     PORTB,7
          .ENDMACRO
001828 fdb1              SBRC    XH,1
001829   +          LED_ON
001829 98c7              CBI     PORTB,7
          .ENDMACRO
         
00182a 93a0 053f         STS     F_ADDR0,XL
00182c 93b0 0540         STS     F_ADDR1,XH
00182e 93c0 0541         STS     F_ADDR2,YL
         
001830 30a0              CPI     XL,$00
001831 f429              BRNE    F12
001832 2f0b              MOV     DATA,XH
001833 7007              ANDI    DATA,$07
001834 f411              BRNE    F12
001835 e002              LDI     DATA,$02 ;"▒"
001836 d342              RCALL   PUTCHAR
          F12:
001837 9100 053e         LDS     DATA,LASTSECFLAG
001839 2300              TST     DATA
00183a f6d9              BRNE    F13
         ; - - -
00183b d2c4              RCALL   F_RST
00183c ef14              LDI     TEMP,FLASH_CTRL
00183d e003              LDI     DATA,0B00000011
00183e d301              RCALL   FPGA_REG
00183f e0a0              LDI     XL,0
001840 e0b6              LDI     XH,6
001841 d318              RCALL   SET_CURSOR
001842   +          LDIZ    MSG_F_CHECK*2
001842 e6e6              LDI     ZL,LOW(msg_f_check*0x2)
001843 e0f1              LDI     ZH,HIGH(msg_f_check*0x2)
          .ENDMACRO
001844 d321              RCALL   PRINTSTRZ
001845 e0a0              LDI     XL,0
001846 e1b0              LDI     XH,16
001847 d312              RCALL   SET_CURSOR
         
001848   +          LDSX    ZTFILCLS+0
001848 91a0 0534         LDS     XL,ztfilcls+0x0
00184a 91b0 0535         LDS     XH,ztfilcls+0x0+1
          .ENDMACRO
00184c   +          LDSY    ZTFILCLS+2
00184c 91c0 0536         LDS     YL,ztfilcls+0x2
00184e 91d0 0537         LDS     YH,ztfilcls+0x2+1
          .ENDMACRO
001850   +          STSX    TFILCLS+0
001850 93a0 052b         STS     tfilcls+0x0,XL
001852 93b0 052c         STS     tfilcls+0x0+1,XH
          .ENDMACRO
001854   +          STSY    TFILCLS+2
001854 93c0 052d         STS     tfilcls+0x2,YL
001856 93d0 052e         STS     tfilcls+0x2+1,YH
          .ENDMACRO
001858 9100 0538         LDS     DATA,ZMPHWOST
00185a 9300 052f         STS     MPHWOST,DATA
00185c   +          LDSX    ZKOL_CLS+0
00185c 91a0 0539         LDS     XL,zkol_cls+0x0
00185e 91b0 053a         LDS     XH,zkol_cls+0x0+1
          .ENDMACRO
001860   +          LDSY    ZKOL_CLS+2
001860 91c0 053b         LDS     YL,zkol_cls+0x2
001862 91d0 053c         LDS     YH,zkol_cls+0x2+1
          .ENDMACRO
001864   +          STSX    KOL_CLS+0
001864 93a0 0530         STS     kol_cls+0x0,XL
001866 93b0 0531         STS     kol_cls+0x0+1,XH
          .ENDMACRO
001868   +          STSY    KOL_CLS+2
001868 93c0 0532         STS     kol_cls+0x2,YL
00186a 93d0 0533         STS     kol_cls+0x2+1,YH
          .ENDMACRO
00186c 92f0 052a         STS     NUMSECK,NULL
00186e 92f0 0542         STS     ERRFLG1,NULL
001870 92f0 0543         STS     ERRFLG2,NULL
         ;
001872 92f0 053f         STS     F_ADDR0,NULL
001874 92f0 0540         STS     F_ADDR1,NULL
001876 92f0 0541         STS     F_ADDR2,NULL
         
001878 d199      F25:    RCALL   NEXTSEC
001879 9300 053e         STS     LASTSECFLAG,DATA
00187b   +          LDIZ    BUFFER
00187b e0e0              LDI     ZL,LOW(buffer)
00187c e0f1              LDI     ZH,HIGH(buffer)
          .ENDMACRO
00187d 91a0 053f         LDS     XL,F_ADDR0
00187f 91b0 0540         LDS     XH,F_ADDR1
001881 91c0 0541         LDS     YL,F_ADDR2
         
001883 d2b0      F21:    RCALL   F_IN
001884 9111              LD      TEMP,Z+
001885 1701              CP      DATA,TEMP
001886 f011              BREQ    F26
001887 92e0 0542         STS     ERRFLG1,ONE
001889 9611      F26:    ADIW    XL,1
00188a 1dcf              ADC     YL,NULL
00188b 30f3              CPI     ZH,HIGH(BUFFER+512)
00188c f7b1              BRNE    F21
         ;св.диод - мигать при проверке
00188d   +          LED_OFF
00188d 9ac7              SBI     PORTB,7
          .ENDMACRO
00188e fdb3              SBRC    XH,3
00188f   +          LED_ON
00188f 98c7              CBI     PORTB,7
          .ENDMACRO
         
001890 93a0 053f         STS     F_ADDR0,XL
001892 93b0 0540         STS     F_ADDR1,XH
001894 93c0 0541         STS     F_ADDR2,YL
         
001896 30a0              CPI     XL,$00
001897 f479              BRNE    F22
001898 2f0b              MOV     DATA,XH
001899 7007              ANDI    DATA,$07
00189a f461              BRNE    F22
00189b 9110 0542         LDS     TEMP,ERRFLG1
00189d 2311              TST     TEMP
00189e f031              BREQ    F23
00189f 92e0 0543         STS     ERRFLG2,ONE
0018a1 92f0 0542         STS     ERRFLG1,NULL
0018a3 e508              LDI     DATA,$58 ;"X"
0018a4 c001              RJMP    F24
0018a5 e003      F23:    LDI     DATA,$03 ;"█"
0018a6 d2d2      F24:    RCALL   PUTCHAR
          F22:
0018a7 9100 053e         LDS     DATA,LASTSECFLAG
0018a9 2300              TST     DATA
0018aa f669              BRNE    F25
         ; - - -
0018ab   +          LED_OFF
0018ab 9ac7              SBI     PORTB,7
          .ENDMACRO
0018ac e0a0              LDI     XL,0
0018ad e0b7              LDI     XH,7
0018ae d2ab              RCALL   SET_CURSOR
0018af   +          LDIZ    MSG_F_ERROR*2
0018af e8e8              LDI     ZL,LOW(msg_f_error*0x2)
0018b0 e0f1              LDI     ZH,HIGH(msg_f_error*0x2)
          .ENDMACRO
0018b1 9110 0543         LDS     TEMP,ERRFLG2
0018b3 2311              TST     TEMP
0018b4 f411              BRNE    F91
0018b5   +          LDIZ    MSG_F_COMPLETE*2
0018b5 e7e0              LDI     ZL,LOW(msg_f_complete*0x2)
0018b6 e0f1              LDI     ZH,HIGH(msg_f_complete*0x2)
          .ENDMACRO
0018b7 d2ae      F91:    RCALL   PRINTSTRZ
0018b8 e0a0              LDI     XL,0
0018b9 e0b9              LDI     XH,9
0018ba d29f              RCALL   SET_CURSOR
0018bb   +          LDIZ    MSG_HALT*2
0018bb e9e0              LDI     ZL,LOW(msg_halt*0x2)
0018bc e0f1              LDI     ZH,HIGH(msg_halt*0x2)
          .ENDMACRO
0018bd d2a8              RCALL   PRINTSTRZ
0018be 9816              CBI     DDRE,6
0018bf cfff      STOP1:  RJMP    STOP1
         
         ;
         ;--------------------------------------
         ;out:   DATA
          SD_RECEIVE:
0018c0 ef0f              SER     DATA
         ; - - - - - - - - - - - - - - - - - - -
         ;in:    DATA
         ;out:   DATA
          SD_EXCHANGE:
0018c1 b90f              OUT     SPDR,DATA
0018c2 b00e      SDEXCH: IN      R0,SPSR
0018c3 fe07              SBRS    R0,SPIF
0018c4 cffd              RJMP    SDEXCH
0018c5 b10f              IN      DATA,SPDR
0018c6 9508              RET
         ;
         ;--------------------------------------
         ;in;    TEMP - n
          SD_RD_DUMMY:
0018c7 ef0f              SER     DATA
0018c8 dff8              RCALL   SD_EXCHANGE
0018c9 951a              DEC     TEMP
0018ca f7e1              BRNE    SD_RD_DUMMY
0018cb 9508              RET
         ;
         ;--------------------------------------
         ;in:    Z
          SD_WR_PGM_6:
0018cc e016              LDI     TEMP,6
          SD_WR_PGX:
0018cd 9105      SDWRP61:LPM     DATA,Z+
0018ce dff2              RCALL   SD_EXCHANGE
0018cf 951a              DEC     TEMP
0018d0 f7e1              BRNE    SDWRP61
         ; - - - - - - - - - - - - - - - - - - -
         ;out:   DATA
          SD_WAIT_NOTFF:
0018d1 e210              LDI     TEMP,32
0018d2 ef0f      SDWNFF2:SER     DATA
0018d3 dfed              RCALL   SD_EXCHANGE
0018d4 3f0f              CPI     DATA,$FF
0018d5 f411              BRNE    SDWNFF1
0018d6 951a              DEC     TEMP
0018d7 f7d1              BRNE    SDWNFF2
0018d8 9508      SDWNFF1:RET
         ;
         ;--------------------------------------
         ;in:    Z - куда
         ;       Y,X - №сектора
          SD_READ_SECTOR:
0018d9   +          PUSHZ
0018d9 93ef              PUSH    ZL
0018da 93ff              PUSH    ZH
          .ENDMACRO
0018db   +          LDIZ    CMD58*2
0018db eaee              LDI     ZL,LOW(cmd58*0x2)
0018dc e0f1              LDI     ZH,HIGH(cmd58*0x2)
          .ENDMACRO
0018dd dfee              RCALL   SD_WR_PGM_6
0018de dfe1              RCALL   SD_RECEIVE
0018df fd06              SBRC    DATA,6
0018e0 c007              RJMP    SDRDSE1
0018e1 0faa              LSL     XL
0018e2 1fbb              ROL     XH
0018e3 1fcc              ROL     YL
0018e4 2fdc              MOV     YH,YL
0018e5 2fcb              MOV     YL,XH
0018e6 2fba              MOV     XH,XL
0018e7 27aa              CLR     XL
          SDRDSE1:
0018e8 e013              LDI     TEMP,3
0018e9 dfdd              RCALL   SD_RD_DUMMY
         
0018ea e501              LDI     DATA,CMD_17
0018eb dfd5              RCALL   SD_EXCHANGE
0018ec 2f0d              MOV     DATA,YH
0018ed dfd3              RCALL   SD_EXCHANGE
0018ee 2f0c              MOV     DATA,YL
0018ef dfd1              RCALL   SD_EXCHANGE
0018f0 2f0b              MOV     DATA,XH
0018f1 dfcf              RCALL   SD_EXCHANGE
0018f2 2f0a              MOV     DATA,XL
0018f3 dfcd              RCALL   SD_EXCHANGE
0018f4 ef0f              SER     DATA
0018f5 dfcb              RCALL   SD_EXCHANGE
         
0018f6 ef8f              SER     R24
0018f7 dfd9      SDRDSE2:RCALL   SD_WAIT_NOTFF
0018f8 958a              DEC     R24
0018f9 f081              BREQ    SDRDSE8
0018fa 3f0e              CPI     DATA,$FE
0018fb f7d9              BRNE    SDRDSE2
         
0018fc   +          POPZ
0018fc 91ff              POP     ZH
0018fd 91ef              POP     ZL
          .ENDMACRO
0018fe e080              LDI     R24,$00
0018ff e092              LDI     R25,$02
001900 dfbf      SDRDSE3:RCALL   SD_RECEIVE
001901 9301              ST      Z+,DATA
001902 9701              SBIW    R24,1
001903 f7e1              BRNE    SDRDSE3
         
001904 e012              LDI     TEMP,2
001905 dfc1              RCALL   SD_RD_DUMMY
001906 dfca      SDRDSE4:RCALL   SD_WAIT_NOTFF
001907 3f0f              CPI     DATA,$FF
001908 f7e9              BRNE    SDRDSE4
001909 9508              RET
         
          SDRDSE8:
00190a e002             LDI     DATA,2  ;ошибка при чтении сектора
00190b c16d              RJMP    SD_ERROR
         ;
         ;--------------------------------------
         ;
          LOAD_DATA:
00190c   +          LDIZ    BUFFER
00190c e0e0              LDI     ZL,LOW(buffer)
00190d e0f1              LDI     ZH,HIGH(buffer)
          .ENDMACRO
00190e dfca              RCALL   SD_READ_SECTOR  ;читать один сектор
00190f 9508              RET
         ;
         ;--------------------------------------
         ;
001910   +  LOADLST:LDIZ    BUF4FAT
001910 e0e0              LDI     ZL,LOW(buf4fat)
001911 e0f3              LDI     ZH,HIGH(buf4fat)
          .ENDMACRO
001912 dfc6              RCALL   SD_READ_SECTOR  ;читать один сектор
001913   +          LDIZ    BUF4FAT
001913 e0e0              LDI     ZL,LOW(buf4fat)
001914 e0f3              LDI     ZH,HIGH(buf4fat)
          .ENDMACRO
001915 9508              RET
         ;
         ;--------------------------------------
         ;чтение сектора dir по номеру описателя (Y)
         ;на выходе: DATA=#ff (sreg.Z=0) выход за пределы dir
001916   +  RDDIRSC:PUSHY
001916 93cf              PUSH    YL
001917 93df              PUSH    YH
          .ENDMACRO
001918 01de              MOVW    XL,YL
001919   +          LDIY    0
001919 e0c0              LDI     YL,LOW(0x0)
00191a e0d0              LDI     YH,HIGH(0x0)
          .ENDMACRO
00191b e100              LDI     DATA,$10
00191c d0cd              RCALL   BCDE_A
00191d 93af              PUSH    XL
00191e 9100 0502         LDS     DATA,BYTSSEC
001920 930f              PUSH    DATA
001921 d0c8              RCALL   BCDE_A
001922 9100 0529         LDS     DATA,KCLSDIR
001924 950a              DEC     DATA
001925 170a              CP      DATA,XL
001926 f438              BRCC    RDDIRS3
001927 91cf              POP     YL
001928 91cf              POP     YL
001929   +          POPY
001929 91df              POP     YH
00192a 91cf              POP     YL
          .ENDMACRO
00192b ef0f              SER     DATA
00192c 2300              TST     DATA
00192d 9508              RET
00192e   +  RDDIRS3:LDSY    TEK_DIR+2
00192e 91c0 0527         LDS     YL,tek_dir+0x2
001930 91d0 0528         LDS     YH,tek_dir+0x2+1
          .ENDMACRO
001932 2f0a              MOV     DATA,XL
001933 2300              TST     DATA
001934   +          LDSX    TEK_DIR+0
001934 91a0 0525         LDS     XL,tek_dir+0x0
001936 91b0 0526         LDS     XH,tek_dir+0x0+1
          .ENDMACRO
001938 f029              BREQ    RDDIRS1
001939 930f      RDDIRS2:PUSH    DATA
00193a d027              RCALL   RDFATZP
00193b 910f              POP     DATA
00193c 950a              DEC     DATA
00193d f7d9              BRNE    RDDIRS2
00193e d080      RDDIRS1:RCALL   REALSEC
00193f 900f              POP     R0
001940 940a              DEC     R0
001941 910f              POP     DATA
001942 2100              AND     DATA,R0
001943 0fa0              ADD     XL,DATA
001944 1dbf              ADC     XH,NULL
001945 1dcf              ADC     YL,NULL
001946 1ddf              ADC     YH,NULL
001947 dfc8              RCALL   LOADLST
001948   +          POPY
001948 91df              POP     YH
001949 91cf              POP     YL
          .ENDMACRO
00194a 2700              CLR     DATA
00194b 9508              RET
         ;
         ;--------------------------------------
         ;
00194c 9100 0500 LST_CLS:LDS     DATA,CAL_FAT
00194e 2300              TST     DATA
00194f f421              BRNE    LST_CL1
001950 30bf              CPI     XH,$0F
001951 f479              BRNE    LST_NO
001952 3faf              CPI     XL,$FF
001953 9508              RET
001954 950a      LST_CL1:DEC     DATA
001955 f421              BRNE    LST_CL2
001956 3fbf              CPI     XH,$FF
001957 f449              BRNE    LST_NO
001958 3faf              CPI     XL,$FF
001959 9508              RET
00195a 30df      LST_CL2:CPI     YH,$0F
00195b f429              BRNE    LST_NO
00195c 3fcf              CPI     YL,$FF
00195d f419              BRNE    LST_NO
00195e 3fbf              CPI     XH,$FF
00195f f409              BRNE    LST_NO
001960 3faf              CPI     XL,$FF
001961 9508      LST_NO: RET
         ;
         ;--------------------------------------
         ;
001962 9100 0500 RDFATZP:LDS     DATA,CAL_FAT
001964 2300              TST     DATA
001965 f131              BREQ    RDFATS0         ;FAT12
001966 950a              DEC     DATA
001967 f071              BREQ    RDFATS1         ;FAT16
         ;FAT32
001968 0faa              LSL     XL
001969 1fbb              ROL     XH
00196a 1fcc              ROL     YL
00196b 1fdd              ROL     YH
00196c 2f0a              MOV     DATA,XL
00196d 2fab              MOV     XL,XH
00196e 2fbc              MOV     XH,YL
00196f 2fcd              MOV     YL,YH
001970 27dd              CLR     YH
001971 d009              RCALL   RDFATS2
001972 9631              ADIW    ZL,1
001973 91c1              LD      YL,Z+
001974 81d0              LD      YH,Z
001975 9508              RET
         ;FAT16
001976   +  RDFATS1:LDIY    0
001976 e0c0              LDI     YL,LOW(0x0)
001977 e0d0              LDI     YH,HIGH(0x0)
          .ENDMACRO
001978 2f0a              MOV     DATA,XL
001979 2fab              MOV     XL,XH
00197a 27bb              CLR     XH
00197b 930f      RDFATS2:PUSH    DATA
00197c   +          PUSHY
00197c 93cf              PUSH    YL
00197d 93df              PUSH    YH
          .ENDMACRO
00197e   +          LDIZ    FATSTR0
00197e e1ed              LDI     ZL,LOW(fatstr0)
00197f e0f5              LDI     ZH,HIGH(fatstr0)
          .ENDMACRO
001980 d079              RCALL   BCDEHLP
001981 df8e              RCALL   LOADLST
001982   +          POPY
001982 91df              POP     YH
001983 91cf              POP     YL
          .ENDMACRO
001984 910f              POP     DATA
001985 0fe0              ADD     ZL,DATA
001986 1dff              ADC     ZH,NULL
001987 0fe0              ADD     ZL,DATA
001988 1dff              ADC     ZH,NULL
001989 91a1              LD      XL,Z+
00198a 81b0              LD      XH,Z
00198b 9508              RET
         ;FAT12
00198c 01fd      RDFATS0:MOVW    ZL,XL
00198d 0fee              LSL     ZL
00198e 1fff              ROL     ZH
00198f 0fea              ADD     ZL,XL
001990 1ffb              ADC     ZH,XH
001991 95f6              LSR     ZH
001992 95e7              ROR     ZL
001993 2f0a              MOV     DATA,XL
001994 2faf              MOV     XL,ZH
001995 27bb              CLR     XH
001996 27cc              CLR     YL
001997 27dd              CLR     YH
001998 95a6              LSR     XL
001999 930f              PUSH    DATA
00199a   +          PUSHZ
00199a 93ef              PUSH    ZL
00199b 93ff              PUSH    ZH
          .ENDMACRO
00199c   +          LDIZ    FATSTR0
00199c e1ed              LDI     ZL,LOW(fatstr0)
00199d e0f5              LDI     ZH,HIGH(fatstr0)
          .ENDMACRO
00199e d05b              RCALL   BCDEHLP
00199f df70              RCALL   LOADLST
0019a0   +          POPY
0019a0 91df              POP     YH
0019a1 91cf              POP     YL
          .ENDMACRO
0019a2 70d1              ANDI    YH,$01
0019a3 0fec              ADD     ZL,YL
0019a4 1ffd              ADC     ZH,YH
0019a5 91c1              LD      YL,Z+
0019a6 30f5              CPI     ZH,HIGH(BUF4FAT+512)
0019a7 f431              BRNE    RDFATS4
0019a8 93cf              PUSH    YL
0019a9   +          LDIY    0
0019a9 e0c0              LDI     YL,LOW(0x0)
0019aa e0d0              LDI     YH,HIGH(0x0)
          .ENDMACRO
0019ab 9611              ADIW    XL,1
0019ac df63              RCALL   LOADLST
0019ad 91cf              POP     YL
0019ae 910f      RDFATS4:POP     DATA
0019af 81b0              LD      XH,Z
0019b0 2fac              MOV     XL,YL
0019b1   +          LDIY    0
0019b1 e0c0              LDI     YL,LOW(0x0)
0019b2 e0d0              LDI     YH,HIGH(0x0)
          .ENDMACRO
0019b3 9506              LSR     DATA
0019b4 f440              BRCC    RDFATS3
0019b5 95b6              LSR     XH
0019b6 95a7              ROR     XL
0019b7 95b6              LSR     XH
0019b8 95a7              ROR     XL
0019b9 95b6              LSR     XH
0019ba 95a7              ROR     XL
0019bb 95b6              LSR     XH
0019bc 95a7              ROR     XL
0019bd 70bf      RDFATS3:ANDI    XH,$0F
0019be 9508              RET
         ;
         ;--------------------------------------
         ;вычисление реального сектора
         ;на входе YX==номер FAT
         ;на выходе YX==адрес сектора
0019bf 2f0d      REALSEC:MOV     DATA,YH
0019c0 2b0c              OR      DATA,YL
0019c1 2b0b              OR      DATA,XH
0019c2 2b0a              OR      DATA,XL
0019c3 f459              BRNE    REALSE1
0019c4   +          LDIZ    FATSTR1
0019c4 e2e1              LDI     ZL,LOW(fatstr1)
0019c5 e0f5              LDI     ZH,HIGH(fatstr1)
          .ENDMACRO
0019c6   +          LDSX    SEC_FAT+0
0019c6 91a0 0507         LDS     XL,sec_fat+0x0
0019c8 91b0 0508         LDS     XH,sec_fat+0x0+1
          .ENDMACRO
0019ca   +          LDSY    SEC_FAT+2
0019ca 91c0 0509         LDS     YL,sec_fat+0x2
0019cc 91d0 050a         LDS     YH,sec_fat+0x2+1
          .ENDMACRO
0019ce c02b              RJMP    BCDEHLP
0019cf 9712      REALSE1:SBIW    XL,2            ;номер кластера-2
0019d0 09cf              SBC     YL,NULL
0019d1 09df              SBC     YH,NULL
0019d2 9100 0502         LDS     DATA,BYTSSEC
0019d4 c004              RJMP    REALSE2
0019d5 0faa      REALSE3:LSL     XL
0019d6 1fbb              ROL     XH
0019d7 1fcc              ROL     YL
0019d8 1fdd              ROL     YH
0019d9 9506      REALSE2:LSR     DATA
0019da f7d0              BRCC    REALSE3
                                         ;умножили на размер кластера
0019db   +          LDIZ    STARTRZ
0019db e0ed              LDI     ZL,LOW(startrz)
0019dc e0f5              LDI     ZH,HIGH(startrz)
          .ENDMACRO
0019dd d01c              RCALL   BCDEHLP         ;прибавили смещение от начала диска
0019de   +          LDIZ    FRSTDAT
0019de e1e1              LDI     ZL,LOW(frstdat)
0019df e0f5              LDI     ZH,HIGH(frstdat)
          .ENDMACRO
0019e0 c019              RJMP    BCDEHLP         ;прибавили смещение от начала раздела
         ;
         ;--------------------------------------
         ;YX>>9 (деление на 512)
0019e1 2fab      BCDE200:MOV     XL,XH
0019e2 2fbc              MOV     XH,YL
0019e3 2fcd              MOV     YL,YH
0019e4 e0d0              LDI     YH,0
0019e5 e001              LDI     DATA,1
         ; - - - - - - - - - - - - - - - - - - -
         ;YXDATA>>до"переноса"
         ;если в DATA вкл.только один бит, то получается
         ;YX=YX/DATA
0019e6 95d6      BCDE_A1:LSR     YH
0019e7 95c7              ROR     YL
0019e8 95b7              ROR     XH
0019e9 95a7              ROR     XL
0019ea 9507      BCDE_A: ROR     DATA
0019eb f7d0              BRCC    BCDE_A1
0019ec 9508              RET
         ;
         ;--------------------------------------
         ;YX=[Z]-YX
0019ed 9101      BCDEHLM:LD      DATA,Z+
0019ee 1b0a              SUB     DATA,XL
0019ef 2fa0              MOV     XL,DATA
0019f0 9101              LD      DATA,Z+
0019f1 0b0b              SBC     DATA,XH
0019f2 2fb0              MOV     XH,DATA
0019f3 9101              LD      DATA,Z+
0019f4 0b0c              SBC     DATA,YL
0019f5 2fc0              MOV     YL,DATA
0019f6 8100              LD      DATA,Z
0019f7 0b0d              SBC     DATA,YH
0019f8 2fd0              MOV     YH,DATA
0019f9 9508              RET
         ;
         ;--------------------------------------
         ;YX=YX+[Z]
0019fa 9101      BCDEHLP:LD      DATA,Z+
0019fb 0fa0              ADD     XL,DATA
0019fc 9101              LD      DATA,Z+
0019fd 1fb0              ADC     XH,DATA
0019fe 9101              LD      DATA,Z+
0019ff 1fc0              ADC     YL,DATA
001a00 8100              LD      DATA,Z
001a01 1fd0              ADC     YH,DATA
001a02 9508              RET
         ;
         ;--------------------------------------
         ;YX=YX+R25R24
001a03 0fa8      HLDEPBC:ADD     XL,R24
001a04 1fb9              ADC     XH,R25
001a05 1dcf              ADC     YL,NULL
001a06 1ddf              ADC     YH,NULL
001a07 9508              RET
         ;
         ;--------------------------------------
         ;
001a08 dfd8      RASCHET:RCALL   BCDE200
001a09   +          LDIZ    SEC_FAT
001a09 e0e7              LDI     ZL,LOW(sec_fat)
001a0a e0f5              LDI     ZH,HIGH(sec_fat)
          .ENDMACRO
001a0b dfe1              RCALL   BCDEHLM
001a0c 2f0a              MOV     DATA,XL
001a0d 7f00              ANDI    DATA,$F0
001a0e 2b0b              OR      DATA,XH
001a0f 2b0c              OR      DATA,YL
001a10 2b0d              OR      DATA,YH
001a11 9508              RET
         ;
         ;--------------------------------------
         ;out:   DATA == 0 - считан последний сектор файла
          NEXTSEC:
001a12   +          SPICS_SET
001a12 9ac0              SBI     PORTB,0
          .ENDMACRO
001a13 e507              LDI     DATA,SD_DATA
001a14 b90f              OUT     SPDR,DATA
001a15 b00e      NEXTSE1:IN      R0,SPSR
001a16 fe07              SBRS    R0,SPIF
001a17 cffd              RJMP    NEXTSE1
001a18 b00f              IN      R0,SPDR
001a19   +          SPICS_CLR
001a19 98c0              CBI     PORTB,0
          .ENDMACRO
         
001a1a   +          LDIZ    KOL_CLS
001a1a e3e0              LDI     ZL,LOW(kol_cls)
001a1b e0f5              LDI     ZH,HIGH(kol_cls)
          .ENDMACRO
001a1c 9101              LD      DATA,Z+
001a1d 9111              LD      TEMP,Z+
001a1e 2b01              OR      DATA,TEMP
001a1f 9111              LD      TEMP,Z+
001a20 2b01              OR      DATA,TEMP
001a21 9111              LD      TEMP,Z+
001a22 2b01              OR      DATA,TEMP
001a23 f1e1              BREQ    LSTCLSF
001a24   +          LDSX    TFILCLS+0
001a24 91a0 052b         LDS     XL,tfilcls+0x0
001a26 91b0 052c         LDS     XH,tfilcls+0x0+1
          .ENDMACRO
001a28   +          LDSY    TFILCLS+2
001a28 91c0 052d         LDS     YL,tfilcls+0x2
001a2a 91d0 052e         LDS     YH,tfilcls+0x2+1
          .ENDMACRO
001a2c df92              RCALL   REALSEC
001a2d 9100 052a         LDS     DATA,NUMSECK
001a2f 0fa0              ADD     XL,DATA
001a30 1dbf              ADC     XH,NULL
001a31 1dcf              ADC     YL,NULL
001a32 1ddf              ADC     YH,NULL
001a33 ded8              RCALL   LOAD_DATA
001a34   +          LDSX    TFILCLS+0
001a34 91a0 052b         LDS     XL,tfilcls+0x0
001a36 91b0 052c         LDS     XH,tfilcls+0x0+1
          .ENDMACRO
001a38   +          LDSY    TFILCLS+2
001a38 91c0 052d         LDS     YL,tfilcls+0x2
001a3a 91d0 052e         LDS     YH,tfilcls+0x2+1
          .ENDMACRO
001a3c 9100 052a         LDS     DATA,NUMSECK
001a3e 9503              INC     DATA
001a3f 9300 052a         STS     NUMSECK,DATA
001a41 9110 0502         LDS     TEMP,BYTSSEC
001a43 1710              CP      TEMP,DATA
001a44 f4c9              BRNE    NEXT_OK
         
001a45 92f0 052a         STS     NUMSECK,NULL
001a47 df1a              RCALL   RDFATZP
001a48   +          STSX    TFILCLS+0
001a48 93a0 052b         STS     tfilcls+0x0,XL
001a4a 93b0 052c         STS     tfilcls+0x0+1,XH
          .ENDMACRO
001a4c   +          STSY    TFILCLS+2
001a4c 93c0 052d         STS     tfilcls+0x2,YL
001a4e 93d0 052e         STS     tfilcls+0x2+1,YH
          .ENDMACRO
001a50   +          LDIZ    KOL_CLS
001a50 e3e0              LDI     ZL,LOW(kol_cls)
001a51 e0f5              LDI     ZH,HIGH(kol_cls)
          .ENDMACRO
001a52 8100              LD      DATA,Z
001a53 5001              SUBI    DATA,1
001a54 9301              ST      Z+,DATA
001a55 8100              LD      DATA,Z
001a56 090f              SBC     DATA,NULL
001a57 9301              ST      Z+,DATA
001a58 8100              LD      DATA,Z
001a59 090f              SBC     DATA,NULL
001a5a 9301              ST      Z+,DATA
001a5b 8100              LD      DATA,Z
001a5c 090f              SBC     DATA,NULL
001a5d 9301              ST      Z+,DATA
001a5e ef0f      NEXT_OK:SER     DATA
001a5f 9508              RET
         
001a60   +  LSTCLSF:LDSX    TFILCLS+0
001a60 91a0 052b         LDS     XL,tfilcls+0x0
001a62 91b0 052c         LDS     XH,tfilcls+0x0+1
          .ENDMACRO
001a64   +          LDSY    TFILCLS+2
001a64 91c0 052d         LDS     YL,tfilcls+0x2
001a66 91d0 052e         LDS     YH,tfilcls+0x2+1
          .ENDMACRO
001a68 df56              RCALL   REALSEC
001a69 9100 052a         LDS     DATA,NUMSECK
001a6b 0fa0              ADD     XL,DATA
001a6c 1dbf              ADC     XH,NULL
001a6d 1dcf              ADC     YL,NULL
001a6e 1ddf              ADC     YH,NULL
001a6f de9c              RCALL   LOAD_DATA
001a70 9100 052a         LDS     DATA,NUMSECK
001a72 9503              INC     DATA
001a73 9300 052a         STS     NUMSECK,DATA
001a75 9110 052f         LDS     TEMP,MPHWOST
001a77 1b01              SUB     DATA,TEMP
001a78 9508              RET
         ;
         ;--------------------------------------
         ;
          SD_ERROR:
001a79 9300 053d         STS     SDERROR,DATA
001a7b ef1f              LDI     TEMP,LOW(RAMEND)
001a7c bf1d              OUT     SPL,TEMP
001a7d e110              LDI     TEMP,HIGH(RAMEND)
001a7e bf1e              OUT     SPH,TEMP
         
001a7f e0a0              LDI     XL,0
001a80 e0b4              LDI     XH,4
001a81 d0d8              RCALL   SET_CURSOR
001a82   +          LDIZ    MSG_SDERROR*2
001a82 e0ec              LDI     ZL,LOW(msg_sderror*0x2)
001a83 e0f1              LDI     ZH,HIGH(msg_sderror*0x2)
          .ENDMACRO
001a84 d0e1              RCALL   PRINTSTRZ
001a85 9100 053d         LDS     DATA,SDERROR
001a87 3001              CPI     DATA,1
001a88 f421              BRNE    SD_ERR2
001a89   +          LDIZ    MSG_CARD*2
001a89 e1e8              LDI     ZL,LOW(msg_card*0x2)
001a8a e0f1              LDI     ZH,HIGH(msg_card*0x2)
          .ENDMACRO
001a8b d0da              RCALL   PRINTSTRZ
001a8c c011              RJMP    SD_NOTFOUND
          SD_ERR2:
001a8d 3002              CPI     DATA,2
001a8e f421              BRNE    SD_ERR3
001a8f   +          LDIZ    MSG_READERROR*2
001a8f e1ee              LDI     ZL,LOW(msg_readerror*0x2)
001a90 e0f1              LDI     ZH,HIGH(msg_readerror*0x2)
          .ENDMACRO
001a91 d0d4              RCALL   PRINTSTRZ
001a92 c01e              RJMP    SD_ERR9
          SD_ERR3:
001a93 3003              CPI     DATA,3
001a94 f421              BRNE    SD_ERR4
001a95   +          LDIZ    MSG_FAT*2
001a95 e2ea              LDI     ZL,LOW(msg_fat*0x2)
001a96 e0f1              LDI     ZH,HIGH(msg_fat*0x2)
          .ENDMACRO
001a97 d0ce              RCALL   PRINTSTRZ
001a98 c005              RJMP    SD_NOTFOUND
          SD_ERR4:
001a99 3004              CPI     DATA,4
001a9a f439              BRNE    SD_ERR5
001a9b   +          LDIZ    MSG_FILE*2
001a9b e2ee              LDI     ZL,LOW(msg_file*0x2)
001a9c e0f1              LDI     ZH,HIGH(msg_file*0x2)
          .ENDMACRO
001a9d d0c8              RCALL   PRINTSTRZ
          SD_NOTFOUND:
001a9e   +          LDIZ    MSG_NOTFOUND*2
001a9e e3e4              LDI     ZL,LOW(msg_notfound*0x2)
001a9f e0f1              LDI     ZH,HIGH(msg_notfound*0x2)
          .ENDMACRO
001aa0 d0c5              RCALL   PRINTSTRZ
001aa1 c00f              RJMP    SD_ERR9
          SD_ERR5:
001aa2 3005              CPI     DATA,5
001aa3 f439              BRNE    SD_ERR6
001aa4   +          LDIZ    MSG_FILE*2
001aa4 e2ee              LDI     ZL,LOW(msg_file*0x2)
001aa5 e0f1              LDI     ZH,HIGH(msg_file*0x2)
          .ENDMACRO
001aa6 d0bf              RCALL   PRINTSTRZ
001aa7   +          LDIZ    MSG_EMPTY*2
001aa7 e4e0              LDI     ZL,LOW(msg_empty*0x2)
001aa8 e0f1              LDI     ZH,HIGH(msg_empty*0x2)
          .ENDMACRO
001aa9 d0bc              RCALL   PRINTSTRZ
001aaa c006              RJMP    SD_ERR9
          SD_ERR6:
001aab   +          LDIZ    MSG_FILE*2
001aab e2ee              LDI     ZL,LOW(msg_file*0x2)
001aac e0f1              LDI     ZH,HIGH(msg_file*0x2)
          .ENDMACRO
001aad d0b8              RCALL   PRINTSTRZ
001aae   +          LDIZ    MSG_TOOBIG*2
001aae e4e8              LDI     ZL,LOW(msg_toobig*0x2)
001aaf e0f1              LDI     ZH,HIGH(msg_toobig*0x2)
          .ENDMACRO
001ab0 d0b5              RCALL   PRINTSTRZ
          SD_ERR9:
         ;
001ab1 91e0 053d         LDS     ZL,SDERROR
001ab3   +  SD_ERR1:LED_ON
001ab3 98c7              CBI     PORTB,7
          .ENDMACRO
001ab4 e005              LDI     DATA,5
001ab5 d0c8              RCALL   BEEP
001ab6   +          LED_OFF
001ab6 9ac7              SBI     PORTB,7
          .ENDMACRO
001ab7 e005              LDI     DATA,5
001ab8 d0d4              RCALL   DELAY
001ab9 95ea              DEC     ZL
001aba f7c1              BRNE    SD_ERR1
         ;
001abb e0a0              LDI     XL,0
001abc e0b6              LDI     XH,6
001abd d09c              RCALL   SET_CURSOR
001abe   +          LDIZ    MSG_HALT*2
001abe e9e0              LDI     ZL,LOW(msg_halt*0x2)
001abf e0f1              LDI     ZH,HIGH(msg_halt*0x2)
          .ENDMACRO
001ac0 d0a5              RCALL   PRINTSTRZ
001ac1 9816              CBI     DDRE,6
001ac2 cfff      STOP2:  RJMP    STOP2
         ;
         ;--------------------------------------
         ;out:   ZL,ZH
001ac3 d03c      F_ID:   RCALL   F_RST
001ac4 e900              LDI     DATA,$90
001ac5 d040              RCALL   F_CMD
001ac6 ef14              LDI     TEMP,FLASH_CTRL
001ac7 e003              LDI     DATA,0B00000011
001ac8 d077              RCALL   FPGA_REG
001ac9 e0a0              LDI     XL,$00
001aca e0b0              LDI     XH,$00
001acb e0c0              LDI     YL,$00
001acc d067              RCALL   F_IN
001acd 2fe0              MOV     ZL,DATA
001ace e0a1              LDI     XL,$01
001acf d064              RCALL   F_IN
001ad0 2ff0              MOV     ZH,DATA
001ad1 c02e              RJMP    F_RST
         ;
         ;--------------------------------------
         ;in:    RAM[Z] == data
         ;       XL,XH,YL == address
001ad2 ea00      F_WRITE:LDI     DATA,$A0
001ad3 d032              RCALL   F_CMD
001ad4 ef14              LDI     TEMP,FLASH_CTRL
001ad5 e001              LDI     DATA,0B00000001
001ad6 d069              RCALL   FPGA_REG
001ad7 ef10              LDI     TEMP,FLASH_LOADDR
001ad8 2f0a              MOV     DATA,XL
001ad9 d066              RCALL   FPGA_REG
001ada ef11              LDI     TEMP,FLASH_MIDADDR
001adb 2f0b              MOV     DATA,XH
001adc d063              RCALL   FPGA_REG
001add ef12              LDI     TEMP,FLASH_HIADDR
001ade 2f0c              MOV     DATA,YL
001adf d060              RCALL   FPGA_REG
001ae0 ef13              LDI     TEMP,FLASH_DATA
001ae1 8100              LD      DATA,Z
001ae2 d05d              RCALL   FPGA_REG
001ae3 ef14              LDI     TEMP,FLASH_CTRL
001ae4 e005              LDI     DATA,0B00000101
001ae5 d05a              RCALL   FPGA_REG
001ae6 e001              LDI     DATA,0B00000001
001ae7 d05d              RCALL   FPGA_SAME_REG
001ae8 e003              LDI     DATA,0B00000011
001ae9 d05b              RCALL   FPGA_SAME_REG
001aea ef13              LDI     TEMP,FLASH_DATA
001aeb d054              RCALL   FPGA_REG
001aec d058      F_WRIT1:RCALL   FPGA_SAME_REG
001aed 8110              LD      TEMP,Z
001aee 2701              EOR     DATA,TEMP
001aef fd07              SBRC    DATA,7
001af0 cffb              RJMP    F_WRIT1
001af1 9508              RET
         ;
         ;--------------------------------------
         ;
001af2 e800      F_ERASE:LDI     DATA,$80
001af3 d012              RCALL   F_CMD
001af4 e100              LDI     DATA,$10
001af5 d010              RCALL   F_CMD
001af6 ef14              LDI     TEMP,FLASH_CTRL
001af7 e003              LDI     DATA,0B00000011
001af8 d047              RCALL   FPGA_REG
001af9 ef13              LDI     TEMP,FLASH_DATA
001afa d045              RCALL   FPGA_REG
001afb   +  F_ERAS1:LED_OFF
001afb 9ac7              SBI     PORTB,7
          .ENDMACRO
001afc d048              RCALL   FPGA_SAME_REG
001afd   +          LED_ON
001afd 98c7              CBI     PORTB,7
          .ENDMACRO
001afe ff07              SBRS    DATA,7
001aff cffb              RJMP    F_ERAS1
         ;
         ; - - - - - - - - - - - - - - - - - - -
         ;
001b00 ef00      F_RST:  LDI     DATA,$F0
001b01 d004              RCALL   F_CMD
001b02 e113              LDI     TEMP,19 ;~5 us @ 11.0592 MHz
001b03 951a      F_RST1: DEC     TEMP    ;1
001b04 f7f1              BRNE    F_RST1  ;2
001b05 9508              RET
         ;
         ;--------------------------------------
         ;in:    DATA == instructions
001b06 930f      F_CMD:  PUSH    DATA
001b07 ef14              LDI     TEMP,FLASH_CTRL
001b08 e001              LDI     DATA,0B00000001
001b09 d036              RCALL   FPGA_REG
001b0a ef10              LDI     TEMP,FLASH_LOADDR
001b0b e505              LDI     DATA,$55
001b0c d033              RCALL   FPGA_REG
001b0d ef11              LDI     TEMP,FLASH_MIDADDR
001b0e e505              LDI     DATA,$55
001b0f d030              RCALL   FPGA_REG
001b10 ef13              LDI     TEMP,FLASH_DATA
001b11 ea0a              LDI     DATA,$AA
001b12 d02d              RCALL   FPGA_REG
001b13 ef14              LDI     TEMP,FLASH_CTRL
001b14 e005              LDI     DATA,0B00000101
001b15 d02a              RCALL   FPGA_REG
001b16 e001              LDI     DATA,0B00000001
001b17 d02d              RCALL   FPGA_SAME_REG
001b18 ef10              LDI     TEMP,FLASH_LOADDR
001b19 ea0a              LDI     DATA,$AA
001b1a d025              RCALL   FPGA_REG
001b1b ef11              LDI     TEMP,FLASH_MIDADDR
001b1c e20a              LDI     DATA,$2A
001b1d d022              RCALL   FPGA_REG
001b1e ef13              LDI     TEMP,FLASH_DATA
001b1f e505              LDI     DATA,$55
001b20 d01f              RCALL   FPGA_REG
001b21 ef14              LDI     TEMP,FLASH_CTRL
001b22 e005              LDI     DATA,0B00000101
001b23 d01c              RCALL   FPGA_REG
001b24 e001              LDI     DATA,0B00000001
001b25 d01f              RCALL   FPGA_SAME_REG
001b26 ef10              LDI     TEMP,FLASH_LOADDR
001b27 e505              LDI     DATA,$55
001b28 d017              RCALL   FPGA_REG
001b29 ef11              LDI     TEMP,FLASH_MIDADDR
001b2a e505              LDI     DATA,$55
001b2b d014              RCALL   FPGA_REG
001b2c ef13              LDI     TEMP,FLASH_DATA
001b2d 910f              POP     DATA
001b2e d011              RCALL   FPGA_REG
001b2f ef14              LDI     TEMP,FLASH_CTRL
001b30 e005              LDI     DATA,0B00000101
001b31 d00e              RCALL   FPGA_REG
001b32 e001              LDI     DATA,0B00000001
001b33 c011              RJMP    FPGA_SAME_REG
         ;
         ;--------------------------------------
         ;in:    XL,XH,YL == address
         ;out:   DATA == data
001b34 ef10      F_IN:   LDI     TEMP,FLASH_LOADDR
001b35 2f0a              MOV     DATA,XL
001b36 d009              RCALL   FPGA_REG
001b37 ef11              LDI     TEMP,FLASH_MIDADDR
001b38 2f0b              MOV     DATA,XH
001b39 d006              RCALL   FPGA_REG
001b3a ef12              LDI     TEMP,FLASH_HIADDR
001b3b 2f0c              MOV     DATA,YL
001b3c d003              RCALL   FPGA_REG
001b3d ef13              LDI     TEMP,FLASH_DATA
001b3e ef0f              LDI     DATA,$FF
001b3f c000              RJMP    FPGA_REG
         ;
         ;--------------------------------------
         ;
          FPGA_REG:
001b40 930f              PUSH    DATA
001b41   +          SPICS_SET
001b41 9ac0              SBI     PORTB,0
          .ENDMACRO
001b42 b91f              OUT     SPDR,TEMP
001b43 d003              RCALL   RD_WHEN_RDY
001b44 910f              POP     DATA
          FPGA_SAME_REG:
001b45   +          SPICS_CLR
001b45 98c0              CBI     PORTB,0
          .ENDMACRO
001b46 b90f              OUT     SPDR,DATA
         ;
          RD_WHEN_RDY:
001b47 b00e              IN      R0,SPSR
001b48 fe07              SBRS    R0,SPIF
001b49 cffd              RJMP    RD_WHEN_RDY
001b4a b10f              IN      DATA,SPDR
001b4b   +          SPICS_SET
001b4b 9ac0              SBI     PORTB,0
          .ENDMACRO
001b4c 9508              RET
         ;
         ;--------------------------------------
         ;UART_PRINTSTRZ
         ;in:    Z == указательна строку (в младших 64K)
          UART_PRINTSTRZ:
001b4d 9105      UPSTRZ1:LPM     DATA,Z+
001b4e 2300              TST     DATA
001b4f f049              BREQ    UPSTRZ2
001b50 931f              PUSH    TEMP
001b51   +  UPCHR1: INPORT  TEMP,UCSR1A
001b51 9110 009b         LDS     temp,ucsr1a+$20*(ucsr1a<$40)
          .ENDMACRO
001b53 ff15              SBRS    TEMP,UDRE
001b54 cffc              RJMP    UPCHR1
001b55   +          OUTPORT UDR1,DATA
001b55 9300 009c         STS     udr1+$20*(udr1<$40),data
          .ENDMACRO
001b57 911f              POP     TEMP
001b58 cff4              RJMP    UPSTRZ1
001b59 9508      UPSTRZ2:RET
         ;
         ;--------------------------------------
         ;in:    XL - x (0..31)
         ;       XH - y (0..23)
          SET_CURSOR:
001b5a e210              LDI     TEMP,32
001b5b 9fb1              MUL     XH,TEMP
001b5c 27bb              CLR     XH
001b5d 0da0              ADD     XL,R0
001b5e 1db1              ADC     XH,R1
001b5f 9711              SBIW    XL,1
001b60 e410              LDI     TEMP,SCR_LOADDR
001b61 2f0a              MOV     DATA,XL
001b62 dfdd              RCALL   FPGA_REG
001b63 e411              LDI     TEMP,SCR_HIADDR
001b64 2f0b              MOV     DATA,XH
001b65 cfda              RJMP    FPGA_REG
         ;
         ;--------------------------------------
         ;PRINTSTRZ
         ;in:    Z == указательна строку (в младших 64K)
          PRINTSTRZ:
001b66   +          SPICS_SET
001b66 9ac0              SBI     PORTB,0
          .ENDMACRO
001b67 e414              LDI     TEMP,SCR_CHAR
001b68 b91f              OUT     SPDR,TEMP
001b69 dfdd              RCALL   RD_WHEN_RDY
001b6a 9105              LPM     DATA,Z+
001b6b dfd9      PRSTRZ1:RCALL   FPGA_SAME_REG
001b6c 9105              LPM     DATA,Z+
001b6d 2300              TST     DATA
001b6e f7e1              BRNE    PRSTRZ1
001b6f 9508              RET
         ;
         ;--------------------------------------
         ;out byte in hex
         ;in:    DATA == byte
001b70 930f      HEXBYTE:PUSH    DATA
001b71 9502              SWAP    DATA
001b72 d001              RCALL   HEXHALF
001b73 910f              POP     DATA
001b74 700f      HEXHALF:ANDI    DATA,$0F
001b75 300a              CPI     DATA,$0A
001b76 f008              BRCS    HEXBYT1
001b77   +          ADDI    DATA,$07
001b77 5f09              SUBI    data,(-0x7&$FF)
          .ENDMACRO
001b78   +  HEXBYT1:ADDI    DATA,$30
001b78 5d00              SUBI    data,(-0x30&$FF)
          .ENDMACRO
         ;
         ; - - - - - - - - - - - - - - - - - - -
         ;PUTCHAR
         ;in:    DATA == char
001b79 931f      PUTCHAR:PUSH    TEMP
001b7a e414              LDI     TEMP,SCR_CHAR
001b7b dfc4              RCALL   FPGA_REG
001b7c 911f              POP     TEMP
001b7d 9508              RET
         ;
         ;--------------------------------------
         ;in:    DATA - длительность *0.1s
          BEEP:
001b7e e614      BEE2:   LDI     TEMP,100;100 периодов 1кГц
001b7f 981e      BEE1:   CBI     PORTE,6
001b80 d007              RCALL   BEEPDLY
001b81 9a1e              SBI     PORTE,6
001b82 d005              RCALL   BEEPDLY
001b83 951a              DEC     TEMP
001b84 f7d1              BRNE    BEE1
001b85 950a              DEC     DATA
001b86 f7b9              BRNE    BEE2
001b87 9508              RET
         
001b88 e684      BEEPDLY:LDI     R24,$64
001b89 e095              LDI     R25,$05
001b8a 9701      BEEPDL1:SBIW    R24,1
001b8b f7f1              BRNE    BEEPDL1
001b8c 9508              RET
         ;
         ;--------------------------------------
         ;DELAY
         ;in:    DATA/10 == количество секунд
          DELAY:
001b8d e14e              LDI     R20,$1E ;\
001b8e ef5e              LDI     R21,$FE ;/ 0,1 сек @ 11.0592MHz
001b8f 95c8      DELAY1: LPM             ;3
001b90 95c8              LPM             ;3
001b91 95c8              LPM             ;3
001b92 95c8              LPM             ;3
001b93 5041              SUBI    R20,1   ;1
001b94 4050              SBCI    R21,0   ;1
001b95 4000              SBCI    DATA,0  ;1
001b96 f7c1              BRNE    DELAY1  ;2(1)
001b97 9508              RET

Assembly complete with no errors.
