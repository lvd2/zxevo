
;LAST UPDATE: 28.07.2017 savelij

;        MAIN	"CASH2_0.H",0x47

;------------
;DISK OPTIONS
;------------

TRDOS   LD	HL,TRDOS_T
        LD	A,0x30
        CALL	SUBTYTL            ;TYTLE OUT

DSK_MD1 LD	B,000        ;MODE HI-LIGHT
        LD	DE,0x0930
        LD	A,B
        PUSH	AF
        OR	A
        JR	NZ,$+4
        LD	E,0x17
        DEC	A
        JR	NZ,$+4
        LD	E,0x0F

        LDA (TRDINK+1-TRD_REZ+TRDREZ1),E
        CALL	SUBHILI
        madd L,9

        POP	AF          ;MAKE SLOT HAS NO OPTIONS 4-6
        CP	2
        JR	Z,L1DSKMD

DSK_MD2 LD	B,000
        LD	D,0x0B
        CALL	SUBHILI
L1DSKMD madd L,11

DSK_MD3 LD	B,000
        LD	D,0x0C
        CALL	SUBHILI

;---

KEYDISK key 0xF7                 ;MODES 1-3 SELECT
        LD	HL,DSK_MD1+1
        LD	BC,0x03FF
J1DSKMD INC	C           ;1-3 MODE1
        rjr L2DSKMD
        DJNZ	J1DSKMD

        LD	HL,DSK_MD2+1 ;4-5 MODE2
        LD	C,0
        rjr L2DSKMD
        INC	C
        rjr L2DSKMD

        key 0xEF
        rjr D_DRIVE     ;0 - CHANGE DISK DRIVE
        RRA	
        LD	HL,DSK_MD3+1 ;8,7 MODE3
        LD	C,1
        rjr L2DSKMD
        DEC	C
        rjr L2DSKMD
        LD	HL,DSK_MD2+1 ;6 MODE2
        LD	C,2
        rjr L2DSKMD

        key 0x7F         ;NO - CANCEL
        BIT	3,A
        JP	Z,TYTMAIN
        key 0xDF         ;YES - CONT.
        BIT	4,A
        JR	Z,L3DSKMD
        JR	KEYDISK      ;WAIT KEY

L2DSKMD LD	A,(HL)
        CP	C
        JR	Z,KEYDISK
        LD	(HL),C
E_DSKMD CALL	ANTYKEY
        JP	TRDOS

D_DRIVE LD	A,(TRDOS_T+12)
        INC	A
        CP	"E"
        JR	NZ,$+4
        LDA (TRDOS_T+12),"A"
        JR	E_DSKMD

;---

L3DSKMD LD	DE,STS_BNK*0x100+DAT_BNK      ;STORED SCREEN > MEMORY
        CALL	COPY_B
        EXX	            ;BC'=32765
        LD	HL,23296                     ;[23296;0x7FFF] > MEMORY
        LD	DE,49152+6912
        LD	BC,32768-23296
        LD	A,DAT_BNK
        CALL	INFLDIR
        LD	IY,23610
        mldir SYSTEM,23552,320   ;INSTALL TRDOS/BASIC SYS. VAR.S
        mldir TRDREZ1,TRD_REZ,eTRDREZ
        LD	(SP_TRDR+1),SP       ;STORE SP
        LD	SP,TRD_REZ-1

        LD	HL,102-22            ;STORE REGS & VAR.S
        LD	DE,REGS0
        LD	BC,22
        LDIR	
        LD	HL,XX_BANK+1
        LDI	
        LD	HL,XX_DI
        LDI	
        LD	HL,XX_IM+1
        LDI	

        IN	A,(123)              ;CLOSE CASH

        CALL	TRD_REZ

ERABORT IN	A,(251)              ;OPEN CASH

        LD	HL,REGS0             ;RESTORE REGS & VAR.S
        LD	DE,102-22
        LD	BC,22
        LDIR	
        LD	DE,XX_BANK+1
        LDI	
        LD	DE,XX_DI
        LDI	
        LD	DE,XX_IM+1
        LDI	

SP_TRDR LD	SP,0                 ;RESTORE SP
        LD	DE,DAT_BNK*0x100+0x15  ;MEM>[0x4000;0x7FFF]
        CALL	COPY_B
        CALL	STO_SCR
        JP	TYTMAIN

;---------------
;TRDOS REZIDENT;
;---------------

TRDREZ1
		PHASE TRD_REZ		;DISP	TRD_REZ

        LD	A,0xF         ;PRINT "Read Cat"
        LD	HL,TRCAT_T
        CALL	TRPRINT

        LDA (BNK3D13+1),CSH_BNK

        LD	A,(TRDOS_T+12)       ;SET DRIVE A/B/C/D
        SUB	"A"
        LD	C,1
        CALL	CAL3D13

        LD	HL,TRD_CAT           ;READ CAT
        LD	DE,0
        LD	BC,0x0905
        XOR	A
        CALL	CAL3D13

AFTEMAK LD	HL,TRD_CAT           ;SEARCH 12 SLOTS IN 128 FILES
        LD	DE,TRD_BUF
        LD	B,128
        EXX	
        LD	HL,TRD_FIL
        EXX	
;        LOCAL	
.J1      PUSH	BC
	PUSH DE
	PUSH HL
        LD	B,8
.J2      LD	A,(HL)       ;NAME MUST HAVE [32;127] SYMBOLS
        CP	32
        JR	C,.L1
        CP	128
        JR	NC,.L1
        INC	L
        DJNZ	.J2
        LD	B,6
        LD	DE,SLOT_P1
.J3      LD	A,(DE)       ;FILE PARAMETERS MUST EQU SOME PATTERN
        CP	(HL)
        JR	NZ,.L1
        INC	DE
        INC	L
        DJNZ	.J3

        LD	C,5
        LD	DE,SLOT_P4
.J6      LD	(.A1+2),DE
        INC	L
        INC	HL
        LD	A,(HL)       ;SLOT FOUND. IS IT 128K OR 48K?
        CP	"s"          ;"s"
        JR	NZ,.L2
        INC	L
        LD	A,(HL)
        CP	48           ;"0...9"
        JR	C,.L2
        CP	58
        JR	NC,.L2
        LD	(A_SLTNM+1),A
        INC	L
        LD	B,4
        LD	DE,SLOT_P2
.J4      LD	A,(DE)       ;"bank"
        CP	(HL)
        JR	NZ,.L2
        INC	DE
        INC	L
        DJNZ	.J4
.A1      LD	DE,(0)       ;17/19/20/22/23
        LD	A,(HL)
        CP	E
        JR	NZ,.L2
        INC	L
        LD	A,(HL)
        CP	D
        JR	NZ,.L2
        INC	L
        LD	B,6
        LD	DE,SLOT_P3
.J5      LD	A,(DE)       ;ADD.FILES PARAMETERS MUST EQU PATTERN
        CP	(HL)
        JR	NZ,.L2
        INC	DE
        INC	L
        DJNZ	.J5

        LD	DE,(.A1+2)
        INC	DE
        INC	DE
        DEC	C
        JR	NZ,.J6

.L2      LD	A,C          ;IF C=0 TH IT IS 128K
        EXX	            ;     ELSE IT IS  48K
        POP	DE
        PUSH	DE
        LD	(HL),E
        INC	L
        LD	(HL),D
        INC	L
        LD	(HL),A
        INC	L
        INC	L
        EXX	
        JR	NZ,.L1        ;IF FOUND 12 SLOTS TH STOP
        POP	HL
        POP DE
        POP BC
        JR	.L3

.L1      POP	HL          ;NEXT FILE
        LD	DE,16
        ADD	HL,DE
        POP	DE
        POP BC
        DEC	B
        JP	NZ,.J1
        EXX	            ;CLS UNUSED FILE LINK TABLE
        XOR	A
.J7      LD	(HL),A
        INC	L
        JR	NZ,.J7
        EXX	
.L3
;        ENDL	

;
XXX
        LD	HL,TRD_FIL   ;VIEW CAT.
        LD	DE,TRD_BUF
;        LOCAL	

.J1      LD	C,(HL)       ;BC = FILENAME ADDR.
        INC	L
        LD	B,(HL)
        INC	L
        LD	A,B          ;IF B=0 TH IT IS END OF LIST
        OR	A
        JR	Z,.E0

        PUSH	HL
        PUSH BC
        POP	HL          ;HL = BC
        LD	BC,8         ;PRINT FILENAME
        LDIR	
        LDA (DE),"."    ;"."
        INC	E
        POP	HL
        LD	BC,"82";"28"      ;"128/48K"
        LD	A,(HL)
        INC	L
        OR	A
        LD	A,"1"
        JR	Z,$+7
        LD	BC,"K8";"8K"
        LD	A,"4"
        LD	(DE),A
        INC	E
        LDA (DE),C
        INC	E
        LDA (DE),B
        INC	E
        LDA (DE)," "
        INC	E

        INC	L
        JR	NZ,.J1

        DEC	E
.E0      PUSH	HL
        EX	DE,HL
.J2      LD	(HL)," "
        INC	L
        LD	A,L
        CP	156
        JR	NZ,.J2
        POP	HL
        LD	A,L          ;A = (NUMBER OF SLOTS)-1
        SUB	208
        SRL	A
        SRL	A
        DEC	A
        LD	(SCURLIM+1),A

        XOR	A                   ;PUT (END OF LINE) FOR 3 LINES
        LD	(TRD_BUF+51),A
        LD	(TRD_BUF+103),A
        LD	(TRD_BUF+155),A

        LD	A,(TYTLOUT+1)
        ADD	A,4
        CALL	PRINTAT
        LD	HL,(SYMOUT5+3)       ;STORE ATTR ADDR. FOR SLOT VIEW
        LD	A,H
        SUB	0x40
        RRCA	
        RRCA	
        RRCA	
        OR	0x58
        LD	H,A
        LD	(SLTCURS+3),HL
        LD	HL,TRD_BUF           ;PRINT SLOT LIST
        LD	B,3
.J3      PUSH	BC
        CALL	TXTOUT5
        CALL	NEXTSTR
        POP	BC
        DJNZ	.J3
;        ENDL	

        LD	A,(DSK_MD1+1)        ;IF SAVE/LOAD TH SLOT BROWSER
        CP	2
        JP	Z,MAKSLOT            ;ELSE MAKESLOT
        LD	A,(TRD_BUF+8)        ;IF NO SLOTS
        CP	" "
        JP	Z,NO_SLOT

EKEYSLT LD	A,0x28
        LD	HL,YESLT_T
        CALL	PRINTIN
        XOR	A
        LD	(SLTCURS+1),A

        DI	
        IN	A,(251)
        CALL	SLTCURS
KEYSLOT CALL	halt
        key 0xFE         ;CAPS
        RRA	
        JR	C,L1KEYSL
        key 0x7F         ;BREAK - EXIT
        rjp ERABORT
        key 0xF7         ;CS+1 - EXIT
        rjp ERABORT
        BIT	3,A
        JR	Z,SCUR_LF
        key 0xEF
        rjp SCUR_EN     ;CS+0 - ENTER
        RRA	
        rjr SCUR_RG     ;CS+8 - CURSOR RIGHT
        rjr SCUR_UP     ;CS+7 - CURSOR UP
        rjr SCUR_DW     ;CS+6 - CURSOR DOWN
        JR	L2KEYSL
L1KEYSL key 0x7F
        rjp SCUR_EN     ;SPACE - ENTER
        key 0xEF
        rjr SCUR_EN     ;0 - ENTER
        rjr SCUR_UP     ;9 - CURSOR UP
        rjr SCUR_DW     ;8 - CURSOR DOWN
        rjr SCUR_RG     ;7 - CURSOR RIGHT
        rjr SCUR_LF     ;6 - CURSOR LEFT
        key 0xFB
        rjr SCUR_UP     ;Q - CURSOR UP
        key 0xFD
        rjr SCUR_DW     ;A - CURSOR DOWN
        key 0xBF
        rjr SCUR_EN     ;ENTER - ENTER
        key 0xDF
        rjr SCUR_RG     ;P - CURSOR RIGHT
        rjr SCUR_LF     ;O - CURSOR LEFT
L2KEYSL LDA (KEYHALT+1),10
        JP	KEYSLOT

SCUR_LF LD	A,(SLTCURS+1)
        OR	A
        JR	Z,KEYSLOT
        DEC	A
L1SCURR PUSH	AF
        CALL	SLTCURS
        POP	AF
        LD	(SLTCURS+1),A
        CALL	SLTCURS
        CALL	KEYHALT
        JP	KEYSLOT
SCUR_RG LD	A,(SLTCURS+1)
        CALL	SCURLIM
        JP	Z,KEYSLOT
        INC	A
        JR	L1SCURR
SCUR_UP LD	A,(SLTCURS+1)
        OR	A
        JP	Z,KEYSLOT
        SUB	4
        JR	NC,L1SCURR
        JP	KEYSLOT
SCUR_DW LD	A,(SLTCURS+1)
        ADD	A,4
        CALL	SCURLIM
        JR	Z,L1SCURR
        JR	C,L1SCURR
        JP	KEYSLOT
SCURLIM CP	000
        RET	

SCUR_EN DI	
        IN	A,(123)

        LD	HL,TRD_TXT
;        LOCAL	
        LD	A,(DSK_MD1+1)        ;PRINT "Save"/"Load"
        LD	DE,"aS";"Sa"
        LD	BC,"ev";"ve"
        OR	A
        PUSH	AF
        JR	Z,.L1
        LD	DE,"oL";"Lo"
        LD	BC,"da";"ad"
.L1      PUSH	HL
        LD	HL,ERSLT_T+6
        CALL	TR_DEBC
        POP	HL
        CALL	TR_DEBC
        LD	(HL)," "
        INC	L
        LD	A,(DSK_MD3+1)        ;PRINT "128K"/"48Kb"
        LD	DE,"21";"12"
        LD	BC,"K8";"8K"
        OR	A
        JR	Z,.L2
        LD	DE,"84";"48"
        LD	BC,"bK";"Kb"
.L2      CALL	TR_DEBC
        LD	DE,"O ";" O"              ;PRINT " Of "
        LD	BC," f";"f "
        CALL	TR_DEBC
        LD	A,(DSK_MD2+1)        ;PRINT "128K-State"/"Position n"
        LD	DE,TRDOST1
        OR	A
        JR	Z,.L3
        LD	DE,TRDOST2+19
        DEC	A
        JR	Z,.L3
        LD	DE,TRDOST3+19
.L3      EX	DE,HL
        LD	BC,10
        LDIR	
        EX	DE,HL
        LD	(HL)," "
        INC	L
        POP	AF                  ;PRINT "Into"/"From"
        LD	DE,"nI";"In"
        LD	BC,"ot";"to"
        JR	Z,.L4
        LD	DE,"rF";"Fr"
        LD	BC,"mo";"om"
.L4      PUSH	HL
        LD	HL,ERSLT_T+17
        CALL	TR_DEBC
        POP	HL
        CALL	TR_DEBC
        LD	(HL)," "
        INC	L
        LD	A,(SLTCURS+1)
        ADD	A,A
        ADD	A,A
        ADD	A,LOW (TRD_FIL);.TRD_FIL
        PUSH	HL
        LD	H,HIGH (TRD_BUF);'TRD_BUF           ;DE = FILENAME ADDR.
        LD	L,A
        LD	E,(HL)
        INC	L
        LD	D,(HL)
        INC	L
        LD	B,(HL)               ;B=0 TH 128K / C<>0 TH 48K
        POP	HL
        EX	DE,HL
        LD	(TRDNAME+1),HL
        PUSH	BC
        PUSH BC              ;PRINT FILENAME
        LD	BC,8
        LDIR	
        EX	DE,HL
        LD	(HL),"."             ;PRINT EXT (128/48K)
        INC	L
        POP	AF
        LD	B,"?"
        CALL	TR12848
        LD	DE,TRDOS_T+42
        EX	DE,HL
        LD	BC,9
        LDIR	
        POP	AF                  ;IF A=0 TH 128K-Slot: CONTINUE
        OR	A
        JR	Z,TRDINK
        LD	A,(DSK_MD3+1)        ;IF 48Kb Mode To 48K-Slot: CONT.
        OR	A
        JR	NZ,TRDINK
;        ENDL	
        LD	A,(TRDINK+1)         ;IF 128Kb Mode To 48K-Slot: STOP
        LD	HL,ERSLT_T
        CALL	PRINTIN
        CALL	YESORNO
        JP	NZ,ERABORT
        CALL	SLTCURS
        JP	EKEYSLT

TRDINK  LDA (INK3D13+1),0
        CALL	INK3D13
        CALL	YESORNO
        JP	NZ,ERABORT

        LD	HL,TRD_TXT+3
        LD	A,(DSK_MD1+1)
        OR	A
        LD	A,6
        JR	Z,$+4
        DEC	A
        INC	L
        LD	(TR_SVLD+1),A
        LD	DE,"ni";"in"
        LD	BC,":g";"g:"
        CALL	TR_DEBC

        LD	(HL)," "             ;" ["
        INC	L
        LD	(HL),"["
        INC	L
        LD	(TRD_DOT+1),HL
        LD	A,(DSK_MD3+1)        ;SPACES INSIDE [    ]
        LD	BC,0x2120             ;8*4+1=33 SPACES FOR 128K
        OR	A
        JR	Z,$+4
        LD	B,13                 ;3*4+1=13 SPACES FOR 48K
        LD	(HL),C
        INC	L
        DJNZ	$-2
        LD	(HL),"]"             ;"]"
        INC	L

;        LOCAL	
.J1      LD	(HL)," "
        INC	L
        LD	A,L
        CP	207
        JR	NZ,.J1
;        ENDL	

        CALL	INK3D13

TRDNAME LD	HL,000
        madd L,14
        LD	E,(HL)       ;DE = TRACK/SECTOR
        INC	L
        LD	D,(HL)
        LD	(23796),DE
        CALL	TR_REGS    ;SAVE/LOAD REGISTERS
        LD	C,21         ;SAVE/LOAD 48K MEMORY
        CALL	TR_BANK
        LD	C,18
        CALL	TR_BANK
        LD	C,16
        CALL	TR_BANK
        LD	A,(DSK_MD3+1)        ;STOP IF 48K ENOUGH
        OR	A
        RET	NZ
        LD	C,17         ;SAVE/LOAD OTHER 80K MEMORY
        CALL	TR_BANK
        LD	C,19
        CALL	TR_BANK
        LD	C,20
        CALL	TR_BANK
        LD	C,22
        CALL	TR_BANK
        LD	C,23

TR_BANK LD	A,(DSK_MD2+1)  ;IF 128K-State TH C=C (0x10...0x17)
;        LOCAL	
        OR	A
        JR	Z,.L1
        SET	6,C         ;IF Pos.1 TH C=C+0x40 (0x50...0x57)
        DEC	A
        JR	Z,.L1
        SET	7,C         ;IF Pos.2 TH C=C+0x40+0x80 (0xD0...0xD7)
.L1      LD	A,C
        CP	21           ;IF BANK=21 [0x4000;0x7FFF] TH STORED BANK
        JR	NZ,$+4
        LD	A,DAT_BNK
        LD	(BNK3D13+1),A
        LD	HL,0xC000     ;SAVE/LOAD 4 TRACKS & PRINT "...."
        CALL	TR_TRCK
        LD	HL,0xD000
        CALL	TR_TRCK
        LD	HL,0xE000
        CALL	TR_TRCK
        LD	HL,0xF000
;        ENDL	

TR_TRCK bank (BNK3D13+1)
        LD	DE,(23796)
TR_SVLD LD	BC,0x1005
        XOR	A
        CALL	CAL3D13
        bank CSH_BNK
TRD_DOT LD	HL,000
        LD	(HL),"."
        INC	L
        LD	(TRD_DOT+1),HL
INK3D13 LD	A,000
        LD	HL,TRD_TXT
        JP	PRINTIN

TR_REGS LD	A,(DSK_MD1+1)
;        LOCAL	
        OR	A
        PUSH	AF
        JR	NZ,.L1                ;JUMP TO LOADING
        LD	DE,TRD_REG           ;ELSE PREPARE FOR SAVING
        XOR	A
        LD	(DE),A       ;CLEAR TRD_REG: [0;255]
        INC	E
        JR	NZ,$-2
        LD	HL,TYTLE_T   ;1st 52 BYTES OF SLOT FILE ARE MARK
        LD	BC,51
        LDIR	
        LD	A,(DSK_MD2+1)
        LD	HL,REGS0     ;128K-State/Pos.1/Pos.2 REGS & VAR.S.
        OR	A                            ;MOVE TO BUFFER
        JR	Z,.L2
        LD	HL,REGS1
        DEC	A
        JR	Z,.L2
        LD	HL,REGS2
.L2      LD	DE,TRD_REG+0x40
        LD	BC,0x20
        LDIR	
.L1      LD	HL,TRD_REG           ;SAVE/LOAD 1 SECTOR
        LD	DE,(23796)
        LDA C,(TR_SVLD+1)
        LD	B,1
        XOR	A
        CALL	CAL3D13
        POP	AF
        RET	Z                   ;STOP IF SAVING
        LD	A,(DSK_MD2+1)        ;ELSE PREPAGE REGS & VAR.S
        LD	DE,REGS0     ;128K-State/Pos.1/Pos.2 REGS & VAR.S.
        OR	A                            ;MOVE FROM BUFFER
        JR	Z,.L3
        LD	DE,REGS1
        DEC	A
        JR	Z,.L3
        LD	DE,REGS2
.L3      LD	HL,TRD_REG+0x40
        LD	BC,0x20
        LDIR	
;        ENDL	
        JR	TRD_DOT

;---------------
;SLOT OPERATIONS
;---------------

NO_SLOT LD	A,0x30
        LD	(A_SLTNM+1),A
        LD	HL,NOSLT_T
        CALL	PRINTIN
        CALL	YESORNO
        JP	NZ,ERABORT

MAKSLOT LD	A,(DSK_MD3+1)        ;IF NOT ENOUGH FREE SECTORS
        LD	DE,513       ;NEED 513 FREE SECTORS
        LD	C,6          ;NEED 6 FREE FILES
        OR	A
        JR	Z,L1MKSLT
        LD	DE,193       ;NEED 193 FREE SECTORS
        LD	C,1          ;NEED 1 FREE FILE
L1MKSLT LD	HL,(TRD_CAT+0x8E5)
        SBC	HL,DE
        JR	NC,L2MKSLT
        LD	HL,EFRSC_T           ;THEN PRINT ERROR & EXIT
E_MKSLT LD	A,0x30
E_NO_UT CALL	PRINTIN
        CALL	ANTYKEY
        CALL	ANYKEY
        JP	ANTYKEY
L2MKSLT LD	(TRD_CAT+0x8E5),HL    ;DEC (FREE SECTORS)
        LDA B,(TRD_CAT+0x8E4)    ;IF NOT ENOUGH FREE FILES
        ADD	A,C
        LD	HL,EFRFL_T           ;THEN PRINT ERROR & EXIT
        CP	129
        JR	NC,E_MKSLT
        LD	(TRD_CAT+0x8E4),A     ;ADD (FILES NUMBER)

        LD	HL,TRD_CAT-16        ;HL=CAT. ADDR. FOR NEW FILES
        LD	DE,16
        INC	B
        ADD	HL,DE
        DJNZ	$-1
        EX	DE,HL
        LD	HL,ECRPT_T
        LD	A,(DE)               ;IF (1st SYMBOL) <> 0 TH ERROR
        OR	A
        JR	NZ,E_MKSLT
        EX	DE,HL
        LD	(A_CATAD+1),HL

        LD	A,(DSK_MD3+1)        ;"128]"/"48K]"
        LD	B,"]"
        LD	HL,MKSLT_T+32
        CALL	TR12848
        CALL	INPUT

        LD	HL,MKSLT_T+23        ;MOVE FILE NAME
A_CATAD LD	DE,0
        LD	BC,8
        LDIR	
        LD	HL,SLOT_P1           ;MOVE FILE ATTR
        LD	C,6
        LDIR	
        LD	B,193                ;MOVE FILE TRACK/SECTOR
        CALL	MAKFILE
        LD	A,(DSK_MD3+1)        ;IF ITS 48K TH THATS IT
        OR	A
        JR	NZ,EMAKSLT

A_SLTNM LD	BC,0x530      ;5 FILES, SLOT No.[0;9]
        INC	C
        LD	A,C
        CP	0x3A
        JR	NZ,$+4
        LD	C,0x30
        LD	HL,SLOT_P4   ;BANK NUMBERS
;        LOCAL	
.J1      PUSH	BC
	PUSH HL              ;MOVE FILE NAME
        LDA (DE),"s"    ;"s0"
        INC	E
        LDA (DE),C
        INC	E
        LD	HL,SLOT_P2   ;"bank"
        LD	BC,4
        LDIR	
        POP	HL
        LD	C,2          ;17/19/20/22/23
        LDIR	
        PUSH	HL
        LD	HL,SLOT_P3           ;MOVE FILE ATTR.
        LD	C,6
        LDIR	
        LD	B,64                 ;MOVE FILE TRACK/SECTOR
        CALL	MAKFILE
        POP	HL
        POP BC               ;NEXT FILE
        DJNZ	.J1
;        ENDL	

EMAKSLT LD	A,0x17        ;PRINT "Write Cat"
        LD	HL,TRCAT2T
        CALL	TRPRINT

        LD	HL,TRD_CAT           ;WRITE CAT
        LD	DE,0
        LD	BC,0x0906
        XOR	A
        CALL	CAL3D13

        LD	A,(DSK_MD1+1)        ;IF SAVE AFTER MAKING SLOT
        OR	A
        JP	Z,AFTEMAK
        RET	

;---

MAKFILE LD	HL,(TRD_CAT+0x8E1)    ;PUT 1st-FREE-TRACK/SECTOR
        LDA (DE),L
        INC	E
        LDA (DE),H
        INC	DE
;        LOCAL	
.J1      INC	L                   ;ADD (1st-FREE-TR./SC),B
        BIT	4,L
        JR	Z,.L1
        LD	L,0
        INC	H
.L1      DJNZ	.J1
        LD	(TRD_CAT+0x8E1),HL
;        ENDL	
        RET	

;---

INPUT   LD	A,0x30
        LD	HL,MKSLT_T
        CALL	PRINTIN
        CALL	ANTYKEY

        CALL	INKEY
        LD	A,C
        OR	A
        RET	Z
        DEC	A
        JR	Z,B_INPUT
        DEC	A
        JP	Z,ERABORT
A_INPUT LD	HL,MKSLT_T+23
        LD	(HL),C
        LD	A,L
        SUB	LOW (MKSLT_T);.MKSLT_T
        CP	23+7
        JR	Z,$+3
        INC	HL
B2INPUT LD	(A_INPUT+1),HL
        LD	(A_INPUT+1-TRD_REZ+TRDREZ1),HL
        JR	INPUT
B_INPUT LD	HL,(A_INPUT+1)
        LD	A,(HL)
        CP	32
        JR	NZ,B1INPUT
        LD	A,L
        SUB	LOW (MKSLT_T);.MKSLT_T
        CP	23
        JR	Z,$+3
        DEC	HL
B1INPUT LD	(HL)," "
        JR	B2INPUT

INKEY   key 0xFE                 ;CAPS?
        LD	HL,T2INKEY
        rjr L1INKEY
        key 0x7F
        LD	HL,T3INKEY           ;SYMB?
        RRA	
        rjr L1INKEY
        LD	HL,T1INKEY
L1INKEY key 0x7F                 ;" MNB"
        LD	C,(HL)
        INC	HL
        RRA	
        RET	NC
        RRA	
        LD	B,3
        CALL	S2INKEY
        LD	C,0xBF
        CALL	S1INKEY
        LD	C,0xDF
        CALL	S1INKEY
        LD	C,0xEF
        CALL	S1INKEY
        LD	C,0xF7
        CALL	S1INKEY
        LD	C,0xFB
        CALL	S1INKEY
        LD	C,0xFD
        CALL	S1INKEY
        key 0xFE
        RRA	
        LD	B,4
        CALL	S2INKEY
        JR	INKEY

S1INKEY key C
        LD	B,5
S2INKEY LD	C,(HL)
        INC	HL
        rjr E1INKEY
        DJNZ	S2INKEY
        RET	
E1INKEY POP	HL          ;DOUBLE-RET (EXIT CALL-INKEY)
        RET	

;---

SLTCURS LD	B,0
        LD	HL,0
        INC	B
        LD	DE,8
        OR	A
        SBC	HL,DE
        ADD	HL,DE
        DJNZ	$-1
        LD	B,8
        CALL	INFCUR1
        DJNZ	$-3
        RET	

TR12848 LD	DE,"21";"12"
        LD	C,"8"
        OR	A
        JR	Z,$+7
        LD	DE,"84";"48"
        LD	C,"K"
TR_DEBC LD	(HL),E
        INC	HL
        LD	(HL),D
        INC	HL
        LD	(HL),C
        INC	HL
        LD	(HL),B
        INC	HL
        RET	

;---

SLOT_P1 DB	"slt",0,0xC1,0xC1
SLOT_P2 DB	"bank"
SLOT_P3 DB	"slt",0,0x40,0x40
SLOT_P4 DB	"1719202223"
TRDOST1 DB	"128K-State"

T1INKEY DB	  " mnb",0,"lkjhpoiuy0987612345qwertasdfgzxcv"
T2INKEY DB	2,"MNB",0,"LKJHPOIUY",1,"____",2,"____"
        DB	                              "QWERTASDFGZXCV"
T3INKEY DB	  " .,*",0,"=+-^",34,";",127
        DB	                  "][_)('&!@#$%___<>~|\\{}:`?/"

;---

CAL3D13 PUSH	HL
	PUSH DE
	PUSH BC
	PUSH AF        ;ADVANCED CALL 0x3D13

        PUSH	HL
        PUSH DE
        PUSH BC
        PUSH AF
        mldir 23552,TRD_SYS,320
        POP	AF
        POP BC
        POP DE
        POP HL

        LD	(SP_3D13+1),SP
        PUSH	AF
        PUSH HL
        LDA (23746),195         ;ORG 23746: JP FN_3D13
        LD	HL,FN_3D13
        LD	(23747),HL
        POP	HL
        POP AF
        CALL	0x3D13              ;TRDOS
        LDA (23746),201         ;ORG 23746: RET
        POP	AF
        POP BC
        POP DE
        POP HL
        RET	

FN_3D13 POP	HL
        PUSH	HL
        PUSH DE
        PUSH AF
        EX	DE,HL
        LD	HL,3435      ;IF (CLS) TH IGNORE
        OR	A
        SBC	HL,DE
        JR	Z,IGN3D13
        LD	HL,16        ;IF (RST16) TH ERROR
        OR	A
        SBC	HL,DE
        JR	Z,SP_3D13
        LD	HL,0x1303     ;IF (0x1303) TH ERROR (R-Tape Loading...)
        OR	A
        SBC	HL,DE
        JR	Z,SP_3D13
        POP	AF
        POP DE       ;LET TRDOS USE BASIC
        RET	

IGN3D13 POP	AF
		POP DE
		POP HL
        RET	

SP_3D13 LD	SP,0                 ;DISK ERROR EXIT
        bank CSH_BNK
        LD	A,0x17
        LD	HL,TRERR_T   ;PRINT "ERROR"
        CALL	PRINTIN
        CALL	YESORNO
        JP	NZ,ERABORT           ;NO  - ABORT
        CALL	ANTYKEY            ;YES - RETRY
        CALL	INK3D13    ;PRINT LAST DISK MESSAGE
BNK3D13 bank 0
        mldir TRD_SYS,23552,320
        POP	AF
        POP BC
        POP DE
        POP HL
        JP	CAL3D13

eTRDREZ EQU	$-TRD_REZ
;		DEPHASE			;ENT	
;eTRDOS  EQU	$-TRDOS

