
;LAST UPDATE: 23.07.2017 savelij

;        MAIN	"CASH2_0.H",0x47

;-----------
;INFINITISER
;-----------

INFINIT XOR	A
        LD	(INFCURS+1),A
        LDA (ICURLEN+1),16
        LD	HL,0x5800
        LD	(ICURADR+1),HL
        LD	HL,INFIN_T
        LD	A,0x28
        CALL	SUBTYTL            ;TYTLE OUT

INF_MD1 LD	B,000                ;CURRENT MODE HI-LIGHT
        LD	DE,0x0B28
        CALL	SUBHILI
        madd L,12

INF_MD2 LD	A,001
        LD	B,A
        LD	C,9
        CP	3
        JR	C,L1INFMD
        LD	C,11
        SUB	3
        LD	B,A
        madd L,9

L1INFMD INC	B
        LD	DE,32
        ADD	HL,DE
        DJNZ	$-1

        LD	B,C
        LD	(HL),0x28
        INC	L
        DJNZ	$-3

K1INFMD key 0xF7         ;1-5 CH.MODE 2
        LD	BC,0x05FF
J1INFMD INC	C
        rjr L2INFMD
        DJNZ	J1INFMD
        key 0xEF         ;0 - CH.MODE 1
        rjr L3INFMD
        key 0x7F         ;NO - CANCEL
        BIT	3,A
        JP	Z,TYTMAIN
        key 0xDF         ;NOT YES - WAIT KEY
        BIT	4,A
        JR	NZ,K1INFMD

        LDA C,(INF_MD1+1);YES
        ADD	A,A         ;A=MD1*5+MD2
        ADD	A,A
        ADD	A,C
        LD	C,A
        LD	A,(INF_MD2+1)
        ADD	A,C
        ADD	A,A         ;HL=A*2+INFAN_t
        LD	D,0
        LD	E,A
        LD	HL,INFAN_t
        ADD	HL,DE
        LD	E,(HL)       ;PREPARE CALL (DE) IN INFANAL
        INC	HL
        LD	D,(HL)
        LD	(INFAADR+1),DE
        CALL	REM_SCR
        CALL	INFANAL
        LD	HL,0xC000             ;1st LINE OF DIFFERENCE TABLE
        LD	(INFINST+1),HL
        LD	(INFAOUT+1),HL
        CALL	INFVIEW
        CALL	REM_SCR
        CALL	ANTYKEY
        JP	TYTMAIN

L2INFMD LD	HL,INF_MD2+1
        LD	A,(HL)
        CP	C
        JR	Z,K1INFMD
        LD	(HL),C
L4INFMD CALL	ANTYKEY
        JP	INFINIT
L3INFMD LD	A,(INF_MD1+1)
        INC	A
        CP	3
        JR	NZ,$+3
        XOR	A
        LD	(INF_MD1+1),A
        JR	L4INFMD

;---

SUBTYTL CALL	PRINTIN
        CALL	NEXTSTR
        CALL	NEXTSTR
        CALL	TXTOUT5
        CALL	NEXTSTR
        CALL	TXTOUT5
        CALL	NEXTSTR
        CALL	TXTOUT5

SUBTYT1 LD	HL,(SYMOUT5+3)       ;HL=ATTR. ADDR. OF SUB OPTIONS
        LD	A,H
        SUB	0x40
        RRCA	
        RRCA	
        RRCA	
        OR	0x58
        LD	H,A
        LD	DE,95+32
        SBC	HL,DE
        RET	

SUBHILI PUSH	HL
	PUSH DE
	PUSH DE
        LD	DE,32
        INC	B
        ADD	HL,DE
        DJNZ	$-1

        POP	DE
        POP BC
        LD	(HL),C
        INC	L
        DJNZ	$-2

        POP	HL
        RET	

;---

INFANAL LD	IX,0xC000     ;MAKE TABLE OF ADDR.S OF CHANGING BYTES
        LD	BC,32765
        LD	L,DAT_BNK    ;IN BANK (DAT_BNK) 8912 DOUBLE-BYTES
        EXX	
        LD	HL,INFBADR
        LD	BC,0x15FF
        LD	(HL),C
        INC	HL
        DJNZ	$-2
        CALL	CLS_xL

        LD	HL,INFA_PT   ;PRINT "Searchin: [   ]"
        LD	DE,0x4000
        LD	A,8
        CALL	PRINTbd

        LD	A,16         ;48K SCAN
        CALL	HLIBUSH
        LD	HL,0x1580
        CALL	S1INFAN
        LD	HL,0x1240
        CALL	S1INFAN
        LD	HL,0x1000
        CALL	S1INFAN
        LD	A,17         ;BANKS SCAN
        CALL	HLIBUSH
        CALL	S1INFAN
        LD	A,19
        CALL	HLIBUSH
        CALL	S1INFAN
        LD	A,20
        CALL	HLIBUSH
        CALL	S1INFAN
        LD	A,22
        CALL	HLIBUSH
        CALL	S1INFAN
        LD	A,23
        CALL	HLIBUSH
        CALL	S1INFAN

        LD	A,IXH;HX         ;IF IX=0 TH IX-2
        OR	A
        JR	NZ,$+6
        DEC	IX
        DEC	IX

        PUSH	IX         ;PREPEAR FOR "JUMP TO END" FUNCTION
        POP	HL
        LD	DE,0xFFFE-42
        ADD	HL,DE
        LD	(ICUR_EN+1),HL

        LD	A,1
        CALL	HLIBUSH

        LD	IX,INFBADR   ;MAKE INF.BANK.ADDR.TABLE (21 BYTES MAX)
        LD	HL,0xC000
;        LOCAL	
.J1      LD	A,DAT_BNK
        CALL	BLOD
        LD	A,D
        OR	A
        CALL	Z,.L1
        LD	A,H
        OR	L
        JR	NZ,.J1
        RET	

.L1      LD	A,E
        CP	0x10
        RET	C
        LD	(IX),A
        INC	IX
        LD	(IX),L
        INC	IX
        LD	(IX),H
        INC	IX
;        ENDL	
        RET	

S1INFAN LDA (HLIPSUB+1),L       ;0x4-0x8-0xC000
        LD	A,H
        EXX	
        LD	H,A                  ;de',hl'-banks
        ADD	A,0x40
        LD	D,A
        ADD	A,0x80
        LD	E,A
        EXX	
        LD	HL,0xDB00             ;IF scr1 TH NO_SCR
        LD	A,(XX_BANK+1)
        BIT	3,A
        JR	NZ,L1INFAN
        LD	A,(HLIPSUB+1)
        CP	0x80
        JR	Z,$+4
L1INFAN LD	H,0xC0
J1INFAN CALL	READDEC
        LD	A,C
INFAADR CALL	0
        INC	HL
        LD	A,H
        OR	L
        JR	NZ,J1INFAN
PRINT_i LD	A,"."
        JP	SYMOUT5

SINF11  CP	D            ;P1<>P2<>128
        RET	Z
        CP	E
        RET	Z
        LD	A,E
        CP	D
        RET	Z
        JP	HLIPUSH
SINF12  INC	A           ;DEC
        CP	E
        RET	NZ
        INC	A
        CP	D
        RET	NZ
        JP	HLIPUSH
SINF13  DEC	A           ;INC
        CP	E
        RET	NZ
        DEC	A
        CP	D
        RET	NZ
        JP	HLIPUSH
SINF14  CP	E            ;SUB
        RET	NC
        LD	A,E
        CP	D
        RET	NC
        JP	HLIPUSH
SINF15  CP	E            ;ADD
        RET	Z
        RET	C
        LD	A,E
        CP	D
        RET	Z
        RET	C
        JP	HLIPUSH
SINF21  CP	D            ;P1=P2<>128
        RET	Z
L2SINF  LD	A,E
        CP	D
        RET	NZ
        JP	HLIPUSH
SINF22  INC	A           ;DEC
        CP	E
        RET	NZ
        JR	L2SINF
SINF23  DEC	A           ;INC
        CP	E
        RET	NZ
        JR	L2SINF
SINF24  CP	E            ;SUB
        RET	NC
        JR	L2SINF
SINF25  CP	E            ;ADD
        RET	Z
        RET	C
        JR	L2SINF
SINF31  LD	A,D          ;P1<>P2
        CP	E
        RET	Z
        JP	HLIPUSH
SINF32  INC	E           ;DEC
L3SINF  LD	A,D
        CP	E
        RET	NZ
        JP	HLIPUSH
SINF33  DEC	E           ;INC
        JR	L3SINF
SINF34  LD	A,E
        CP	D
L4SINF  RET	NC          ;SUB
        JP	HLIPUSH
SINF35  LD	A,D          ;ADD
        CP	E
        JR	L4SINF

INFAN_t DW	SINF11,SINF12,SINF13,SINF14,SINF15
        DW	SINF21,SINF22,SINF23,SINF24,SINF25
        DW	SINF31,SINF32,SINF33,SINF34,SINF35

HLIBUSH LD	H,A          ;PUT BANK TO (IX)
        LD	L,0
        PUSH	HL
        LD	H,L  ;HL=A
        LD	L,A
        XOR	A
        LD	(HLIPSUB+1),A
        CALL	HLIPUSH
        POP	HL
        RET	

;---

INFINST LD	HL,0xC000
;        LOCAL	
        LD	(.A1+1),HL
        LDA (A3INFDS+1),16
        LD	HL,0
        LD	(AINFDIS+1),HL
        cls 0x400,0x400           ;CLEAR LINK TABLE
        XOR	A                   ;1st LINE OF LINK TABLE
        LD	(INFDISO+1),A
.A1      LD	HL,0
.J1      LD	A,DAT_BNK            ;1st DIFF. ADDR.
        CALL	BLOD       ;DE=(INF.ADR.TABLE)
        LD	A,D          ;IF D<>0 TH DE=ADDR. GOTO LINK SEARCH
        OR	A
        JR	NZ,.L1
        LD	A,E          ;IF DE=0 TH EXIT
        OR	A
        RET	Z
        DEC	A           ;IF DE<>1 AND DE<>0 TH NEXT ADDR.
        JR	NZ,.J1
        RET	            ;IF DE=1 TH EXIT

.L1      LD	HL,(.A1+1)    ;SEARCH FOR BANK OF ADDR.
        LD	IX,INFBADR
.J2      INC	IX
        LD	C,(IX)
        INC	IX
        LD	B,(IX)
        INC	IX
        OR	A
        SBC	HL,BC
        ADD	HL,BC
        JR	NC,.J2
        LD	C,(IX-6)     ;C=BANK DE=ADDR.
        LD	IX,0x400
        LD	HL,23296
        LD	(AINFDIS+1),DE
        LD	A,D
        CP	0xC0
        JP	NC,INFCOMP   ;IF DE=>0xC000 TH SCAN ONLY 32K + BANK C

        PUSH	HL
        PUSH DE
        LD	HL,INFA_PT
        LD	DE,0x4011
        LD	A,6
        CALL	PRINTbd
        POP	DE
        POP HL

        LD	C,0x10        ;ELSE SCAN ALL BANKS
        CALL	.S2
        LD	C,0x11
        CALL	.S1
        LD	C,0x13
        CALL	.S1
        LD	C,0x14
        CALL	.S1
        LD	C,0x16
        CALL	.S1
        LD	C,0x17
.S1      LD	HL,0xBFFF
.S2      CALL	INFCOMP
        PUSH	DE
        CALL	PRINT_i
        POP	DE
;        ENDL	
        RET	

;---

INFVIEW CALL	INFINST
        LD	HL,0x4000
        CALL	PRINTHL
        LDA (SYMINK+1),0x28
        LD	HL,INFA_TY
        CALL	TXTOUT5
        CALL	SYM5CLR
        CALL	INK5

        CALL	INFDISO
L1INFVW CALL	INFAOUT
        CALL	INFCURS
KEYINFV CALL	halt
        key 0xFE         ;CAPS
        RRA	
        JR	C,L1KEYIV
        key 0x7F         ;BREAK - EXIT
        RRA	
        RET	NC
        key 0xF7         ;CS+1 - EXIT
        RRA	
        RET	NC
        RRA	
        rjp ICUR_LF     ;CS+3/4 - PAGE UP/DOWN
        rjp ICUR_RG
        key 0xEF
        rjp ICUR_LN     ;CS+0 - SEARCH LINKS
        RRA	
        rjp I_POKES     ;CS+8 - CURSOR TO DISASM PANEL
        rjr ICUR_UP     ;CS+7 - CURSOR UP
        rjr ICUR_DW     ;CS+6 - CURSOR DOWN
        JR	L2KEYIV
L1KEYIV key 0x7F
        rjp ICUR_LN     ;SPACE - SEARCH LINKS
        RRA	
        RRA	
        RRA	
        rjp ICUR_BG     ;B - JUMP TO BEGIN
        key 0xEF
        rjp ICUR_LN     ;0 - SEARCH LINKS
        rjr ICUR_UP     ;9 - CURSOR UP
        rjr ICUR_DW     ;8 - CURSOR DOWN
        rjp I_POKES     ;7 - CURSOR TO DISASM PANEL
        key 0xFB
        rjr ICUR_UP     ;Q - CURSOR UP
        rjp ILNK_UP     ;W - LINK UP
        rjr ICUR_EN     ;E - JUMP TO END
        key 0xFD
        rjr ICUR_DW     ;A - CURSOR DOWN
        rjp ILNK_DW     ;S - LINK DOWN
        key 0xBF
        rjp ICUR_LN     ;ENTER - SEARCH LINKS
        key 0xDF
        rjp I_POKES     ;P - CURSOR TO DISASM PANEL
L2KEYIV LDA (KEYHALT+1),10
        JP	KEYINFV

ICUR_UP LD	A,(INFCURS+1)
        LD	DE,0xFFFE
        OR	A
        JR	Z,ICUR_CH
        DEC	A
L1ICURU PUSH	AF
        CALL	INFCURS
        POP	AF
        LD	(INFCURS+1),A
        CALL	INFCURS
        CALL	KEYHALT
        JP	KEYINFV
ICUR_DW LD	A,(INFCURS+1)
        LD	DE,2
        CP	22
        JR	Z,ICUR_CH
        INC	A
        JR	L1ICURU

ICUR_BG LD	HL,0xC000
        JR	ICURCHE
ICUR_EN LD	HL,0
        LD	A,H
        CP	0xC0
        JR	C,ICUR_BG
        JR	ICURCHE

ICUR_LF LD	A,(INFCURS+1)
        LD	DE,0xFFFE-44
        OR	A
        JR	Z,ICUR_CH
        XOR	A
        JR	L1ICURU
ICUR_RG LD	A,(INFCURS+1)
        LD	DE,46
        CP	22
        JR	Z,ICUR_CH
        LD	A,22
        JR	L1ICURU
ICUR_CH LD	HL,(INFAOUT+1)
        ADD	HL,DE
        DEC	HL
        LD	A,H
        INC	HL
        CP	0xC0
        JR	NC,$+5
        LD	HL,0xC000
        LD	DE,44
        ADD	HL,DE
        LD	A,H
        OR	A
        JR	NZ,$+5
        LD	HL,0xFFFE
        OR	A
        SBC	HL,DE

ICURCHE EX	DE,HL
        LD	HL,(INFAOUT+1)
        OR	A
        SBC	HL,DE
        LD	A,H
        OR	L
        JP	Z,KEYINFV
        LD	(INFAOUT+1),DE
        JP	L1INFVW

ILNK_UP LD	A,(INFDISO+1)
        OR	A
        JP	Z,KEYINFV
        DEC	A
L1ILINK LD	(INFDISO+1),A
E1IPOKE CALL	REM_SC2
        CALL	INFDISO
        JP	KEYINFV
ILNK_DW LD	HL,(INFDISO+1)
        INC	L
        LD	C,L
        INC	L
        INC	L
        JP	Z,KEYINFV
        LD	A,(HL)
        INC	H
        OR	(HL)
        JP	Z,KEYINFV
        LD	A,C
        JR	L1ILINK

ICUR_LN LD	HL,(INFAOUT+1)
        LD	A,(INFCURS+1)
        INC	A
        ADD	A,A
        LD	B,A
        INC	HL
        DJNZ	$-1
        DEC	HL
        DEC	HL
        LD	(INFINST+1),HL
        CALL	REM_SC2
        CALL	INFINST
        CALL	INFDISO
        CALL	ANTYKEY
        JP	KEYINFV

KEYHALT LD	B,10
        LD	A,B
        OR	A
        RET	Z
J1KEYHT CALL	halt
        LD	A,1
        IN	A,(254)
        CPL	
        AND	31
        JR	NZ,L1KEYHT
        LD	A,10
        JR	L1KEYHT+3
L1KEYHT DJNZ	J1KEYHT
        XOR	A
        LD	(KEYHALT+1),A
        RET	

INFCURS LD	B,000
        INC	B
ICURADR LD	HL,0x5800
        LD	DE,32
        ADD	HL,DE
        DJNZ	$-1
ICURLEN LD	B,000
        CALL	INFCUR1
        DJNZ	$-3
        RET	

INFCUR1 LD	A,(HL)
        AND	7
        RLCA	
        RLCA	
        RLCA	
        LD	C,A
        LD	A,(HL)
        RRCA	
        RRCA	
        RRCA	
        AND	7
        OR	C
        LD	(HL),A
        INC	L
        RET	

INFCUR2 LD	B,001
        LD	HL,0x5811
        LD	DE,32
        ADD	HL,DE
        DJNZ	$-1
        LD	B,15
;        LOCAL	
.J1      LD	A,(HL)
        CP	5
        JR	Z,.L1
        CP	40
        RET	NZ
.L1      CALL	INFCUR1+1
        DJNZ	.J1
;        ENDL	
        RET	

;---

I_POKES LD	A,(0x782)
        OR	A
        JP	Z,KEYINFV
        CALL	INFCURS
        LD	A,(INFCURS+1)
        INC	A
        LD	C,A
        AND	7
        JR	NZ,$+3
        INC	C
L4INFVW LD	A,C
        CALL	IPOK_AD+3
        INC	L
        INC	L
        LD	A,(HL)
        OR	A
        LD	A,C
        JR	NZ,L3INFVW
        AND	0x18
        DEC	A
        LD	C,A
        JR	L4INFVW
L3INFVW LD	(INFCUR2+1),A
L2INFVW CALL	INFCUR2
KEYIPOK CALL	halt
        key 0xFE         ;CAPS
        RRA	
        JR	C,L1KEYIP
        key 0x7F         ;BREAK - EXIT
        RRA	
        RET	NC
        key 0xF7         ;CS+1 - EXIT
        RRA	
        RET	NC
        BIT	3,A
        JP	Z,IPOK_EX    ;CS+5 - TO ADDR.PANEL
        key 0xEF
        rjp IPOK_EN     ;CS+0 - AUTO POKE
        RRA	
        RRA	
        rjr IPOK_UP     ;CS+7 - CURSOR UP
        rjr IPOK_DW     ;CS+6 - CURSOR DOWN
        JR	L2KEYIP
L1KEYIP key 0x7F
        rjp IPOK_EN     ;SPACE - AUTO POKE
        key 0xEF
        rjp IPOK_EN     ;0 - AUTO POKE
        rjr IPOK_UP     ;9 - CURSOR UP
        rjr IPOK_DW     ;8 - CURSOR DW
        RRA	
        rjp IPOK_EX     ;6 - TO ADDR. PANEL
        key 0xFB
        rjr IPOK_UP     ;Q - CURSOR UP
        key 0xFD
        rjr IPOK_DW     ;A - CURSOR DOWN
        key 0xBF
        rjp IPOK_EN     ;ENTER - AUTO POKE
        key 0xDF         ;O - TO ADDR. PANEL
        RRA	
        rjr IPOK_EX
L2KEYIP LDA (KEYHALT+1),10
        JR	KEYIPOK

IPOK_UP LD	A,(INFCUR2+1)
        DEC	A
        JR	Z,IPLNKUP
        LD	C,A
        AND	7
        LD	A,C
        JR	NZ,$+3
        DEC	A
L1IPOKU PUSH	AF
        CALL	INFCUR2
        POP	AF
        LD	(INFCUR2+1),A
        CALL	INFCUR2
        CALL	KEYHALT
        JP	KEYIPOK
IPOK_DW LD	A,(INFCUR2+1)
        INC	A
        CP	24
        JR	Z,IPLNKDW
        LD	C,A
        AND	7
        LD	A,C
        JR	NZ,L1IPOKU
        INC	C
        CALL	IPOK_AD
        LD	E,5
        ADD	HL,DE
        LD	A,(HL)
        OR	A
        LD	A,C
        JR	NZ,L1IPOKU
        JP	KEYIPOK

IPLNKUP LD	A,(INFDISO+1)
        OR	A
        JP	Z,KEYIPOK
        DEC	A
        LD	(INFDISO+1),A
        CALL	REM_SC2
        CALL	INFDISO
        LD	A,7
        JP	L3INFVW
IPLNKDW LD	HL,(INFDISO+1)
        INC	L
        LD	C,L
        INC	L
        INC	L
        JP	Z,KEYIPOK
        LD	A,(HL)
        INC	H
        OR	(HL)
        JP	Z,KEYIPOK
        LD	A,C
        LD	(INFDISO+1),A
        CALL	REM_SC2
        CALL	INFDISO
        LD	A,17
        JP	L3INFVW

IPOK_EX CALL	INFCUR2
        LD	A,(INFCUR2+1)
        DEC	A
        LD	(INFCURS+1),A
        CALL	INFCURS
        JP	KEYINFV

IPOK_EN CALL	IPOK_AD

        LD	E,(HL)       ;HL=CODE ADDR. OF CURSOR
        INC	L
        LD	D,(HL)
        INC	L
        LD	C,(HL)       ;C=CODE BANK
        EX	DE,HL

        PUSH	HL
        LD	C,A          ;E=PEEK (HL): D=PEEK (HL+1)
        CALL	BLOD
        PUSH	DE
        LD	H,HIGH (T3DEASM);'T3DEASM
        LD	L,E
        LD	A,(HL)
        AND	0xF0
        RRCA	           ;HL=POKE_t+(A/8)
        RRCA	
        RRCA	
        LD	D,0
        LD	E,A
        LD	HL,POKE_t
        ADD	HL,DE
        LD	E,(HL)       ;HL=POKE PROG. ADDR.
        INC	HL
        LD	D,(HL)
        EX	DE,HL
        POP	DE
        JP	(HL)

POKES0  POP	HL          ;NOT CODE FOR POKE
        JP	L2KEYIP
POKES1  LD	E,0          ;??? > NOP
        JR	E_POKES
POKES2  INC	D           ;LD reg/(HL),N > LD reg/(HL),N+1
        JR	E_POKES
POKES3  POP	HL          ;POKE (HL),0,0,0
        LD	A,C
        LD	DE,0
        CALL	BPOKE
        DEC	HL
        JR	E_POKES+1
POKES4  LD	E,183        ;DEC/INC A > OR A
        JR	E_POKES
POKES5  LD	E,182        ;DEC/INC (HL) > OR (HL)
        JR	E_POKES
POKES6  LD	E,24         ;JR FLAG,+D > JR +D
        JR	E_POKES
POKES7  LD	E,195        ;JP FLAG,ADDR. > JP ADDR.
        JR	E_POKES
POKES8  LD	E,201        ;RET FLAG > RET
        JR	E_POKES
POKES9  LD	E,205        ;CALL FLAG > CALL
        JR	E_POKES
POKESA  LD	DE,0         ;POKE (HL),0,0
        JR	E_POKES
POKESB  LD	D,0          ;SUB N > SUB 0
        JR	E_POKES
POKESC  LD	A,D
        CP	182          ;OR (IX+D) > NOP,NOP,NOP
        JR	Z,POKES3
        LD	D,182        ;INC/DEC (IX+D) > OR (IX+D)
        SUB	52
        JR	Z,E_POKES
        DEC	A
        JR	NZ,POKES0
E_POKES POP	HL          ;POKE (HL),E: POKE (HL+1),D
        LD	A,C
        CALL	BPOKE
        CALL	REM_SC2
        CALL	INFDISO
        CALL	ANTYKEY
        JP	L2INFVW

POKE_t  DW	POKES0,POKES1,POKES2,POKES3,POKES4,POKES5
        DW	POKES6,POKES7,POKES8,POKES9,POKESA,POKESB
        DW	POKESC

IPOK_AD LD	A,(INFCUR2+1)        ;HL=0x780+3*CursorLineOfDisasm
        LD	HL,0x780-21-3
        LD	DE,21
        ADD	HL,DE
        SUB	8
        JR	NC,$-3
        AND	7
        INC	L
        INC	L
        INC	L
        DEC	A
        JR	NZ,$-4
        RET	

;---

INFDISO LD	HL,0x400      ;DISASSEMBLER OF 3 LINKS
;        LOCAL	
        LD	(.A1+1),HL
        LD	HL,0x780
        LD	(.L2+1),HL
        LD	HL,0x4031
        LD	(A2INFDS+1),HL

.A1      LD	HL,0
        LD	E,(HL)
        INC	H
        LD	D,(HL)
        INC	H
        LD	C,(HL)
        DEC	H
        DEC	H
        INC	L
        LD	(.A1+1),HL
        LD	A,D          ;DE=0 TH. STOP
        OR	E
        JR	NZ,.L1
        LD	A,(A2INFDS+2)
        CP	0x40
        RET	NZ
        LDA (A3INFDS+1),16
        CALL	SINFDIS
        LD	HL,LINK3_T
        CALL	TXTOUT5
        JP	INK5

.L1      EX	DE,HL        ;LDIR MEMORY FOR DISASM
        PUSH	HL
        LD	DE,0xFFFF-0x3F
        ADD	HL,DE
        LD	DE,0x700
        LDA (A3INFDS+1),C
        LD	BC,128
        CALL	INFLDIR
        POP	HL

        LD	A,(0x073F)    ;IS IT READ OR WRITE BY LINK ?
        DEC	HL
        LD	IX,0x073F
        SUB	34
        AND	0xEF

        LD	A,2          ;IF READ TH 2 LINES BACKWARD
        JR	NZ,$+4
        LD	A,4          ;ELSE - 4 LINES BACKWARD
        LD	(.A3+1),A

        LD	B,32
.J2      DEC	HL
        DEC	IX
        DJNZ	.J2

.J3      PUSH	IX
	PUSH HL
.A3      LD	B,0
.J4      PUSH	BC
        CALL	DISASM0
        POP	BC
        DJNZ	.J4
        LD	A,IXL;LX
        POP	HL
        POP IX
        CP	0x3F
        JR	NC,.L2
        CALL	DISASM0
        JR	.J3

.L2      LD	DE,0         ;STORE 7 DISASM LINES *3 (=21) BYTES:
        LD	B,7          ;LINE ORG (2 BYTES) + BANK (1 BYTE)
        PUSH	HL
        PUSH IX
.J1      PUSH	BC
        EX	DE,HL
        LD	(HL),E
        INC	L
        LD	(HL),D
        INC	L
        LD	A,(A3INFDS+1)
        LD	(HL),A
        INC	L
        EX	DE,HL
        CALL	DISASM0
        POP	BC
        DJNZ	.J1
        LD	(.L2+1),DE
        POP	IX

        CALL	SINFDIS    ;PRINT "Link No001."
        LD	HL,LINK2_T
        CALL	TXTOUT5
        LDA L,(.A1+1)
        CALL	NUM5_L+2
        LD	A,"."
        CALL	SYMOUT5
        CALL	INK5
        POP	HL

        LD	BC,0x700      ;PRINT DISASM OF 7 LINES
        LD	DE,(A2INFDS+1)
        PUSH	DE
        CALL	DISASM
        POP	HL
        madd H,0x8
        LD	(A2INFDS+1),HL
        CP	0x58
        JP	NZ,.A1
;        ENDL	
        RET	

SINFDIS LDA (SYMINK+1),48      ;PRINT "A.(16,25000"
A2INFDS LD	HL,0
        RES	5,L
        CALL	PRINTHL
        LD	HL,LINK1_T
        CALL	TXTOUT5
A3INFDS LD	L,16
        CALL	NUM5_L
        LD	A,","
        CALL	SYMOUT5
AINFDIS LD	HL,0
        JP	NUM5_HL+2

;---

INFAOUT LD	HL,0
        PUSH	HL
;        LOCAL	
        LD	IX,INFBADR
.J1      INC	IX
        LD	E,(IX)
        INC	IX
        LD	D,(IX)
        INC	IX
        OR	A
        SBC	HL,DE
        ADD	HL,DE
        JR	NC,.J1
        LD	A,(IX-6)
        ADD	A,0x40
        LD	(.A_BNK+1),A
        POP	HL
        LD	DE,0x4020
.J2      PUSH	HL
	PUSH DE
        CALL	.S1
        POP	DE
        POP HL
        INC	HL
        INC	HL
        madd E,0x20
        JR	NC,.J2
        madd D,8
        CP	0x58
        JR	NZ,.J2
        RET	

.S1      XOR	A
        LD	(SYMOUT5+1),A
        LD	(SYMOUT5+3),DE
        LD	A,DAT_BNK
        CALL	BLOD       ;DE=(INF.ADR.TABLE)
        LD	(.A_ADR+1),DE
        LD	A,D          ;IF D=0 TH E=BANK OR END MARK
        OR	A
        JR	Z,.S2
        LD	C,0x55
        CP	0x80
        JR	C,.L1
        LD	C,0x52
        CP	0xC0
        JR	C,.L1
.A_BNK   LD	C,0          ;DE=ADDR
.L1      LD	A,C
        PUSH	AF
        EX	DE,HL
        CALL	NUM5_HL    ;PRINT "ADDR:"
        LD	A,":"        ;
        CALL	SYMOUT5
        POP	AF
        LD	HL,.A1+1      ;P.1
        CALL	.S0
        PUSH	AF
        LD	A,">"
        CALL	SYMOUT5
        POP	AF
        ADD	A,0x80       ;P.2
        LD	HL,.A2+1
        CALL	.S0
        PUSH	AF
        LD	A,">"
        CALL	SYMOUT5
        POP	AF
        ADD	A,0x40       ;128K
        LD	HL,.A3+1
        CALL	.S0
        LD	BC,"[ ";" ["
        CALL	SYM5_BC
.A1      LD	BC,"> ";" >"
        CALL	SYM5_BC
.A2      LD	BC,"> ";" >"
        CALL	SYM5_BC
.A3      LD	BC,"] ";" ]"
        CALL	SYM5_BC
        JP	SYM5CLR

.S2      LD	A,E          ;DE=1 TH END OF LIST
        DEC	A
        JR	Z,.S3
        INC	A           ;DE=0 TH NOPS
        JR	Z,.S4
        PUSH	AF
        PUSH DE      ;DE=BANK
        LD	BC,0x700+'<'
        CALL	PRINT_C
        LD	BC,0x100+' '
        CALL	PRINT_C
        LD	HL,INFA_BT
        CALL	TXTOUT5
        POP	DE
        LD	L,E
        CALL	NUM5_L+2
        LD	BC," .";". "
        CALL	SYM5_BC
        LD	BC,0x700+'>'
        CALL	PRINT_C
        CALL	SYM5CLR
        POP	AF
        ADD	A,0x40
        LD	(.A_BNK+1),A
        RET	

.S3      LD	BC,0x600+'<'
        CALL	PRINT_C
        LD	BC,0x100+' '
        CALL	PRINT_C
        LD	HL,INFA_ET
        CALL	TXTOUT5
        LD	BC,0x500+'>'
        CALL	PRINT_C
        JP	SYM5CLR

.S4      LD	BC,0x1900+'.'
        CALL	SYM5CLR
        JP	PRINT_C

.S0      PUSH	AF
        LD	(.A0+1),A
        LD	(.A9+1),HL
.A_ADR   LD	HL,0
        LD	A,H  ;SET 6,7,H
        OR	0xC0
        LD	H,A
.A0      LD	A,0
        CALL	BLOD
.A9      LD	HL,0
        LD	(HL),E
        LD	L,E  ;L=PEEK
        LD	D,H  ;D<>"0"
        CALL	NUM5_L+2
        POP	AF
        RET	
;        ENDL	

eINFINT EQU	$-INFINIT



;--------
;UTILITER
;--------

UTILITE XOR	A                   ;INIT CURSOR
        LD	(INFCURS+1),A
        LDA (ICURLEN+1),32
        LD	HL,0x5800
        LD	(ICURADR+1),HL
        LD	HL,0x500
        LD	(A1_UTIL+1),HL

        CALL	INK5
        CALL	PRINTIn
        EX	DE,HL
        LD	HL,UTIL_PT   ;PRINT "Searchin: [   ]"
        LD	A,32
        CALL	PRINTbd

        cls 0x400,0x400           ;SEARCH UTILITES
        LD	HL,0x500
        LD	BC,32765
        EXX	
        LD	C,16
;        LOCAL	
.J4      LD	HL,0xC000
.J1      PUSH	HL
        LD	A,C
        CALL	BLOD
        LD	A,E          ;JR?
        CP	24
        JR	NZ,.L1
        LD	A,D          ;JR $+[0;63]?
        CP	64
        JR	NC,.L1
        EXA             ;A'=D of JR
        PUSH	BC
        LD	A,C
        LD	DE,0x400
        LD	BC,62
        CALL	INFLDIR
        POP	BC
        LD	HL,0x400
        LD	DE,UTIL_P1   ;"cash utilite"?
        LD	B,12
.J2      LD	A,(DE)
        CP	(HL)
        JR	NZ,.L1
        INC	DE
        INC	L
        DJNZ	.J2
        LD	B,42         ;NAME OF UTILITE?
.J3      LD	A,(HL)
        INC	L
        OR	A
        JR	Z,.L2
        CP	32
        JR	C,.L1
        CP	128
        JR	NC,.L1
        DJNZ	.J3
        JR	.L1

.L2      EXA             ;JR MUST JUMP OVER TEXT
        CP	L
        JR	NZ,.L1
        LD	A,C          ;UTILITE DETECTED
        EXX	
        POP	DE
        PUSH	DE
        LD	(HL),A       ;PUT UTIL ADDR. IN TABLE
        INC	H
        LD	(HL),E
        INC	H
        LD	(HL),D
        DEC	H
        DEC	H
        INC	L
        EXX	
        JR	NZ,.L1        ;IF FOUND 256 UTILITES TH STOP
        XOR	A
        LD	(0x5FF),A
        POP	DE
        JR	.L3

.L1      POP	HL          ;NEXT ADDR.
        madd L,32
        JR	NZ,.J1
        INC	H
        JR	NZ,.J1
        PUSH	BC
        CALL	PRINT_i
        POP	BC
        INC	C           ;NEXT BANK IN 128Kb.
        LD	A,C
        AND	7
        JR	NZ,.J4
        madd C,64-8      ;NEXT 128Kb BLOCK OF BANKS.
        JR	NC,.J4
.L3      LD	A,(0x500)     ;IF NO UTILITES FOUND TH PRINT "NO.."
        OR	A
        JR	NZ,.L4
        LD	HL,NO_UT_T
        LD	A,0x20
        CALL	E_NO_UT-TRD_REZ+TRDREZ1
        JP	TYTMAIN

.L4      LD	A,(0x503)     ;IF 1,2,3 UTILITES
;        ENDL	
        OR	A
        JP	Z,UTIL123

L1UTLVW CALL	REM_SCR
        LDA (SYMINK+1),32
        LD	HL,0x4000
        CALL	PRINTHL
        LD	HL,UTIL_T
        CALL	TXTOUT5
        CALL	NEXTSTR
        CALL	INK5

A1_UTIL LD	HL,000
        LD	B,22
;        LOCAL	
.J1      PUSH	BC
        CALL	UTILSTR
        POP	BC
        LD	A,(HL)
        OR	A
        JR	Z,.L1
        DJNZ	.J1
.L1      LDA (SYMINK+1),32
        LD	HL,UTIL_T
        CALL	TXTOUT5
        CALL	INK5
;        ENDL	

L2UTLVW CALL	INFCURS

KEYUTIL CALL	halt
        key 0xFE         ;CAPS
        RRA	
        JR	C,L1KEYUT
        key 0x7F         ;BREAK - EXIT
        RRA	
        JR	NC,UCUR_EX
        key 0xF7         ;CS+1 - EXIT
        RRA	
        JR	NC,UCUR_EX
        RRA	
        rjp UCUR_LF     ;CS+3/4 - PAGE UP/DOWN
        rjp UCUR_RG
        rjp UCUR_LF     ;CS+5 - PAGE UP
        key 0xEF
        RRA	
        RRA	
        rjp UCUR_RG     ;CS+8 - PAGE DOWN
        rjr UCUR_UP     ;CS+7 - CURSOR UP
        rjr UCUR_DW     ;CS+6 - CURSOR DOWN
        JR	L2KEYUT
L1KEYUT key 0x7F
        BIT	3,A
        JR	Z,UCUR_EX    ;N - EXIT
        BIT	4,A
        JP	Z,UCUR_BG    ;B - JUMP TO BEGIN
        key 0xEF
        RRA	
        rjr UCUR_UP     ;9 - CURSOR UP
        rjr UCUR_DW     ;8 - CURSOR DOWN
        rjr UCUR_RG     ;7 - CURSOR RIGHT
        key 0xFB
        rjr UCUR_UP     ;Q - CURSOR UP
        RRA	
        rjp UCUR_EN     ;E - JUMP TO END
        key 0xFD
        rjr UCUR_DW     ;A - CURSOR DOWN
        key 0xDF
        rjr UCUR_RG     ;P - CURSOR RIGHT
        rjr UCUR_LF     ;O - CURSOR LEFT
        BIT	2,A
        JP	Z,UCUR_Y     ;Y - CONFIRM

L2KEYUT LDA (KEYHALT+1),10
        JR	KEYUTIL

UCUR_EX CALL	ANTYKEY
        CALL	REM_SCR
        JP	TYTMAIN

UCUR_UP LD	A,(INFCURS+1)
        LD	DE,0x15EA
        OR	A
        JR	Z,UCUR_CH
        DEC	A
L1UCURU LD	D,A
        LD	HL,(A1_UTIL+1)
        madd L,D
        LD	A,(HL)
        OR	A
        LD	A,D
        JP	Z,KEYUTIL
        PUSH	AF
        CALL	INFCURS
        POP	AF
        LD	(INFCURS+1),A
        CALL	INFCURS
        CALL	KEYHALT
        JP	KEYUTIL

UCUR_DW LD	A,(INFCURS+1)
        LD	DE,22
        CP	21
        JR	Z,UCUR_CH
        INC	A
        JR	L1UCURU

UCUR_LF LD	A,(INFCURS+1)
        LD	DE,0xEA
        OR	A
        JR	NZ,UCUR1LF
        LD	A,(A1_UTIL+1)
        OR	A
        JR	NZ,UCUR_CH
        JP	KEYUTIL
UCUR1LF XOR	A
        JR	L1UCURU

UCUR_RG LD	A,(INFCURS+1)
        LD	DE,0x1516
        CP	21
        LD	A,(A1_UTIL+1)
        JR	NZ,UCUR1RG
        CP	220
        JR	Z,UCUR_EN
        JR	UCUR_CH
UCUR1RG CP	242
        JR	Z,UCUR_EN
        LD	E,0

UCUR_CH LD	HL,(A1_UTIL+1)
        madd L,E
        PUSH	HL
        madd L,D
        JR	C,E2UCURE
        LD	A,(HL)
        OR	A
        LD	A,L
        POP	HL
        JR	NZ,E1UCURE
        INC	A
        JR	NZ,UCUR_EN
        JP	KEYUTIL

E1UCURE LD	A,(A1_UTIL+1)
        CP	L
        LD	(A1_UTIL+1),HL
        LD	A,D
        JR	Z,L1UCURU
        LD	(INFCURS+1),A
        JP	L1UTLVW

UCUR_EN LD	HL,(A1_UTIL+1)
        PUSH	HL
        madd L,22
        JR	C,E2UCURE
        LD	A,(HL)
        OR	A
        JR	Z,E2UCURE
        POP	DE
        JR	UCUR_EN+3

E2UCURE POP	HL
        PUSH	HL
        LD	A,(HL)
        INC	L
        OR	A
        JP	Z,KEYUTIL
        LD	D,0xFF
;        LOCAL	
.J1      INC	D
        LD	A,(HL)
        INC	L
        OR	A
        JR	NZ,.J1
;        ENDL	
        POP	HL
        JR	E1UCURE

UCUR_BG LD	A,(A1_UTIL+1)
        OR	A
        JR	Z,UCUR_LF
        XOR	A
        LD	(A1_UTIL+1),A
        LD	(INFCURS+1),A
        JP	L1UTLVW

UCUR_Y  LD	HL,(A1_UTIL+1)       ;INIT. CALL UTILITE
        LD	A,(INFCURS+1)
        ADD	A,L
        LD	L,A
        LDA (UTILER+1),(HL)     ;BANK
        INC	H
        LD	E,(HL)               ;ADDR
        INC	H
        LD	D,(HL)
        LD	(UTILER1+1),DE
        LDA (ESC_COM+1),4
        LD	DE,0x1500+DAT_BNK     ;0x4000...0x7FFF > MEMORY
        CALL	COPY_B
        CALL	ANTYKEY
        JP	REM_SCR

UTIL123 LD	HL,UTIL_T
        LD	A,0x20
        CALL	PRINTIN
        CALL	NEXTSTR
        CALL	NEXTSTR

        LD	HL,0x500
        CALL	UTILSTR
        CALL	UTILSTR
        CALL	UTILSTR
        CALL	SUBTYT1
        DEC	HL
        LD	(ICURADR+1),HL
        JP	L2UTLVW

;---

UTILSTR PUSH	HL         ;PRINT AT (DE) UTILITE H=0x5; L=UT.NUM;
;        LOCAL	
        LD	A,(HL)
        OR	A
        JR	Z,.L3
        INC	H
        LD	E,(HL)
        INC	H
        LD	D,(HL)
        PUSH	DE
        PUSH AF
        EX	DE,HL
        LD	DE,0x400
        LD	BC,64
        CALL	INFLDIR
        LD	HL,0x440      ;BANK
        POP	AF
        CALL	NUMT_A
        LD	(HL),"\\"
        INC	L
        POP	DE
        CALL	NUMT_DE    ;ADDR.
        LD	(HL),":"
        INC	L
        LD	(HL)," "
        INC	L
        LD	B,40
        LD	DE,0x40E
.J2      LD	A,(DE)       ;UTIL. NAME
        OR	A
        JR	Z,.L1
        LD	(HL),A
        INC	E
        INC	L
        DJNZ	.J2
        JR	.L2

.L3      LD	HL,0x440
        LD	B,51
.L1      LD	(HL)," "
        INC	L
        DJNZ	.L1
.L2      LD	(HL),B
        LD	L,0x40
        CALL	TXTOUT5
        CALL	SYM5CLR
        CALL	NEXTSTR
        POP	HL
        INC	L
 ;       ENDL	
        RET	

;---

UTIL_P1 DB	"cash utilite"

;---

eUTILIT EQU	$-UTILITE



;---------------
;HELP_txt CALLER
;---------------

HELPER  LD	BC,32765
        EXX	
        LD	A,HLP_BNK
        LD	HL,0xC000
        CALL	BLOD
        PUSH	DE
        LD	A,HLP_BNK
        CALL	BLOD
        POP	BC

        LD	A,56
        LD	HL,HELPLEN   ;IS HELP VIEWER EXIST?
        OR	A
        SBC	HL,DE
        JR	NZ,L1_HELP
        LD	HL,"RH";"HR"
        OR	A
        SBC	HL,BC
        JR	Z,L2_HELP

L1_HELP LD	HL,HELP_T2   ;NO
        CALL	PRINTIN
        CALL	YESORNO
        JR	Z,$-3
        JP	TYTMAIN

L2_HELP LD	HL,HELP_T    ;YES
        CALL	PRINTIN
        CALL	YESORNO
        JP	NZ,TYTMAIN

        LD	HL,(SYMOUT5+3)
        madd L,0xF4
        CALL	PRINTHL

        LDA (SYMINK+1),57
        LD	HL,HELP_T1
        CALL	TXTOUT5
        CALL	INK5

        LD	DE,0x1200+DAT_BNK     ;STORE 0x8000...
        CALL	COPY_B
        LD	DE,0x1000+DT2_BNK     ;STORE 0xC000...
        CALL	COPY_B

        LD	DE,HLP_BNK*0x100+0x10  ;PUT COMPRESSED VIEWER AT 0xC000
        CALL	COPY_B
        mldir HLP_REZ,0x400,HLP_RZE-HLP_REZ       ;PUT REZIDENT
        mldir DEHRUST,0x500,0x100  ;PUT DEHRUST AT 0x500
        mldir FONT58,0x8000,0x800  ;PUT FONT AT 0x8000
        CALL	0x400               ;CALL RESIDENT (DEPACK & VIEW)

        LD	DE,DAT_BNK*0x100+0x12  ;RESTORE 0x8000...
        CALL	COPY_B
        LD	DE,DT2_BNK*0x100+0x10  ;RESTORE 0xC000...
        CALL	COPY_B
        CALL	REM_SCR
        JP	TYTMAIN

;---

HLP_REZ bank 16                 ;HELPER REZIDENT
        LD	HL,0xC000     ;DEPACK VIEWER
        LD	DE,0x8800
        CALL	0x500
        CALL	0x8800
        JP	B144RET
HLP_RZE

;---

eHELPER EQU	$-HELPER

